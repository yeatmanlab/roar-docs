import{_ as e,c as n,o as r,e as o}from"./app-BWpuP9iV.js";const t={},i=o('<h1 id="mirrorgroups" tabindex="-1"><a class="header-anchor" href="#mirrorgroups"><span>mirrorGroups()</span></a></h1><h4 id="mirrorgroups-generatemirrordocfunction" tabindex="-1"><a class="header-anchor" href="#mirrorgroups-generatemirrordocfunction"><span><a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/e784650492722d24069aa9b0704d1873ea5dafee/gse-roar-admin/functions/src/index.ts#L1123" target="_blank" rel="noopener noreferrer">mirrorGroups</a>, <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/e784650492722d24069aa9b0704d1873ea5dafee/gse-roar-admin/functions/src/index.ts#L1079" target="_blank" rel="noopener noreferrer">generateMirrorDocFunction</a></span></a></h4><h3 id="function-name" tabindex="-1"><a class="header-anchor" href="#function-name"><span>Function Name</span></a></h3><p><code>mirrorGroups</code></p><h3 id="trigger" tabindex="-1"><a class="header-anchor" href="#trigger"><span>Trigger</span></a></h3><p>This Cloud Function is triggered by document write events at the path <code>groups/{documentId}</code>. It handles creation, updates, and deletions of documents within the <code>groups</code> collection.</p><h3 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h3><ul><li><strong>Document Path</strong>: <code>groups/{documentId}</code><ul><li>This configuration specifies that the function should listen for write operations to any document within the <code>groups</code> collection.</li></ul></li><li><strong>Timeout</strong>: 180 seconds <ul><li>The function is allowed a generous timeout to handle data operations, which may involve significant data transfer or complex transformations.</li></ul></li></ul><h3 id="operation" tabindex="-1"><a class="header-anchor" href="#operation"><span>Operation</span></a></h3><p>The <code>mirrorGroups</code> function uses the generic <code>generateMirrorDocFunction</code> tailored for the <code>groups</code> collection. The operation involves:</p><ol><li><strong>Event Listening</strong>: Capturing write events (create, update, delete) to documents in the <code>groups</code> collection.</li><li><strong>Data Handling Strategy</strong>: <ul><li><strong>On Deletion</strong>: If a document is deleted (indicated by <code>snapshot.after.data()</code> being null), the corresponding document in the mirrored collection is also deleted to maintain consistency.</li><li><strong>On Creation/Update</strong>: If a document is created or updated, the new data from <code>snapshot.after.data()</code> is replicated in the specified mirrored collection using the same document ID.</li></ul></li></ol><h3 id="helper-function-generatemirrordocfunction" tabindex="-1"><a class="header-anchor" href="#helper-function-generatemirrordocfunction"><span>Helper Function: generateMirrorDocFunction</span></a></h3><ul><li><strong>Purpose</strong>: Generates a configured Firestore trigger function for mirroring changes to documents in a specified collection.</li><li><strong>Details</strong>: For the <code>mirrorGroups</code> function, it creates a specific handler that ensures any changes in the Firestore <code>groups</code> collection are immediately and accurately mirrored in another designated collection.</li></ul><h3 id="example-use-cases" tabindex="-1"><a class="header-anchor" href="#example-use-cases"><span>Example Use Cases</span></a></h3><ul><li><strong>Document Creation</strong>: When a new group is formed, perhaps indicating a new project team or a student study group, its details are mirrored to another collection which might be used for analytics or integration with other services.</li><li><strong>Document Update</strong>: Updates to group details (like membership changes or group name edits) are instantly reflected in the mirrored collection.</li><li><strong>Document Deletion</strong>: Removal of a group from the primary collection leads to its deletion from the mirrored collection, ensuring data consistency.</li></ul><h3 id="error-handling-and-security" tabindex="-1"><a class="header-anchor" href="#error-handling-and-security"><span>Error Handling and Security</span></a></h3><ul><li><strong>Error Handling</strong>: Implements robust error management strategies to handle possible issues during Firestore operations, such as write failures or unauthorized access errors.</li><li><strong>Security Considerations</strong>: <ul><li><strong>Permissions</strong>: Proper Firestore permissions must be set to allow the function read and write access to the necessary collections.</li><li><strong>Data Integrity</strong>: The function should include mechanisms to verify data integrity during the mirroring process, preventing corruption or unauthorized data manipulation.</li></ul></li></ul><h3 id="deployment-and-maintenance" tabindex="-1"><a class="header-anchor" href="#deployment-and-maintenance"><span>Deployment and Maintenance</span></a></h3><ul><li><strong>Deployment</strong>: Deploy using Firebase CLI or through the Firebase Console, making sure all necessary configurations and dependencies are correctly set.</li><li><strong>Maintenance</strong>: It&#39;s crucial to monitor the function&#39;s performance and error logs regularly. This helps in quickly identifying and rectifying issues related to data mirroring or function execution anomalies.</li></ul>',19),a=[i];function s(l,c){return r(),n("div",null,a)}const u=e(t,[["render",s],["__file","mirror-groups.html.vue"]]),g=JSON.parse('{"path":"/cloud-functions/gse-roar-admin/mirror-groups.html","title":"mirrorGroups()","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Function Name","slug":"function-name","link":"#function-name","children":[]},{"level":3,"title":"Trigger","slug":"trigger","link":"#trigger","children":[]},{"level":3,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":3,"title":"Operation","slug":"operation","link":"#operation","children":[]},{"level":3,"title":"Helper Function: generateMirrorDocFunction","slug":"helper-function-generatemirrordocfunction","link":"#helper-function-generatemirrordocfunction","children":[]},{"level":3,"title":"Example Use Cases","slug":"example-use-cases","link":"#example-use-cases","children":[]},{"level":3,"title":"Error Handling and Security","slug":"error-handling-and-security","link":"#error-handling-and-security","children":[]},{"level":3,"title":"Deployment and Maintenance","slug":"deployment-and-maintenance","link":"#deployment-and-maintenance","children":[]}],"git":{"updatedTime":1713301487000,"contributors":[{"name":"Kyle","email":"ksmontville@gmail.com","commits":1}]},"filePathRelative":"cloud-functions/gse-roar-admin/mirror-groups.md"}');export{u as comp,g as data};

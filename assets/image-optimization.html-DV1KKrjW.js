import{_ as a,c as s,d as n,o as i}from"./app-Bbb8BGqp.js";const t={};function l(r,e){return i(),s("div",null,e[0]||(e[0]=[n(`<h1 id="image-optimization-guide" tabindex="-1"><a class="header-anchor" href="#image-optimization-guide"><span>Image Optimization Guide</span></a></h1><h2 id="required-packages" tabindex="-1"><a class="header-anchor" href="#required-packages"><span>Required Packages</span></a></h2><h3 id="install-gsutil" tabindex="-1"><a class="header-anchor" href="#install-gsutil"><span>Install gsutil</span></a></h3><ol><li>Go to the <a href="https://cloud.google.com/storage/docs/gsutil_install" target="_blank" rel="noopener noreferrer">gsutil installation page</a>.</li><li>Select the operating system and platform that matches your computer, then download the appropriate file.</li><li>Open your terminal and navigate to the directory where you downloaded the uncompressed file. For example:<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> Downloads</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>Run the installation script:<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">./google-cloud-sdk/install.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>Respond <code>yes</code> to any prompts during the installation.</li></ul></li></ol><h3 id="install-homebrew" tabindex="-1"><a class="header-anchor" href="#install-homebrew"><span>Install Homebrew</span></a></h3><ol><li>Open your terminal and run the following command:<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">/bin/bash <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh<span class="token variable">)</span></span>&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>After the installation completes, install <code>wget</code> by running:<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">brew <span class="token function">install</span> <span class="token function">wget</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h2 id="copying-files-from-the-bucket" tabindex="-1"><a class="header-anchor" href="#copying-files-from-the-bucket"><span>Copying Files from the Bucket</span></a></h2><ol><li><p>Create a folder on your computer where you want to store the assets. In your terminal, use:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mkdir</span> New-Assets</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Replace <code>New-Assets</code> with your desired folder name.</p></li><li><p>In your browser, navigate to the bucket containing the assets you want to download.</p></li><li><p>Select the assets you want to download and click the <code>DOWNLOAD</code> button. The command should look something like this:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">gsutil <span class="token parameter variable">-m</span> <span class="token function">cp</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token string">&quot;gs://roar-swr/es/shared/ROAR-Palabra Instructional Video.mp4&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token string">&quot;gs://roar-swr/es/shared/arrow_left_p2.png&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token string">&quot;gs://roar-swr/es/shared/arrow_left_p2.webp&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token string">&quot;gs://roar-swr/es/shared/arrow_p3.png&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token string">&quot;gs://roar-swr/es/shared/arrow_p3.webp&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token string">&quot;gs://roar-swr/es/shared/arrow_right_p2.png&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token string">&quot;gs://roar-swr/es/shared/arrow_right_p2.webp&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token builtin class-name">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Copy the provided command for downloading the assets.</p></li><li><p>In your terminal, navigate to the folder you just created:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> New-Assets</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Paste the copied command into your terminal and press Enter.</p></li></ol><h2 id="optimize-images" tabindex="-1"><a class="header-anchor" href="#optimize-images"><span>Optimize Images</span></a></h2><h3 id="static-webp-images" tabindex="-1"><a class="header-anchor" href="#static-webp-images"><span>Static WebP Images</span></a></h3><p>To optimize static WebP images, use the following command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token keyword">for</span> <span class="token for-or-select variable">fn</span> <span class="token keyword">in</span> *.webp<span class="token punctuation">;</span> <span class="token keyword">do</span> cwebp <span class="token variable">$fn</span> <span class="token parameter variable">-q</span> <span class="token number">60</span> <span class="token parameter variable">-m</span> <span class="token number">6</span> <span class="token parameter variable">-mt</span> <span class="token parameter variable">-o</span> <span class="token variable">\${fn<span class="token operator">/</span>.webp<span class="token operator">/</span>.c.webp}</span><span class="token punctuation">;</span> <span class="token keyword">done</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="animated-webp-images" tabindex="-1"><a class="header-anchor" href="#animated-webp-images"><span>Animated WebP Images</span></a></h3><p>To convert and optimize animated GIFs to WebP, use the following command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token keyword">for</span> <span class="token for-or-select variable">fn</span> <span class="token keyword">in</span> *.gif<span class="token punctuation">;</span> <span class="token keyword">do</span> gif2webp <span class="token variable">$fn</span> <span class="token parameter variable">-min_size</span> <span class="token parameter variable">-lossy</span> <span class="token parameter variable">-f</span> <span class="token number">0</span> <span class="token parameter variable">-m</span> <span class="token number">6</span> <span class="token parameter variable">-q</span> <span class="token number">10</span> <span class="token parameter variable">-mt</span> <span class="token parameter variable">-o</span> <span class="token variable">\${fn<span class="token operator">/</span>.gif<span class="token operator">/</span>.c.webp}</span><span class="token punctuation">;</span> <span class="token keyword">done</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Feel free to adjust the values of <code>-f</code> and <code>-q</code>:</p><ul><li><code>-f 0</code>: Sets the filter strength to 0. Higher values can improve quality but increase file size. Setting it to 0 minimizes the file size.</li><li><code>-q 10</code>: Sets the quality factor to 10 (the range is 0 to 100). Lower values significantly reduce file size at the cost of image quality.</li></ul><p>The new images will have a <code>.c.webp</code> extension, allowing you to verify the compression results before making further changes.</p><h3 id="suggested-recommendations" tabindex="-1"><a class="header-anchor" href="#suggested-recommendations"><span>Suggested Recommendations</span></a></h3><p>We recommend using the default settings for converting GIF files. For more image conversion tips, refer to the <a href="https://developers.google.com/speed/webp/docs/gif2webp" target="_blank" rel="noopener noreferrer">Google Developers guide</a>.</p>`,20)]))}const p=a(t,[["render",l],["__file","image-optimization.html.vue"]]),c=JSON.parse('{"path":"/developer/assets-optimization/image-optimization.html","title":"Image Optimization Guide","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Required Packages","slug":"required-packages","link":"#required-packages","children":[{"level":3,"title":"Install gsutil","slug":"install-gsutil","link":"#install-gsutil","children":[]},{"level":3,"title":"Install Homebrew","slug":"install-homebrew","link":"#install-homebrew","children":[]}]},{"level":2,"title":"Copying Files from the Bucket","slug":"copying-files-from-the-bucket","link":"#copying-files-from-the-bucket","children":[]},{"level":2,"title":"Optimize Images","slug":"optimize-images","link":"#optimize-images","children":[{"level":3,"title":"Static WebP Images","slug":"static-webp-images","link":"#static-webp-images","children":[]},{"level":3,"title":"Animated WebP Images","slug":"animated-webp-images","link":"#animated-webp-images","children":[]},{"level":3,"title":"Suggested Recommendations","slug":"suggested-recommendations","link":"#suggested-recommendations","children":[]}]}],"git":{"updatedTime":1743546779000,"contributors":[{"name":"Elijah Kelly","username":"Elijah Kelly","email":"kellyel@stanford.edu","commits":1,"url":"https://github.com/Elijah Kelly"},{"name":"emily-ejag","username":"emily-ejag","email":"emily.artegar@gmail.com","commits":1,"url":"https://github.com/emily-ejag"}]},"filePathRelative":"developer/assets-optimization/image-optimization.md"}');export{p as comp,c as data};

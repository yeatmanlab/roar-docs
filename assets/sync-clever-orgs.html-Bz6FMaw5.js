import{_ as n,c as t,f as i,o as r}from"./app-FrdTVLMr.js";const a={};function o(s,e){return r(),t("div",null,e[0]||(e[0]=[i('<h1 id="synccleverorgs" tabindex="-1"><a class="header-anchor" href="#synccleverorgs"><span>syncCleverOrgs()</span></a></h1><h4 id="synccleverorgs-cleversyncorgs" tabindex="-1"><a class="header-anchor" href="#synccleverorgs-cleversyncorgs"><span><a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/e784650492722d24069aa9b0704d1873ea5dafee/gse-roar-admin/functions/src/index.ts#L76" target="_blank" rel="noopener noreferrer">syncCleverOrgs</a>, <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/main/gse-roar-admin/functions/src/clever-sync-orgs.ts" target="_blank" rel="noopener noreferrer">cleverSyncOrgs</a></span></a></h4><h4 id="todo-document-helper-functions-within-this-cloud-function" tabindex="-1"><a class="header-anchor" href="#todo-document-helper-functions-within-this-cloud-function"><span><strong>#TODO: Document helper functions within this cloud function.</strong></span></a></h4><h3 id="function-name" tabindex="-1"><a class="header-anchor" href="#function-name"><span>Function Name</span></a></h3><p><code>syncCleverOrgs</code></p><h3 id="trigger" tabindex="-1"><a class="header-anchor" href="#trigger"><span>Trigger</span></a></h3><p>This Cloud Function is triggered by an <code>onCall</code> event, meaning it is explicitly invoked by a client application, typically through an administrative interface or scheduled task.</p><h3 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h3><ul><li><strong>Timeout</strong>: 3600 seconds (1 hour) <ul><li>This extended timeout setting accommodates potentially lengthy operations involved in syncing large datasets from external sources such as Clever.</li></ul></li></ul><h3 id="operation" tabindex="-1"><a class="header-anchor" href="#operation"><span>Operation</span></a></h3><p>The function performs the following key operations:</p><ol><li><p><strong>Authentication and Authorization</strong>:</p><ul><li>Confirms that the request comes from an authenticated user by checking <code>request.auth.uid</code>.</li><li>Validates that the requesting user has <code>super_admin</code> privileges by examining custom claims in Firestore&#39;s <code>userClaims</code> collection.</li></ul></li><li><p><strong>Data Synchronization</strong>:</p><ul><li>Calls the <code>syncDistricts</code> function, passing the <code>shallow</code> flag, which dictates whether a shallow or deep sync should be performed. A shallow sync might fetch less data or perform fewer updates to reduce processing time and resource usage.</li></ul></li></ol><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h3><ul><li><strong>requesterUid</strong> (string): UID of the user making the request, obtained from the authenticated session.</li><li><strong>shallow</strong> (boolean): An optional parameter that controls the depth of the synchronization process, defaulting to true for a less intensive operation.</li></ul><h3 id="detailed-workflow" tabindex="-1"><a class="header-anchor" href="#detailed-workflow"><span>Detailed Workflow</span></a></h3><ul><li><p><strong>User Verification</strong>:</p><ul><li>Retrieves the custom claims for the requesting user to ensure they have the necessary administrative rights to perform data synchronization tasks.</li></ul></li><li><p><strong>Error Handling for Authorization</strong>:</p><ul><li>If the user does not have <code>super_admin</code> status, the function throws an <code>HttpsError</code> with the message &quot;permission-denied,&quot; indicating that the operation cannot proceed due to insufficient permissions.</li></ul></li><li><p><strong>Synchronization Execution</strong>:</p><ul><li>If the user is authorized, the function proceeds to invoke the <code>syncDistricts</code> function, which handles the specifics of the data synchronization with the Clever platform.</li></ul></li></ul><h3 id="error-handling-and-security-considerations" tabindex="-1"><a class="header-anchor" href="#error-handling-and-security-considerations"><span>Error Handling and Security Considerations</span></a></h3><ul><li><p><strong>Error Handling</strong>:</p><ul><li>Includes comprehensive checks for user authentication and authorization to prevent unauthorized access to the synchronization feature.</li><li>Proper error handling for external API interactions, ensuring that failures in data retrieval or processing are gracefully managed and logged.</li></ul></li><li><p><strong>Security</strong>:</p><ul><li>Ensures that only users with <code>super_admin</code> claims can trigger the synchronization, protecting sensitive operations from unauthorized access.</li><li>Implements robust validation of all incoming data and parameters to prevent injection attacks or other security vulnerabilities.</li></ul></li></ul><h3 id="deployment-and-maintenance" tabindex="-1"><a class="header-anchor" href="#deployment-and-maintenance"><span>Deployment and Maintenance</span></a></h3><p>This function is deployed automatically using GitHub actions, whenever changes are merged into the <code>main</code> branch.</p>',20)]))}const c=n(a,[["render",o],["__file","sync-clever-orgs.html.vue"]]),d=JSON.parse('{"path":"/developer/cloud-functions/gse-roar-admin/sync-clever-orgs.html","title":"syncCleverOrgs()","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Function Name","slug":"function-name","link":"#function-name","children":[]},{"level":3,"title":"Trigger","slug":"trigger","link":"#trigger","children":[]},{"level":3,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":3,"title":"Operation","slug":"operation","link":"#operation","children":[]},{"level":3,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]},{"level":3,"title":"Detailed Workflow","slug":"detailed-workflow","link":"#detailed-workflow","children":[]},{"level":3,"title":"Error Handling and Security Considerations","slug":"error-handling-and-security-considerations","link":"#error-handling-and-security-considerations","children":[]},{"level":3,"title":"Deployment and Maintenance","slug":"deployment-and-maintenance","link":"#deployment-and-maintenance","children":[]}],"git":{"updatedTime":1743546779000,"contributors":[{"name":"Elijah Kelly","username":"Elijah Kelly","email":"kellyel@stanford.edu","commits":2,"url":"https://github.com/Elijah Kelly"},{"name":"Kyle Montville","username":"Kyle Montville","email":"kmontvil@stanford.edu","commits":1,"url":"https://github.com/Kyle Montville"},{"name":"Adam Richie-Halford","username":"Adam Richie-Halford","email":"richford@users.noreply.github.com","commits":1,"url":"https://github.com/Adam Richie-Halford"},{"name":"Kyle","username":"Kyle","email":"ksmontville@gmail.com","commits":2,"url":"https://github.com/Kyle"}]},"filePathRelative":"developer/cloud-functions/gse-roar-admin/sync-clever-orgs.md"}');export{c as comp,d as data};

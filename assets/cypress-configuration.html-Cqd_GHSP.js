import{_ as s,c as a,d as e,o as p}from"./app-DfrXgkmt.js";const t={};function o(c,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="cypress-configuration" tabindex="-1"><a class="header-anchor" href="#cypress-configuration"><span>Cypress Configuration</span></a></h1><p>We can set up Cypress so that it can run tests against the Firebase Emulator Suite. This allows us to test the Firebase services that are used in the project locally and inspect the data that is being sent to the Firebase services.</p><h2 id="directory-structure" tabindex="-1"><a class="header-anchor" href="#directory-structure"><span>Directory Structure</span></a></h2><p>The following directory structure is used to configure Cypress to run tests against the Firebase Emulator Suite:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">cypress/</span>
<span class="line">├── e2e/</span>
<span class="line">│   ├── default-tests/</span>
<span class="line">│   │   ├── test1.cy.js</span>
<span class="line">│   │   ├── test2.cy.js</span>
<span class="line">│   │   ├── variant-tests/</span>
<span class="line">│   │   │   ├── test1.cy.js</span>
<span class="line">│   │   │   └── test2.cy.js</span>
<span class="line">│   ├── generateVariantTests.cy.js</span>
<span class="line">├── fixtures/</span>
<span class="line">│   ├── generatedTestTemplate.js</span>
<span class="line">│   ├── data1.json</span>
<span class="line">│   └── data2.json</span>
<span class="line">├── support/</span>
<span class="line">│   ├── commands.js</span>
<span class="line">│   ├── constants.js</span>
<span class="line">│   ├── devFirebase.js</span>
<span class="line">│   ├── devFirebaseConfig.js</span>
<span class="line">│   ├── e2e.js</span>
<span class="line">│   ├── query.js</span>
<span class="line">│   └── utils.js</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cypress-config-js" tabindex="-1"><a class="header-anchor" href="#cypress-config-js"><span>cypress.config.js</span></a></h2><p>The <code>cypress.config.js</code> file is used to configure the Cypress test runner. This file is located in the root of the project directory. The following configuration options are used to setup Cypress to run tests against the Firebase Emulator Suite:</p><p>Create or overwrite the <code>cypress.config.js</code> file with the following content:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// eslint-disable-next-line import/no-extraneous-dependencies</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;cypress&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> dotenv <span class="token keyword">from</span> <span class="token string">&#39;dotenv&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// eslint-disable-next-line import/no-extraneous-dependencies</span></span>
<span class="line"><span class="token keyword">import</span> cypressFsPlugin <span class="token keyword">from</span> <span class="token string">&#39;cypress-fs/plugins/index&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">dotenv<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;.env.test&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">projectId</span><span class="token operator">:</span> <span class="token string">&#39;app-project-id&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">e2e</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">experimentalRunAllSpecs</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">retries</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// eslint-disable-next-line no-unused-vars</span></span>
<span class="line">    <span class="token function">setupNodeEvents</span><span class="token punctuation">(</span><span class="token parameter">on<span class="token punctuation">,</span> config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token function">cypressFsPlugin</span><span class="token punctuation">(</span>on<span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">baseUrl</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">CYPRESS_BASE_URL</span> <span class="token operator">??</span> <span class="token string">&#39;http://localhost:8000&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">superAdminUsername</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">SUPER_ADMIN_USERNAME</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">superAdminPassword</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">SUPER_ADMIN_PASSWORD</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">superAdminEmail</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">SUPER_ADMIN_EMAIL</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">superAdminId</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">SUPER_ADMIN_ID</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">appCheckDebugToken</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">APPCHECK_DEBUG_TOKEN</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This configuration allows us to mainain a separate <code>.env.test</code> file for the Cypress environment variables. <br> The <code>projectId</code> is set to the project ID of the Cypress Cloud project which stores the test results. Substitute with the actualy projectId found in the <a href="https://cloud.cypress.io/organizations/ed07b9f9-d1f7-4784-953a-eecbb7303e36/projects" target="_blank" rel="noopener noreferrer">Cypress Cloud</a> for the project.<br> The <code>experimentalRunAllSpecs</code> is set to <code>true</code> to run all the tests. The <code>retries</code> is set to 2 to retry the tests if they fail. The <code>setupNodeEvents</code> is used to setup the <code>cypress-fs</code> plugin to allow Cypress to read and write files.<br> The <code>baseUrl</code> is set to the local server that is running the Firebase Emulator Suite. The <code>timeout</code> is set to 10 seconds. The <code>superAdminUsername</code>, <code>superAdminPassword</code>, <code>superAdminEmail</code>, <code>superAdminId</code>, and <code>appCheckDebugToken</code> are set to the environment variables that are used in the Cypress tests. <br> The <code>timeout</code> is set to 10 seconds to allow the tests to run for a longer period of time. <br> The <code>superAdminUsername</code>, <code>superAdminPassword</code>, <code>superAdminEmail</code>, <code>superAdminId</code>, and <code>appCheckDebugToken</code> are set to the environment variables that are used in the Cypress tests and are also stored as GitHub secrets.</p><h2 id="supporting-files" tabindex="-1"><a class="header-anchor" href="#supporting-files"><span>Supporting Files</span></a></h2><p>The following files are used to support the Cypress configuration, in addition to the Cypress provisioned <code>e2e.js</code>, and <code>commands.js</code>.</p><h3 id="constants-js" tabindex="-1"><a class="header-anchor" href="#constants-js"><span>constants.js</span></a></h3><p>The <code>constants.js</code> file is used to define constants that are used in the Cypress tests. This file is located in the <code>cypress/support/</code> directory.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">TIMEOUT</span> <span class="token operator">=</span> Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&#39;timeout&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">TASK</span> <span class="token operator">=</span> <span class="token string">&#39;task-name&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">TEST_DIR_NAME</span> <span class="token operator">=</span> <span class="token string">&#39;cypress/e2e/default-tests/variant-tests/&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">COMMAND</span> <span class="token operator">=</span> <span class="token string">&#39;play-game-command&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The contents of this file will vary depending on the app, but should at least contain the <code>TIMEOUT</code>, <code>TASK</code>, <code>TEST_DIR_NAME</code>, and <code>COMMAND</code> constants. Replace <code>task-name</code> with the name of the task that the variants are registered under. Replace <code>play-game-command</code> with the command that is used to play the game.</p><p>The <code>COMMAND</code> constant should be a Cypress command which initializes the game. The command should take an object as an argument, and this object should contain keys for variant parameters and language, with other keys as needed. <br> The command should be defined in the <code>commands.js</code> file.</p><h4 id="example-command-constant-for-roar-sentence" tabindex="-1"><a class="header-anchor" href="#example-command-constant-for-roar-sentence"><span>Example COMMAND constant for ROAR Sentence:</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">Cypress<span class="token punctuation">.</span>Commands<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&#39;playSREGame&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    startText <span class="token operator">=</span> <span class="token constant">START_TEXT_DEFAULT</span><span class="token punctuation">,</span></span>
<span class="line">    endText <span class="token operator">=</span> <span class="token constant">END_TEXT_DEFAULT</span><span class="token punctuation">,</span></span>
<span class="line">    language <span class="token operator">=</span> <span class="token string">&#39;en&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    variantParams <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>variantParams<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      cy<span class="token punctuation">.</span><span class="token function">visit</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&#39;baseUrl&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>variantParams<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token constant">TIMEOUT</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">      cy<span class="token punctuation">.</span><span class="token function">visit</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&#39;baseUrl&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token constant">TIMEOUT</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    cy<span class="token punctuation">.</span><span class="token function">playIntro</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">startText</span><span class="token operator">:</span> startText<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">variantParams</span><span class="token operator">:</span> variantParams<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    cy<span class="token punctuation">.</span><span class="token function">playSRELoop</span><span class="token punctuation">(</span>endText<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="generatevarianttests-cy-js" tabindex="-1"><a class="header-anchor" href="#generatevarianttests-cy-js"><span>generateVariantTests.cy.js</span></a></h3><p>The <code>generateVariantTests.cy.js</code> file is used to generate the test cases for the variants. This file is located in the <code>cypress/</code> directory at the top level. The following content is used to generate the test cases for the variants:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> getRegisteredVariants <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../support/query&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useDevFirebase<span class="token punctuation">,</span> signInAsSuperAdmin<span class="token punctuation">,</span> mapVariantParameters <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../support/utils&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> generatedTestTemplate <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../fixtures/generatedTestTemplate&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">TIMEOUT</span><span class="token punctuation">,</span> <span class="token constant">TASK</span><span class="token punctuation">,</span> <span class="token constant">TEST_DIR_NAME</span><span class="token punctuation">,</span> <span class="token constant">COMMAND</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../support/constants&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> auth<span class="token punctuation">,</span> db <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDevFirebase</span><span class="token punctuation">(</span><span class="token string">&#39;assessmentDev&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;Generating variant tests.&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">before</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">signInAsSuperAdmin</span><span class="token punctuation">(</span>auth<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;Creates a test spec for each variant.&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    cy<span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token function">getRegisteredVariants</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span> <span class="token constant">TASK</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token constant">TIMEOUT</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">docs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      docs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">variant</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        cy<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Found registered variant: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>variant<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> with params: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>variant<span class="token punctuation">.</span>params<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">const</span> variantParams <span class="token operator">=</span> <span class="token function">mapVariantParameters</span><span class="token punctuation">(</span>variant<span class="token punctuation">.</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Create a test spec for each registered variant</span></span>
<span class="line">        cy<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span></span>
<span class="line">          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">TEST_DIR_NAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>variant<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.cy.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token function">generatedTestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">command</span><span class="token operator">:</span> <span class="token constant">COMMAND</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">name</span><span class="token operator">:</span> variant<span class="token punctuation">.</span>name<span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">params</span><span class="token operator">:</span> variantParams<span class="token punctuation">,</span></span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          cy<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Successfully created test spec:&#39;</span><span class="token punctuation">,</span> variant<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="generatedtesttemplate-js" tabindex="-1"><a class="header-anchor" href="#generatedtesttemplate-js"><span>generatedTestTemplate.js</span></a></h3><p>The <code>generatedTestTemplate.js</code> file is used to generate the test template for the variants. This file is located in the <code>cypress/fixtures/</code> directory.</p><p>The following content is used to generate the test template for the variants:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">generatedTestTemplate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> command <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> params <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">describe(&#39;Test play through of variant: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;, () =&gt; {</span>
<span class="line">  it(&#39;Plays the generated test spec.&#39;, () =&gt; {</span>
<span class="line">    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>command<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">({</span>
<span class="line">        variantParams: &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>params<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;</span>
<span class="line">    });</span>
<span class="line">  });</span>
<span class="line">});</span>
<span class="line"></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="devfirebase-js" tabindex="-1"><a class="header-anchor" href="#devfirebase-js"><span>devFirebase.js</span></a></h3><p>The <code>devFirebase.js</code> file is used to setup the Firebase configuration for the Cypress tests. This file is located in the <code>cypress/support/</code> directory.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> getApps<span class="token punctuation">,</span> initializeApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;firebase/app&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> getFirestore<span class="token punctuation">,</span> connectFirestoreEmulator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;firebase/firestore&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> getAuth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;firebase/auth&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> devFirebaseConfig <span class="token keyword">from</span> <span class="token string">&#39;./devFirebaseConfig&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Initializes a Firebase app and retrieves the Auth and Firestore services.</span>
<span class="line"> * If the app with the specified name already exists, it reuses the existing app.</span>
<span class="line"> * Optionally connects to the Firestore emulator if \`useEmulator\` is true.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">config</span> - The Firebase configuration object.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">name</span> - The name of the Firebase app instance.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>boolean<span class="token punctuation">}</span></span> <span class="token parameter">useEmulator</span> - A flag indicating whether to connect to the Firestore emulator.</span>
<span class="line"> * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> - An object containing the Firebase app, Auth, and Firestore services.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">initializeAndGetFirebase</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">config<span class="token punctuation">,</span> name<span class="token punctuation">,</span> useEmulator</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> existingApp <span class="token operator">=</span> <span class="token function">getApps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">app</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> app<span class="token punctuation">.</span>name <span class="token operator">===</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>existingApp<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Found existing app:&#39;</span><span class="token punctuation">,</span> existingApp<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">const</span> app <span class="token operator">=</span> existingApp <span class="token operator">||</span> <span class="token function">initializeApp</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">getAuth</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> db <span class="token operator">=</span> <span class="token function">getFirestore</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>useEmulator<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Connecting to Firestore emulator...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">connectFirestoreEmulator</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span> <span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Connected to Firestore emulator.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    app<span class="token punctuation">,</span></span>
<span class="line">    auth<span class="token punctuation">,</span></span>
<span class="line">    db<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Retrieves the Firebase app, Auth, and Firestore services based on the given config key.</span>
<span class="line"> * It supports multiple environments (e.g., adminDev, assessmentDev) and connects to the Firestore emulator</span>
<span class="line"> * if \`useEmulator\` is true. Returns null if the specified config is not found.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">config</span> - The key for selecting the Firebase configuration (e.g., &#39;adminDev&#39;, &#39;assessmentDev&#39;).</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>boolean<span class="token punctuation">}</span></span> <span class="token optional-parameter"><span class="token punctuation">[</span><span class="token parameter">useEmulator</span><span class="token punctuation">=</span><span class="token code language-javascript"><span class="token boolean">true</span></span><span class="token punctuation">]</span></span> - A flag indicating whether to connect to the Firestore emulator.</span>
<span class="line"> * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token operator">|</span><span class="token keyword">null</span><span class="token punctuation">}</span></span> - An object containing the Firebase app, Auth, and Firestore services, or null if no config is found.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getDevFirebase</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">config<span class="token punctuation">,</span> useEmulator <span class="token operator">=</span> <span class="token boolean">true</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> configMap <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">adminDev</span><span class="token operator">:</span> devFirebaseConfig<span class="token punctuation">.</span>adminDev<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">assessmentDev</span><span class="token operator">:</span> devFirebaseConfig<span class="token punctuation">.</span>assessmentDev<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> firebaseConfig <span class="token operator">=</span> configMap<span class="token punctuation">[</span>config<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> firebaseConfig <span class="token operator">?</span> <span class="token function">initializeAndGetFirebase</span><span class="token punctuation">(</span>firebaseConfig<span class="token punctuation">,</span> config<span class="token punctuation">,</span> useEmulator<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="devfirebaseconfig-js" tabindex="-1"><a class="header-anchor" href="#devfirebaseconfig-js"><span>devFirebaseConfig.js</span></a></h3><p>The <code>devFirebaseConfig.js</code> file is used to store the Firebase configuration for the Cypress tests. This file is located in the <code>cypress/support/</code> directory.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> devFirebaseConfig <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">adminDev</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">apiKey</span><span class="token operator">:</span> <span class="token string">&#39;AIzaSyCl-JsYraUfofQZXpzshQ6s-E0nYzlCvvg&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">authDomain</span><span class="token operator">:</span> <span class="token string">&#39;gse-roar-admin-dev.firebaseapp.com&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">projectId</span><span class="token operator">:</span> <span class="token string">&#39;gse-roar-admin-dev&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">storageBucket</span><span class="token operator">:</span> <span class="token string">&#39;gse-roar-admin-dev.appspot.com&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">messagingSenderId</span><span class="token operator">:</span> <span class="token string">&#39;401455396681&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">appId</span><span class="token operator">:</span> <span class="token string">&#39;1:401455396681:web:859ea073a116d0aececc98&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">siteKey</span><span class="token operator">:</span> <span class="token string">&#39;6LeTgCEqAAAAAPVXEVtWoinVf_CLYF30PaETyyiT&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">debugToken</span><span class="token operator">:</span> Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&#39;appCheckDebugToken&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">assessmentDev</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">apiKey</span><span class="token operator">:</span> <span class="token string">&#39;AIzaSyCEUxEgYMp4fg2zORT0lsgn4Q6CCoMVzjU&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">authDomain</span><span class="token operator">:</span> <span class="token string">&#39;gse-roar-assessment-dev.firebaseapp.com&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">projectId</span><span class="token operator">:</span> <span class="token string">&#39;gse-roar-assessment-dev&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">storageBucket</span><span class="token operator">:</span> <span class="token string">&#39;gse-roar-assessment-dev.appspot.com&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">messagingSenderId</span><span class="token operator">:</span> <span class="token string">&#39;26086061121&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">appId</span><span class="token operator">:</span> <span class="token string">&#39;1:26086061121:web:262163d6c145b7a80bc2c0&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">siteKey</span><span class="token operator">:</span> <span class="token string">&#39;6Ldq2SEqAAAAAKXTxXs9GnykkEZLYeVijzAKzqfQ&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">debugToken</span><span class="token operator">:</span> Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&#39;appCheckDebugToken&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">emulatorPorts</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">db</span><span class="token operator">:</span> <span class="token number">8080</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">auth</span><span class="token operator">:</span> <span class="token number">9099</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">functions</span><span class="token operator">:</span> <span class="token number">9000</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">hosting</span><span class="token operator">:</span> <span class="token number">5000</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> devFirebaseConfig<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="query-js" tabindex="-1"><a class="header-anchor" href="#query-js"><span>query.js</span></a></h3><p>The <code>query.js</code> file is used to query the Firestore database. This file is located in the <code>cypress/support/</code> directory.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> collection<span class="token punctuation">,</span> getDocs<span class="token punctuation">,</span> query<span class="token punctuation">,</span> where <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;firebase/firestore&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getRegisteredVariants</span><span class="token punctuation">(</span><span class="token parameter">firestore<span class="token punctuation">,</span> task</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> variantsRef <span class="token operator">=</span> <span class="token function">collection</span><span class="token punctuation">(</span>firestore<span class="token punctuation">,</span> <span class="token string">&#39;tasks&#39;</span><span class="token punctuation">,</span> task<span class="token punctuation">,</span> <span class="token string">&#39;variants&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> q <span class="token operator">=</span> <span class="token function">query</span><span class="token punctuation">(</span>variantsRef<span class="token punctuation">,</span> <span class="token function">where</span><span class="token punctuation">(</span><span class="token string">&#39;registered&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;==&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> variantsSnapshot <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getDocs</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>variantsSnapshot<span class="token punctuation">.</span>empty<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;No registered variants found.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">const</span> docs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Found </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>variantsSnapshot<span class="token punctuation">.</span>size<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> registered variants.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    variantsSnapshot<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">doc</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      docs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>doc<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> docs<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Error getting documents:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="utils-js" tabindex="-1"><a class="header-anchor" href="#utils-js"><span>utils.js</span></a></h3><p>The <code>utils.js</code> file is used to define utility functions for the Cypress tests. This file is located in the <code>cypress/support/</code> directory.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> signInWithEmailAndPassword <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;firebase/auth&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> getDevFirebase <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./devFirebase&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Retrieves the Firebase app, Auth, and Firestore services for the specified environment.</span>
<span class="line"> * This function abstracts the process of accessing Firebase services based on the provided environment name.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">name</span> - The environment name (e.g., &#39;adminDev&#39;, &#39;assessmentDev&#39;) used to get the corresponding Firebase configuration.</span>
<span class="line"> * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> - An object containing the Firebase app, Auth, and Firestore services for the specified environment.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">useFirebaseEmulator</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> firebase <span class="token operator">=</span> <span class="token function">getDevFirebase</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">app</span><span class="token operator">:</span> firebase<span class="token operator">?.</span>app<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">auth</span><span class="token operator">:</span> firebase<span class="token operator">?.</span>auth<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">db</span><span class="token operator">:</span> firebase<span class="token operator">?.</span>db<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Signs in as a Super Admin using Firebase Authentication within a Cypress test.</span>
<span class="line"> * The credentials (email and password) are pulled from Cypress environment variables.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">auth</span> - The Firebase Auth instance used to sign in.</span>
<span class="line"> * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">&lt;</span>Object<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span> - A promise that resolves to the authenticated user object after a successful sign-in.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">signInAsSuperAdmin</span><span class="token punctuation">(</span><span class="token parameter">auth</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  cy<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span>
<span class="line">    <span class="token function">signInWithEmailAndPassword</span><span class="token punctuation">(</span>auth<span class="token punctuation">,</span> Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&#39;superAdminEmail&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&#39;superAdminPassword&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">userCredential</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> userCredential<span class="token punctuation">.</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Converts an object of variant parameters into a URL query string format.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">params</span> - The object containing variant parameters to be converted.</span>
<span class="line"> * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> - A string representing the variant parameters in URL query string format.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">mapVariantParameters</span><span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>params<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&amp;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,38)]))}const l=s(t,[["render",o],["__file","cypress-configuration.html.vue"]]),u=JSON.parse('{"path":"/developer/emulation/emulator-configuration-guide/cypress-configuration.html","title":"Cypress Configuration","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Directory Structure","slug":"directory-structure","link":"#directory-structure","children":[]},{"level":2,"title":"cypress.config.js","slug":"cypress-config-js","link":"#cypress-config-js","children":[]},{"level":2,"title":"Supporting Files","slug":"supporting-files","link":"#supporting-files","children":[{"level":3,"title":"constants.js","slug":"constants-js","link":"#constants-js","children":[]},{"level":3,"title":"generateVariantTests.cy.js","slug":"generatevarianttests-cy-js","link":"#generatevarianttests-cy-js","children":[]},{"level":3,"title":"generatedTestTemplate.js","slug":"generatedtesttemplate-js","link":"#generatedtesttemplate-js","children":[]},{"level":3,"title":"devFirebase.js","slug":"devfirebase-js","link":"#devfirebase-js","children":[]},{"level":3,"title":"devFirebaseConfig.js","slug":"devfirebaseconfig-js","link":"#devfirebaseconfig-js","children":[]},{"level":3,"title":"query.js","slug":"query-js","link":"#query-js","children":[]},{"level":3,"title":"utils.js","slug":"utils-js","link":"#utils-js","children":[]}]}],"git":{"updatedTime":1743546779000,"contributors":[{"name":"Elijah Kelly","username":"Elijah Kelly","email":"kellyel@stanford.edu","commits":1,"url":"https://github.com/Elijah Kelly"},{"name":"Kyle","username":"Kyle","email":"ksmontville@gmail.com","commits":3,"url":"https://github.com/Kyle"}]},"filePathRelative":"developer/emulation/emulator-configuration-guide/cypress-configuration.md"}');export{l as comp,u as data};

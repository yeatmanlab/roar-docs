import{_ as n,c as e,o as t,e as i}from"./app-CUQyeWdA.js";const a={},s=i('<h1 id="syncassignmentsonadministrationupdate" tabindex="-1"><a class="header-anchor" href="#syncassignmentsonadministrationupdate"><span>syncAssignmentsOnAdministrationUpdate()</span></a></h1><h4 id="syncassignmentsonadministrationupdate-syncadministrationsassignments" tabindex="-1"><a class="header-anchor" href="#syncassignmentsonadministrationupdate-syncadministrationsassignments"><span><a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/e784650492722d24069aa9b0704d1873ea5dafee/gse-roar-admin/functions/src/index.ts#L231" target="_blank" rel="noopener noreferrer">syncAssignmentsOnAdministrationUpdate</a>, <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/main/gse-roar-admin/functions/src/sync-administrations-assignments.ts" target="_blank" rel="noopener noreferrer">syncAdministrationsAssignments</a></span></a></h4><h4 id="todo-document-helper-functions-within-this-cloud-function" tabindex="-1"><a class="header-anchor" href="#todo-document-helper-functions-within-this-cloud-function"><span><strong>#TODO: Document helper functions within this cloud function.</strong></span></a></h4><h3 id="function-name" tabindex="-1"><a class="header-anchor" href="#function-name"><span>Function Name</span></a></h3><p><code>syncAssignmentsOnAdministrationUpdate</code></p><h3 id="trigger" tabindex="-1"><a class="header-anchor" href="#trigger"><span>Trigger</span></a></h3><p>This Cloud Function is triggered by any write event (creation, update, or deletion) on documents within the <code>administrations/{administrationId}</code> path in Firestore.</p><h3 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h3><ul><li><strong>Document Path</strong>: <code>administrations/{administrationId}</code><ul><li>This specifies the Firestore path that triggers the function.</li></ul></li><li><strong>Memory Allocation</strong>: 2 GiB <ul><li>The function is configured with a high memory allocation to handle potentially large data operations involved in processing administration documents.</li></ul></li></ul><h3 id="operation" tabindex="-1"><a class="header-anchor" href="#operation"><span>Operation</span></a></h3><p>The function executes different operations based on the nature of the document event:</p><ol><li><p><strong>Document Deletion</strong>:</p><ul><li>Handles the removal of administration-related data from organizational documents and user profiles.</li><li>Updates the creator&#39;s document to remove the administration from their list of created administrations.</li><li>Processes additional clean-up operations through <code>processRemovedAdministration</code>.</li></ul></li><li><p><strong>Document Creation</strong>:</p><ul><li>Assigns all relevant organizational users to the new administration.</li><li>This operation is managed by the <code>processNewAdministration</code> function which takes the new administration data and applies necessary updates.</li></ul></li><li><p><strong>Document Modification</strong>:</p><ul><li>Adjusts assignments and other related data based on changes in the administration document.</li><li>This is handled by <code>processModifiedAdministration</code>, which compares previous and current data to determine necessary updates.</li></ul></li></ol><h3 id="detailed-workflow" tabindex="-1"><a class="header-anchor" href="#detailed-workflow"><span>Detailed Workflow</span></a></h3><ul><li><p><strong>Document Deletion</strong>:</p><ul><li>Fetches previous data from the administration document.</li><li>Removes references to the deleted administration from associated organizational documents.</li><li>Optionally, updates the creator&#39;s document to reflect the removal of the administration.</li></ul></li><li><p><strong>Document Creation</strong>:</p><ul><li>Directly processes the new administration data to associate it with relevant organizational units and users.</li></ul></li><li><p><strong>Document Modification</strong>:</p><ul><li>Compares previous and current data to identify changes.</li><li>Updates organizational assignments and other related metrics as needed based on the changes detected.</li></ul></li></ul><h3 id="error-handling-and-security-considerations" tabindex="-1"><a class="header-anchor" href="#error-handling-and-security-considerations"><span>Error Handling and Security Considerations</span></a></h3><ul><li><p><strong>Error Handling</strong>:</p><ul><li>Includes error checks and logging at each step to ensure that failures in database operations are caught and handled gracefully.</li><li>Uses transactions and batch operations to ensure data integrity across multiple document updates.</li></ul></li><li><p><strong>Security</strong>:</p><ul><li>Ensures that the function operates under authenticated conditions and that operations are authorized based on user roles and permissions.</li><li>Validates all incoming data for consistency and to prevent unauthorized data manipulation.</li></ul></li></ul><h3 id="deployment-and-maintenance" tabindex="-1"><a class="header-anchor" href="#deployment-and-maintenance"><span>Deployment and Maintenance</span></a></h3><p>This function is deployed automatically using GitHub actions, whenever changes are merged into the <code>main</code> branch.</p><p>This function plays a critical role in maintaining the integrity and consistency of administration-related data. It ensures that user assignments reflect the most current state of administration documents.</p>',19),o=[s];function r(d,l){return t(),e("div",null,o)}const u=n(a,[["render",r],["__file","sync-assignments-on-administration-update.html.vue"]]),h=JSON.parse('{"path":"/cloud-functions/gse-roar-admin/sync-assignments-on-administration-update.html","title":"syncAssignmentsOnAdministrationUpdate()","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Function Name","slug":"function-name","link":"#function-name","children":[]},{"level":3,"title":"Trigger","slug":"trigger","link":"#trigger","children":[]},{"level":3,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":3,"title":"Operation","slug":"operation","link":"#operation","children":[]},{"level":3,"title":"Detailed Workflow","slug":"detailed-workflow","link":"#detailed-workflow","children":[]},{"level":3,"title":"Error Handling and Security Considerations","slug":"error-handling-and-security-considerations","link":"#error-handling-and-security-considerations","children":[]},{"level":3,"title":"Deployment and Maintenance","slug":"deployment-and-maintenance","link":"#deployment-and-maintenance","children":[]}],"git":{"updatedTime":1714409897000,"contributors":[{"name":"Kyle","email":"ksmontville@gmail.com","commits":1},{"name":"Kyle Montville","email":"kmontvil@stanford.edu","commits":1}]},"filePathRelative":"cloud-functions/gse-roar-admin/sync-assignments-on-administration-update.md"}');export{u as comp,h as data};

import{_ as a,r as n,o as r,c as o,a as e,b as i,d as s,e as l}from"./app-DOWqbjQg.js";const c={},d=e("h1",{id:"setuidclaims",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setuidclaims"},[e("span",null,"setuidclaims()")])],-1),u={id:"setuidclaims-setuidclaims",tabindex:"-1"},h={class:"header-anchor",href:"#setuidclaims-setuidclaims"},m={href:"https://github.com/yeatmanlab/roar-firebase-functions/blob/e784650492722d24069aa9b0704d1873ea5dafee/gse-roar-assessment/functions/src/index.ts#L25",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/yeatmanlab/roar-firebase-functions/blob/e784650492722d24069aa9b0704d1873ea5dafee/gse-roar-assessment/functions/src/set-custom-claims.ts#L42",target:"_blank",rel:"noopener noreferrer"},g=l('<h3 id="function-overview" tabindex="-1"><a class="header-anchor" href="#function-overview"><span>Function Overview</span></a></h3><h4 id="_1-setuidclaims" tabindex="-1"><a class="header-anchor" href="#_1-setuidclaims"><span>1. <strong>setUidClaims</strong></span></a></h4><p>This function is a core backend utility designed to update or set custom claims on a user&#39;s Firebase Authentication profile. It is crucial for integrating and synchronizing user identities across different segments of the ROAR platform.</p><h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h5><ul><li><strong>roarUid</strong>: The ROAR platform-specific user identifier.</li><li><strong>adminUid</strong>: The user&#39;s unique identifier in the ROAR admin Firebase project.</li><li><strong>assessmentUid</strong>: The user&#39;s unique identifier in the ROAR assessment Firebase project.</li></ul><h5 id="operation" tabindex="-1"><a class="header-anchor" href="#operation"><span>Operation</span></a></h5><ul><li>Retrieves the current custom claims of the user.</li><li>Merges new UIDs into the existing claims without overwriting other administrative claims.</li><li>Sets the updated claims on the user&#39;s Firebase Authentication profile.</li><li>Updates Firestore <code>userClaims</code> document with the new claims if necessary, handling both creation and updates of claims data.</li></ul><h4 id="_2-setuidclaims" tabindex="-1"><a class="header-anchor" href="#_2-setuidclaims"><span>2. <strong>setuidclaims</strong></span></a></h4><p>This is the Cloud Function that exposes <code>setUidClaims</code> as a callable function, enabling client applications to request updates to a user&#39;s UIDs and associated claims directly.</p><h5 id="trigger" tabindex="-1"><a class="header-anchor" href="#trigger"><span>Trigger</span></a></h5><ul><li><strong>Type</strong>: Callable function</li><li><strong>Authentication</strong>: Requires users to be authenticated to use their UID for updating claims.</li></ul><h3 id="detailed-workflow" tabindex="-1"><a class="header-anchor" href="#detailed-workflow"><span>Detailed Workflow</span></a></h3><ul><li><p><strong>User Request</strong>:</p><ul><li>A client application calls the <code>setuidclaims</code> function, passing necessary data such as <code>roarUid</code>, <code>adminUid</code>, and using the authenticated user&#39;s <code>assessmentUid</code>.</li></ul></li><li><p><strong>Claim Update Execution</strong>:</p><ul><li><code>setUidClaims</code> function is invoked with the provided UIDs.</li><li>Retrieves the user&#39;s current custom claims from Firebase Authentication.</li><li>Constructs new claims and checks for size limitations to ensure compliance with Firebase&#39;s storage constraints.</li><li>Updates the user&#39;s authentication profile with the new claims and synchronizes these changes in the Firestore <code>userClaims</code> document.</li></ul></li></ul><h3 id="error-handling-and-security-considerations" tabindex="-1"><a class="header-anchor" href="#error-handling-and-security-considerations"><span>Error Handling and Security Considerations</span></a></h3><ul><li><p><strong>Error Handling</strong>:</p><ul><li>Handles errors related to Firebase operations, such as fetching user data or writing to Firestore.</li><li>Catches and logs errors if the new custom claims exceed Firebase&#39;s storage size limit, throwing an appropriate <code>HttpsError</code>.</li></ul></li><li><p><strong>Security</strong>:</p><ul><li>Ensures that only authenticated users can modify their claims, protecting against unauthorized access and manipulation.</li><li>Validates the format and content of the custom claims to prevent injection attacks or other security vulnerabilities.</li></ul></li></ul><h3 id="deployment-and-maintenance" tabindex="-1"><a class="header-anchor" href="#deployment-and-maintenance"><span>Deployment and Maintenance</span></a></h3><p>This function is deployed automatically using GitHub actions, whenever changes are merged into the <code>main</code> branch.</p>',17);function f(b,v){const t=n("ExternalLinkIcon");return r(),o("div",null,[d,e("h4",u,[e("a",h,[e("span",null,[e("a",m,[i("setuidclaims"),s(t)]),i(", "),e("a",p,[i("setUidClaims"),s(t)])])])]),g])}const w=a(c,[["render",f],["__file","set-uid-claims.html.vue"]]),y=JSON.parse('{"path":"/cloud-functions/gse-roar-assessment/set-uid-claims.html","title":"setuidclaims()","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Function Overview","slug":"function-overview","link":"#function-overview","children":[]},{"level":3,"title":"Detailed Workflow","slug":"detailed-workflow","link":"#detailed-workflow","children":[]},{"level":3,"title":"Error Handling and Security Considerations","slug":"error-handling-and-security-considerations","link":"#error-handling-and-security-considerations","children":[]},{"level":3,"title":"Deployment and Maintenance","slug":"deployment-and-maintenance","link":"#deployment-and-maintenance","children":[]}],"git":{"updatedTime":1714409897000,"contributors":[{"name":"Kyle","email":"ksmontville@gmail.com","commits":1},{"name":"Kyle Montville","email":"kmontvil@stanford.edu","commits":1}]},"filePathRelative":"cloud-functions/gse-roar-assessment/set-uid-claims.md"}');export{w as comp,y as data};

import{_ as n,c as t,d as o,o as i}from"./app-Bp2p-J6b.js";const r={};function a(s,e){return i(),t("div",null,e[0]||(e[0]=[o('<h1 id="mirrorclasses" tabindex="-1"><a class="header-anchor" href="#mirrorclasses"><span>mirrorClasses()</span></a></h1><h4 id="mirrorclasses-mirrordoc" tabindex="-1"><a class="header-anchor" href="#mirrorclasses-mirrordoc"><span><a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/2cf12206a5f484cbd5525a0904becfe85ef1c1e0/gse-roar-admin/functions/src/index.ts#L1680" target="_blank" rel="noopener noreferrer">mirrorClasses</a>, <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/2cf12206a5f484cbd5525a0904becfe85ef1c1e0/gse-roar-admin/functions/src/index.ts#L1108" target="_blank" rel="noopener noreferrer">mirrorDoc</a></span></a></h4><h3 id="function-name" tabindex="-1"><a class="header-anchor" href="#function-name"><span>Function Name</span></a></h3><p><code>mirrorClasses</code></p><h3 id="trigger" tabindex="-1"><a class="header-anchor" href="#trigger"><span>Trigger</span></a></h3><p>This Cloud Function is triggered by Firestore document write events (including creation, updates, or deletions) at the path <code>classes/{documentId}</code>. It responds to any change made to documents within the <code>classes</code> collection.</p><h3 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h3><ul><li><strong>Document Path</strong>: <code>classes/{documentId}</code><ul><li>Specifies the Firestore path that triggers the function. Changes to any document within this path will initiate the function.</li></ul></li><li><strong>Timeout</strong>: 180 seconds <ul><li>The function is configured with an extended timeout to handle potentially complex or large data manipulations.</li></ul></li></ul><h3 id="operation" tabindex="-1"><a class="header-anchor" href="#operation"><span>Operation</span></a></h3><p>The <code>mirrorClasses</code> function is instantiated by <code>generateMirrorDocFunction</code> with <code>&quot;classes&quot;</code> as the target collection. It operates as follows:</p><ol><li><strong>Event Capture</strong>: Captures write events to documents in the <code>classes</code> collection.</li><li><strong>Data Handling</strong>: <ul><li><strong>Deletion</strong>: If a document is deleted (<code>snapshot.after.data()</code> returns null), the corresponding document in the mirrored collection is also deleted to ensure both collections remain in sync.</li><li><strong>Creation/Update</strong>: If a document is added or modified, the function retrieves the new document data and replicates it in the specified mirrored collection using the same document ID.</li></ul></li></ol><h3 id="example-execution-flow" tabindex="-1"><a class="header-anchor" href="#example-execution-flow"><span>Example Execution Flow</span></a></h3><ul><li><strong>Document Created/Updated</strong>: When a document in the <code>classes</code> collection is either created or updated, its content is mirrored to another collection designated for similar or related operational needs.</li><li><strong>Document Deleted</strong>: Corresponds to the removal of a class document, leading to an automatic deletion of its counterpart in the mirrored collection.</li></ul><h3 id="helper-function-generatemirrordocfunction" tabindex="-1"><a class="header-anchor" href="#helper-function-generatemirrordocfunction"><span>Helper Function: generateMirrorDocFunction</span></a></h3><ul><li><strong>Purpose</strong>: To dynamically generate a Firestore trigger function configured for a specific collection. This function is designed to handle document write events and ensure that changes are mirrored to a designated collection.</li><li><strong>Usage in <code>mirrorClasses</code></strong>: <ul><li>The function generated for the <code>classes</code> collection handles the synchronization tasks specifically for documents within this collection, as defined by the initial configuration passed to <code>generateMirrorDocFunction</code>.</li></ul></li></ul><h3 id="error-handling-and-security" tabindex="-1"><a class="header-anchor" href="#error-handling-and-security"><span>Error Handling and Security</span></a></h3><ul><li><strong>Error Handling</strong>: Includes mechanisms to handle null data cases (deletions) and errors during database operations, such as failed writes due to permission issues or network problems.</li><li><strong>Security Considerations</strong>: <ul><li><strong>Permissions</strong>: The function must have sufficient permissions to read from and write to both the source and the target Firestore collections.</li><li><strong>Data Integrity</strong>: Ensure robust validation and error-checking to maintain data consistency and integrity between the mirrored collections.</li></ul></li></ul><h3 id="deployment-and-maintenance" tabindex="-1"><a class="header-anchor" href="#deployment-and-maintenance"><span>Deployment and Maintenance</span></a></h3><p>This function is deployed automatically using GitHub actions, whenever changes are merged into the <code>main</code> branch.</p>',19)]))}const c=n(r,[["render",a],["__file","mirror-classes.html.vue"]]),d=JSON.parse('{"path":"/developer/cloud-functions/gse-roar-admin/mirror-classes.html","title":"mirrorClasses()","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Function Name","slug":"function-name","link":"#function-name","children":[]},{"level":3,"title":"Trigger","slug":"trigger","link":"#trigger","children":[]},{"level":3,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":3,"title":"Operation","slug":"operation","link":"#operation","children":[]},{"level":3,"title":"Example Execution Flow","slug":"example-execution-flow","link":"#example-execution-flow","children":[]},{"level":3,"title":"Helper Function: generateMirrorDocFunction","slug":"helper-function-generatemirrordocfunction","link":"#helper-function-generatemirrordocfunction","children":[]},{"level":3,"title":"Error Handling and Security","slug":"error-handling-and-security","link":"#error-handling-and-security","children":[]},{"level":3,"title":"Deployment and Maintenance","slug":"deployment-and-maintenance","link":"#deployment-and-maintenance","children":[]}],"git":{"updatedTime":1743546779000,"contributors":[{"name":"Elijah Kelly","username":"Elijah Kelly","email":"kellyel@stanford.edu","commits":1,"url":"https://github.com/Elijah Kelly"},{"name":"Kyle Montville","username":"Kyle Montville","email":"kmontvil@stanford.edu","commits":2,"url":"https://github.com/Kyle Montville"},{"name":"Adam Richie-Halford","username":"Adam Richie-Halford","email":"richford@users.noreply.github.com","commits":2,"url":"https://github.com/Adam Richie-Halford"},{"name":"Kyle","username":"Kyle","email":"ksmontville@gmail.com","commits":2,"url":"https://github.com/Kyle"}]},"filePathRelative":"developer/cloud-functions/gse-roar-admin/mirror-classes.md"}');export{c as comp,d as data};

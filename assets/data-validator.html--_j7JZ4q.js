import{_ as s,c as e,d as n,o as t}from"./app-DuNi5qR2.js";const o={};function l(i,a){return t(),e("div",null,a[0]||(a[0]=[n(`<h1 id="roar-data-validator" tabindex="-1"><a class="header-anchor" href="#roar-data-validator"><span>ROAR Data Validator</span></a></h1><p>The ROAR Data Validator is a Python function which takes raw data from Firestore, cleans and validates it, and then writes the data to a Google Cloud Bucket as a json file. From this bucket the function uploads the raw json data to Redivis where it is sorted by district id or group id.</p><p>The GitHub repository for the Data Validator can be found <a href="https://github.com/yeatmanlab/roar-data-validator" target="_blank" rel="noopener noreferrer">here.</a></p><p>The Data Validator function is deployed on Google Cloud and can be accessed at the following endpoint: <br><code>https://us-central1-gse-roar-admin.cloudfunctions.net/data-validator</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><p>The Data Validator function is triggered by a POST request to its http endpoint. The POST request may include the following parameters:</p><ul><li><code>lab_ids</code>: A list of lab ids to validate and upload to Redivis.</li><li><code>is_from_firestore</code>: A boolean indicating whether the data is coming from Firestore.</li><li><code>is_save_to_storage</code>: A boolean indicating whether the data should be saved to a Google Cloud Bucket.</li><li><code>is_upload_to_redivis</code>: A boolean indicating whether the data should be uploaded to Redivis.</li><li><code>is_release_to_redivis</code>: A boolean indicating whether the data should be released to Redivis.</li><li><code>is_from_guest</code>: A boolean indicating whether the data is coming from the Firestore <code>guests</code> collection.</li><li><code>is_test</code>: A boolean indicating whether the function is being run in test mode.</li><li><code>is_all_data</code>: A boolean indicating whether the function is being run in all data mode.</li></ul><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><h3 id="local-mode" tabindex="-1"><a class="header-anchor" href="#local-mode"><span>Local Mode</span></a></h3><p>The Data Validator can be run locally for testing purposes. This allows you to leverage <code>functions-framework</code> to run the function on a localhost port and pass in a small list of district ids to validate and upload to Redivis.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">functions-framework <span class="token parameter variable">--target</span><span class="token operator">=</span>data_validator <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">8080</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="remote-mode" tabindex="-1"><a class="header-anchor" href="#remote-mode"><span>Remote Mode</span></a></h3><p>Once uploaded to Google Cloud, the Data Validator can be run remotely by sending a POST request to the cloud function. This allows you to pass in a list of district ids to validate and upload to Redivis with the computations running on the cloud.</p><h3 id="guest-mode" tabindex="-1"><a class="header-anchor" href="#guest-mode"><span>Guest Mode</span></a></h3><p>Guest mode can be run locally or in remote mode. By passing in a json key <code>is_from_guest</code> with a value of <code>true</code>, the function will clean and validate all data from the Firestore <code>guests</code> collection and upload it to Redivis.</p><h3 id="all-data-mode" tabindex="-1"><a class="header-anchor" href="#all-data-mode"><span>All Data Mode</span></a></h3><p>All data mode can be run locally or in remote mode. By passing in a json key <code>is_all_data</code> with a value of <code>true</code>, the function will clean and validate all data from the Firestore <code>districts</code> collection and upload it to Redivis in a single dataset. This mode is still under development.</p><h2 id="sample-post-requests" tabindex="-1"><a class="header-anchor" href="#sample-post-requests"><span>Sample POST Requests</span></a></h2><h3 id="testing-locally-with-fixed-lab-ids" tabindex="-1"><a class="header-anchor" href="#testing-locally-with-fixed-lab-ids"><span>Testing Locally with Fixed Lab Ids</span></a></h3><p>Make sure that you are running the function locally with <code>functions-framework</code></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">functions-framework <span class="token parameter variable">--target</span><span class="token operator">=</span>data_validator <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">8080</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>POST</code> <code>http://localhost:8080</code> <br><code>Content-Type: application/json</code> <br><code>API-Key: [REDIVIS API KEY]</code></p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span> <span class="token property">&quot;lab_ids&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;HQFjwzLOBIgZmNlK4f0q&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;5ee2ff39f1eae600014d2a20&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bm6N82WFObiurGAKeJUv&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token property">&quot;is_from_firestore&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> </span>
<span class="line"><span class="token property">&quot;is_save_to_storage&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> </span>
<span class="line"><span class="token property">&quot;is_upload_to_redivis&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> </span>
<span class="line"><span class="token property">&quot;is_release_to_redivis&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token property">&quot;is_from_guest&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token property">&quot;is_test&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token property">&quot;is_all_data&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>}</p><h3 id="testing-locally-with-all-firestore-district-ids" tabindex="-1"><a class="header-anchor" href="#testing-locally-with-all-firestore-district-ids"><span>Testing Locally with all Firestore District Ids</span></a></h3><p>Make sure that you are running the function locally with <code>functions-framework</code></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">functions-framework <span class="token parameter variable">--target</span><span class="token operator">=</span>data_validator <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">8080</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>POST</code> <code>http://localhost:8080</code> <br><code>Content-Type: application/json</code> <br><code>API-Key: [REDIVIS API KEY]</code></p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span> <span class="token property">&quot;lab_ids&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token property">&quot;is_from_firestore&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> </span>
<span class="line"><span class="token property">&quot;is_save_to_storage&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> </span>
<span class="line"><span class="token property">&quot;is_upload_to_redivis&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> </span>
<span class="line"><span class="token property">&quot;is_release_to_redivis&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token property">&quot;is_from_guest&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token property">&quot;is_test&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token property">&quot;is_all_data&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="testing-remotely-with-all-firestore-district-ids" tabindex="-1"><a class="header-anchor" href="#testing-remotely-with-all-firestore-district-ids"><span>Testing Remotely with all Firestore District Ids</span></a></h3><p><code>POST</code> <code>https://us-central1-gse-roar-admin.cloudfunctions.net/data-validator</code> <br><code>Content-Type: application/json</code> <br><code>API-Key: [REDIVIS API KEY]</code></p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span> <span class="token property">&quot;lab_ids&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token property">&quot;is_from_firestore&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> </span>
<span class="line"><span class="token property">&quot;is_save_to_storage&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> </span>
<span class="line"><span class="token property">&quot;is_upload_to_redivis&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> </span>
<span class="line"><span class="token property">&quot;is_release_to_redivis&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token property">&quot;is_from_guest&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token property">&quot;is_test&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token property">&quot;is_all_data&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32)]))}const r=s(o,[["render",l],["__file","data-validator.html.vue"]]),c=JSON.parse('{"path":"/developer/roar-redivis/data-validator.html","title":"ROAR Data Validator","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[{"level":3,"title":"Local Mode","slug":"local-mode","link":"#local-mode","children":[]},{"level":3,"title":"Remote Mode","slug":"remote-mode","link":"#remote-mode","children":[]},{"level":3,"title":"Guest Mode","slug":"guest-mode","link":"#guest-mode","children":[]},{"level":3,"title":"All Data Mode","slug":"all-data-mode","link":"#all-data-mode","children":[]}]},{"level":2,"title":"Sample POST Requests","slug":"sample-post-requests","link":"#sample-post-requests","children":[{"level":3,"title":"Testing Locally with Fixed Lab Ids","slug":"testing-locally-with-fixed-lab-ids","link":"#testing-locally-with-fixed-lab-ids","children":[]},{"level":3,"title":"Testing Locally with all Firestore District Ids","slug":"testing-locally-with-all-firestore-district-ids","link":"#testing-locally-with-all-firestore-district-ids","children":[]},{"level":3,"title":"Testing Remotely with all Firestore District Ids","slug":"testing-remotely-with-all-firestore-district-ids","link":"#testing-remotely-with-all-firestore-district-ids","children":[]}]}],"git":{"updatedTime":1743546779000,"contributors":[{"name":"Elijah Kelly","username":"Elijah Kelly","email":"kellyel@stanford.edu","commits":1,"url":"https://github.com/Elijah Kelly"},{"name":"Kyle","username":"Kyle","email":"ksmontville@gmail.com","commits":2,"url":"https://github.com/Kyle"}]},"filePathRelative":"developer/roar-redivis/data-validator.md"}');export{r as comp,c as data};

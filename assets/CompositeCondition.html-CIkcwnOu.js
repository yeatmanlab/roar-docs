import{_ as l,c as s,a as o,e as i,f as r,b as t,d as a,r as d,o as p}from"./app-Ca7ae2ic.js";const c={};function f(u,e){const n=d("RouteLink");return p(),s("div",null,[o("p",null,[i(n,{to:"/developer/backend-architecture/api/"},{default:r(()=>e[0]||(e[0]=[o("strong",null,"@roar-firebase-functions/core",-1)])),_:1})]),e[9]||(e[9]=o("hr",null,null,-1)),o("p",null,[i(n,{to:"/developer/backend-architecture/api/"},{default:r(()=>e[1]||(e[1]=[t("@roar-firebase-functions/core")])),_:1}),e[2]||(e[2]=t(" / CompositeCondition"))]),e[10]||(e[10]=a('<h1 id="interface-compositecondition" tabindex="-1"><a class="header-anchor" href="#interface-compositecondition"><span>Interface: CompositeCondition</span></a></h1><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/models/condition.model.ts#L11" target="_blank" rel="noopener noreferrer">packages/core/src/models/condition.model.ts:11</a></p><p>Interface representing a condition based on a composite of other conditions. The conditions are combined using a logical operator. The conditions can be FieldConditions, CompositeConditions, or SelectAllConditions.</p><h2 id="see" tabindex="-1"><a class="header-anchor" href="#see"><span>See</span></a></h2>',4)),o("ul",null,[o("li",null,[i(n,{to:"/developer/backend-architecture/api/interfaces/FieldCondition.html"},{default:r(()=>e[3]||(e[3]=[t("FieldCondition")])),_:1})]),o("li",null,[i(n,{to:"/developer/backend-architecture/api/type-aliases/SelectAllCondition.html"},{default:r(()=>e[4]||(e[4]=[t("SelectAllCondition")])),_:1})])]),e[11]||(e[11]=o("h2",{id:"properties",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#properties"},[o("span",null,"Properties")])],-1)),e[12]||(e[12]=o("h3",{id:"conditions",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#conditions"},[o("span",null,"conditions")])],-1)),o("blockquote",null,[o("p",null,[e[6]||(e[6]=o("strong",null,"conditions",-1)),e[7]||(e[7]=t(": ")),i(n,{to:"/developer/backend-architecture/api/type-aliases/Condition.html"},{default:r(()=>e[5]||(e[5]=[o("code",null,"Condition",-1)])),_:1}),e[8]||(e[8]=t("[]"))])]),e[13]||(e[13]=a('<p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/models/condition.model.ts#L13" target="_blank" rel="noopener noreferrer">packages/core/src/models/condition.model.ts:13</a></p><hr><h3 id="op" tabindex="-1"><a class="header-anchor" href="#op"><span>op</span></a></h3><blockquote><p><strong>op</strong>: <code>&quot;AND&quot;</code> | <code>&quot;OR&quot;</code></p></blockquote><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/models/condition.model.ts#L12" target="_blank" rel="noopener noreferrer">packages/core/src/models/condition.model.ts:12</a></p>',5))])}const b=l(c,[["render",f],["__file","CompositeCondition.html.vue"]]),h=JSON.parse('{"path":"/developer/backend-architecture/api/interfaces/CompositeCondition.html","title":"Interface: CompositeCondition","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"See","slug":"see","link":"#see","children":[]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[{"level":3,"title":"conditions","slug":"conditions","link":"#conditions","children":[]},{"level":3,"title":"op","slug":"op","link":"#op","children":[]}]}],"git":{"updatedTime":1744657380000,"contributors":[{"name":"Kyle","username":"Kyle","email":"ksmontville@gmail.com","commits":1,"url":"https://github.com/Kyle"}]},"filePathRelative":"developer/backend-architecture/api/interfaces/CompositeCondition.md"}');export{b as comp,h as data};

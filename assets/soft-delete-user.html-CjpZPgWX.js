import{_ as t,c as n,d as o,o as i}from"./app-Ds8dDPdI.js";const r={};function l(s,e){return i(),n("div",null,e[0]||(e[0]=[o('<h1 id="softdeleteuser" tabindex="-1"><a class="header-anchor" href="#softdeleteuser"><span>softDeleteUser()</span></a></h1><h4 id="softdeleteuser-createsoftdeletecloudfunction" tabindex="-1"><a class="header-anchor" href="#softdeleteuser-createsoftdeletecloudfunction"><span><a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/e784650492722d24069aa9b0704d1873ea5dafee/gse-roar-admin/functions/src/index.ts#L1069" target="_blank" rel="noopener noreferrer">softDeleteUser</a>, <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/e784650492722d24069aa9b0704d1873ea5dafee/gse-roar-admin/functions/src/soft-delete.ts#L55" target="_blank" rel="noopener noreferrer">createSoftDeleteCloudFunction</a></span></a></h4><h3 id="function-name" tabindex="-1"><a class="header-anchor" href="#function-name"><span>Function Name</span></a></h3><p><code>softDeleteUser</code></p><h3 id="utility-functions-overview" tabindex="-1"><a class="header-anchor" href="#utility-functions-overview"><span>Utility Functions Overview</span></a></h3><h4 id="_1-constructtrigger" tabindex="-1"><a class="header-anchor" href="#_1-constructtrigger"><span>1. <strong>constructTrigger</strong></span></a></h4><p>This function dynamically constructs a Firestore trigger configuration based on specified collections.</p><ul><li><strong>Parameters</strong>: <ul><li><strong>triggerCollections</strong> (array of strings): A list of collection names that determine the Firestore path to be monitored.</li></ul></li><li><strong>Returns</strong>: <ul><li>An object of type <code>ITrigger</code> that includes: <ul><li><strong>collections</strong>: The original list of collection names.</li><li><strong>path</strong>: A constructed Firestore path that represents a document path pattern for the trigger.</li><li><strong>paramKeys</strong>: A list of parameter keys that will be extracted from the path during the trigger event.</li></ul></li></ul></li></ul><h4 id="_2-softdeletecollectionid" tabindex="-1"><a class="header-anchor" href="#_2-softdeletecollectionid"><span>2. <strong>softDeleteCollectionId</strong></span></a></h4><p>Generates a name for a &quot;deleted&quot; version of a collection.</p><ul><li><strong>Parameter</strong>: <ul><li><strong>collectionId</strong> (string): The original collection&#39;s identifier.</li></ul></li><li><strong>Returns</strong>: <ul><li>A string representing the corresponding &quot;deleted&quot; collection&#39;s name.</li></ul></li></ul><h4 id="_3-createdocrefs" tabindex="-1"><a class="header-anchor" href="#_3-createdocrefs"><span>3. <strong>createDocRefs</strong></span></a></h4><p>Constructs Firestore document references for both source and target documents based on given IDs.</p><ul><li><strong>Parameters</strong>: <ul><li><strong>db</strong> (Firestore): An instance of Firestore.</li><li><strong>collectionIds</strong> (array of strings): Original collection names.</li><li><strong>docIds</strong> (array of strings): Document identifiers corresponding to the collections.</li></ul></li><li><strong>Returns</strong>: <ul><li>An object containing Firestore document references for both the source and target paths.</li></ul></li></ul><h3 id="cloud-function-template-createsoftdeletecloudfunction" tabindex="-1"><a class="header-anchor" href="#cloud-function-template-createsoftdeletecloudfunction"><span>Cloud Function Template: createSoftDeleteCloudFunction</span></a></h3><ul><li><strong>Purpose</strong>: To create a Cloud Function configured to handle document deletions by copying deleted documents into a corresponding &quot;deleted&quot; collection.</li><li><strong>Input</strong>: <ul><li><strong>triggerCollections</strong> (array of strings): Specifies which collections to apply the soft delete functionality.</li></ul></li><li><strong>Operation</strong>: <ul><li>Utilizes <code>constructTrigger</code> to set up a Firestore document deletion trigger.</li><li>Upon triggering, retrieves the deleted document data and copies it to a newly constructed &quot;deleted&quot; collection path.</li></ul></li></ul><h3 id="example-cloud-function-softdeleteuser" tabindex="-1"><a class="header-anchor" href="#example-cloud-function-softdeleteuser"><span>Example Cloud Function: softDeleteUser</span></a></h3><h4 id="trigger" tabindex="-1"><a class="header-anchor" href="#trigger"><span>Trigger</span></a></h4><ul><li><strong>Path</strong>: Triggered by document deletions in the <code>users/{doc0}</code> path, automatically constructed by the utility functions to monitor the <code>users</code> collection for deletions.</li></ul><h4 id="process" tabindex="-1"><a class="header-anchor" href="#process"><span>Process</span></a></h4><ul><li><strong>Document Deletion</strong>: <ul><li>When a document in the <code>users</code> collection is deleted, the function captures the deletion event.</li><li>It constructs the document references for both the original and the corresponding &quot;deleted&quot; collection.</li><li>Copies the deleted document data from the <code>users</code> collection to <code>deleted-users</code>.</li></ul></li></ul><h3 id="error-handling-and-security-considerations" tabindex="-1"><a class="header-anchor" href="#error-handling-and-security-considerations"><span>Error Handling and Security Considerations</span></a></h3><ul><li><p><strong>Error Handling</strong>:</p><ul><li>Manages potential failures in document read or write operations, ensuring robust logging and error reporting.</li><li>Handles cases where the document might already be deleted or where document data is null.</li></ul></li><li><p><strong>Security</strong>:</p><ul><li>Ensures that the function operates under secure conditions, using authenticated instances of Firestore.</li><li>Validates paths and permissions to prevent unauthorized data manipulation.</li></ul></li></ul><h3 id="deployment-and-maintenance" tabindex="-1"><a class="header-anchor" href="#deployment-and-maintenance"><span>Deployment and Maintenance</span></a></h3><p>This function is deployed automatically using GitHub actions, whenever changes are merged into the <code>main</code> branch.</p>',25)]))}const c=t(r,[["render",l],["__file","soft-delete-user.html.vue"]]),d=JSON.parse('{"path":"/developer/cloud-functions/gse-roar-admin/soft-delete-user.html","title":"softDeleteUser()","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Function Name","slug":"function-name","link":"#function-name","children":[]},{"level":3,"title":"Utility Functions Overview","slug":"utility-functions-overview","link":"#utility-functions-overview","children":[]},{"level":3,"title":"Cloud Function Template: createSoftDeleteCloudFunction","slug":"cloud-function-template-createsoftdeletecloudfunction","link":"#cloud-function-template-createsoftdeletecloudfunction","children":[]},{"level":3,"title":"Example Cloud Function: softDeleteUser","slug":"example-cloud-function-softdeleteuser","link":"#example-cloud-function-softdeleteuser","children":[]},{"level":3,"title":"Error Handling and Security Considerations","slug":"error-handling-and-security-considerations","link":"#error-handling-and-security-considerations","children":[]},{"level":3,"title":"Deployment and Maintenance","slug":"deployment-and-maintenance","link":"#deployment-and-maintenance","children":[]}],"git":{"updatedTime":1743546779000,"contributors":[{"name":"Elijah Kelly","username":"Elijah Kelly","email":"kellyel@stanford.edu","commits":2,"url":"https://github.com/Elijah Kelly"},{"name":"Kyle Montville","username":"Kyle Montville","email":"kmontvil@stanford.edu","commits":1,"url":"https://github.com/Kyle Montville"},{"name":"Adam Richie-Halford","username":"Adam Richie-Halford","email":"richford@users.noreply.github.com","commits":1,"url":"https://github.com/Adam Richie-Halford"},{"name":"Kyle","username":"Kyle","email":"ksmontville@gmail.com","commits":2,"url":"https://github.com/Kyle"}]},"filePathRelative":"developer/cloud-functions/gse-roar-admin/soft-delete-user.md"}');export{c as comp,d as data};

import{_ as s,c as a,o as n,a as e,b as t}from"./app-BAvr4Ozq.js";const o={},i=e("h1",{id:"admin-database",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#admin-database"},[e("span",null,"Admin Database")])],-1),r=e("p",null,'ROAR maintains two separate Firestore databases. The "admin" Firestore contains personally identifiable information (PII), whereas the "assessment" Firestore contains deidentified assessment data. User data in the two databases are linked to by a shared ROAR unique identifier (UID).',-1),d=e("p",null,[t("In the context of ROAR's Firebase cloud functions, "),e("code",null,"gse-roar-admin"),t(" is a project that provides backend functionality for the administrative side of the ROAR platform. This project is responsible for managing user roles, permissions, and data synchronization between different Firestore collections. The functions in this project handle various administrative tasks, such as creating new user accounts, updating user roles, and synchronizing data across different Firestore collections and databases.")],-1),c=e("p",null,[t('Most of the ROAR Firebase cloud functions are housed in the project and these functions in this project may also access the "assessment" Firestore. When choosing the project in which to write new cloud functions, developers should default to the '),e("code",null,"gse-roar-admin"),t(" project and choose the "),e("code",null,"gse-roar-assessment"),t(" project only when necessary, for example, to use Firestore triggers on data that is stored in the assessment Firestore.")],-1),l=[i,r,d,c];function h(m,u){return n(),a("div",null,l)}const p=s(o,[["render",h],["__file","index.html.vue"]]),_=JSON.parse('{"path":"/cloud-functions/gse-roar-admin/","title":"Admin Database","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1714409297000,"contributors":[{"name":"Kyle","email":"ksmontville@gmail.com","commits":1},{"name":"Kyle Montville","email":"kmontvil@stanford.edu","commits":1}]},"filePathRelative":"cloud-functions/gse-roar-admin/README.md"}');export{p as comp,_ as data};

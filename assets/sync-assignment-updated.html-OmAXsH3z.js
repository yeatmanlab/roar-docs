import{_ as e,c as n,o as t,e as a}from"./app-BJVVi57W.js";const s={},i=a('<h1 id="syncassignmentupdated" tabindex="-1"><a class="header-anchor" href="#syncassignmentupdated"><span>syncAssignmentUpdated()</span></a></h1><h4 id="syncassignmentupdated-1" tabindex="-1"><a class="header-anchor" href="#syncassignmentupdated-1"><span><a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/e784650492722d24069aa9b0704d1873ea5dafee/gse-roar-admin/functions/src/index.ts#L640" target="_blank" rel="noopener noreferrer">syncAssignmentUpdated</a></span></a></h4><h3 id="function-name" tabindex="-1"><a class="header-anchor" href="#function-name"><span>Function Name</span></a></h3><p><code>syncAssignmentUpdated</code></p><h3 id="trigger" tabindex="-1"><a class="header-anchor" href="#trigger"><span>Trigger</span></a></h3><p>This Cloud Function is triggered by an update event on any document within the path <code>users/{roarUid}/assignments/{assignmentUid}</code>. It listens for changes to assignment documents and executes data synchronization based on those changes.</p><h3 id="operation" tabindex="-1"><a class="header-anchor" href="#operation"><span>Operation</span></a></h3><p>The function performs the following operations:</p><ol><li><p><strong>Data Retrieval</strong>:</p><ul><li>Extracts previous (<code>prevData</code>) and current (<code>currData</code>) data from the assignment document to determine changes.</li><li>Retrieves document paths and organizational data from the assignment.</li></ul></li><li><p><strong>Database Transactions</strong>:</p><ul><li><strong>Document Reference Setup</strong>: Establishes references to necessary documents within Firestore, including user documents and assignment statistics documents in the <code>administrations</code> collection.</li><li><strong>Statistics Update</strong>: Analyzes changes between previous and current data to adjust counters in organizational and assignment-level statistics.</li><li><strong>Status Updates</strong>: Updates the user&#39;s document to reflect changes in the assignment&#39;s status (e.g., started, completed) based on the data comparison.</li></ul></li></ol><h3 id="detailed-workflow" tabindex="-1"><a class="header-anchor" href="#detailed-workflow"><span>Detailed Workflow</span></a></h3><ul><li><p><strong>Initial Checks</strong>:</p><ul><li>Verifies that the document snapshot is valid and contains data to process.</li></ul></li><li><p><strong>Transaction Execution</strong>:</p><ul><li><strong>Organizational Changes</strong>: Identifies added or removed organizations and adjusts assignment counters accordingly. This includes handling counters for assigned, started, and completed statuses.</li><li><strong>Task Status Changes</strong>: Checks each task within the assignment for changes in status (e.g., from not started to started or from started to completed) and updates counters and user document fields accordingly.</li></ul></li></ul><h3 id="error-handling-and-security-considerations" tabindex="-1"><a class="header-anchor" href="#error-handling-and-security-considerations"><span>Error Handling and Security Considerations</span></a></h3><ul><li><p><strong>Error Handling</strong>:</p><ul><li>Manages errors during database transactions, ensuring that any issues are caught and handled appropriately. Logs errors and attempts retries up to a specified limit.</li><li>Provides robust handling of incomplete data or unexpected document structures to prevent erroneous data manipulation.</li></ul></li><li><p><strong>Security</strong>:</p><ul><li>Ensures that only authorized changes trigger the function, using Firestore security rules to restrict access based on user roles or document ownership.</li><li>Validates changes to sensitive data fields to ensure integrity and prevent unauthorized data modification.</li></ul></li></ul><h3 id="deployment-and-maintenance" tabindex="-1"><a class="header-anchor" href="#deployment-and-maintenance"><span>Deployment and Maintenance</span></a></h3><p>This function is deployed automatically using GitHub actions, whenever changes are merged into the <code>main</code> branch.</p>',15),r=[i];function o(d,l){return t(),n("div",null,r)}const u=e(s,[["render",o],["__file","sync-assignment-updated.html.vue"]]),g=JSON.parse('{"path":"/cloud-functions/gse-roar-admin/sync-assignment-updated.html","title":"syncAssignmentUpdated()","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Function Name","slug":"function-name","link":"#function-name","children":[]},{"level":3,"title":"Trigger","slug":"trigger","link":"#trigger","children":[]},{"level":3,"title":"Operation","slug":"operation","link":"#operation","children":[]},{"level":3,"title":"Detailed Workflow","slug":"detailed-workflow","link":"#detailed-workflow","children":[]},{"level":3,"title":"Error Handling and Security Considerations","slug":"error-handling-and-security-considerations","link":"#error-handling-and-security-considerations","children":[]},{"level":3,"title":"Deployment and Maintenance","slug":"deployment-and-maintenance","link":"#deployment-and-maintenance","children":[]}],"git":{"updatedTime":1714409897000,"contributors":[{"name":"Kyle","email":"ksmontville@gmail.com","commits":1},{"name":"Kyle Montville","email":"kmontvil@stanford.edu","commits":1}]},"filePathRelative":"cloud-functions/gse-roar-admin/sync-assignment-updated.md"}');export{u as comp,g as data};

import{_ as e,c as t,d as n,e as p,o,r as i}from"./app-BLIgrNMv.js";const l={};function c(r,s){const a=i("Mermaid");return o(),t("div",null,[s[0]||(s[0]=n('<h1 id="roar-administrations-assignments-technical-specification" tabindex="-1"><a class="header-anchor" href="#roar-administrations-assignments-technical-specification"><span>ROAR Administrations &amp; Assignments: Technical Specification</span></a></h1><h2 id="purpose-and-scope" tabindex="-1"><a class="header-anchor" href="#purpose-and-scope"><span>Purpose and Scope</span></a></h2><p>This spec defines how ROAR handles administration of tasks to users. It includes support for assigning variants to students based on org membership, grade level, or other attributes, and for controlling delivery order and optionality of specific variants.</p><h2 id="system-overview" tabindex="-1"><a class="header-anchor" href="#system-overview"><span>System Overview</span></a></h2><p>Administrations and assignments enable educators and researchers to schedule groups of students to take specific task variants during a defined time period. This system ensures clarity, structure, and traceability for large-scale or longitudinal assessments.</p><h3 id="definitions" tabindex="-1"><a class="header-anchor" href="#definitions"><span>Definitions</span></a></h3><ul><li><strong>Administration</strong>: A bundle of variants scheduled for delivery between two dates. Defines ordering and target audience. Only one run per user per variant per administration is selected for scoring.</li><li><strong>Administration Variant</strong>: A variant included in the administration with metadata (order, required, conditional).</li><li><strong>Administration Targets</strong>: Defines whether the administration is scoped to a district, school, class, user, etc.</li><li><strong>Administration Series</strong>: For use cases requiring repeated, scheduled assessments (e.g., weekly benchmarks or longitudinal studies), ROAR uses administration series. An administration series is a collection of administrations that share the same variants and targets.</li><li><strong>Assignment</strong>: A resolved per-user instance of an administration.</li><li><strong>Assignment Variant</strong>: A resolved per-user variant from an administration.</li></ul><h3 id="component-flow-diagram" tabindex="-1"><a class="header-anchor" href="#component-flow-diagram"><span>Component Flow Diagram</span></a></h3>',8)),p(a,{id:"mermaid-53",code:"eJxFjkEOgkAMRfeeohcw3MCESOJeSFxMWFSo0AgzpB0k3t4yoC5m8dM3/79OcOqhKg4AeTuyd2chjLQF1igYOXhYOPbwQmH0UWs4Hk9QoXQU1RX0YE8QpMuaAVWzWUkgbtfaencwfbrOA6nLp2l4f+ugCb7ldSXRiUhsrsqddxfyZBamlPJIq8Gqm2IiC9T+HlBaV/ZhAZOwC7V/YcN/zO7hnT3T1Oe2ujWVTRATvAnboKZQHz6k8mVS"}),s[1]||(s[1]=n(`<h2 id="runtime-behavior" tabindex="-1"><a class="header-anchor" href="#runtime-behavior"><span>Runtime Behavior</span></a></h2><ul><li>Admins define variants in an administration with optional conditions.</li><li>Users are assigned via organization membership or direct targeting.</li><li>System resolves which variants apply to which user (based on org membership and variant conditions like grade).</li><li>Users complete their assigned variants via the dashboard.</li><li>Resulting runs and scores are linked to the assignment and administration.</li></ul><h2 id="edge-cases-and-error-handling" tabindex="-1"><a class="header-anchor" href="#edge-cases-and-error-handling"><span>Edge Cases and Error Handling</span></a></h2><table><thead><tr><th>Scenario</th><th>Behavior</th></tr></thead><tbody><tr><td>Variant condition not met</td><td>Variant excluded from userâ€™s assignment</td></tr><tr><td>Multiple targets (user + class) overlap</td><td>Deduplicate assignments</td></tr><tr><td>Optional variant</td><td>Shown in UI with &quot;optional&quot; label</td></tr><tr><td>Variant fails to load</td><td>Skip or retry policy defined at runtime</td></tr></tbody></table><h2 id="design-rationale" tabindex="-1"><a class="header-anchor" href="#design-rationale"><span>Design Rationale</span></a></h2><ul><li>Separation of admin and assignment layers enables flexible targeting.</li><li>Variant-level conditions support differential assignment logic</li><li>Assignments support both ordered and unordered variant sets.</li><li>Administration series support repeatable or longitudinal patterns without duplicating logic.</li></ul><h2 id="sql-schema" tabindex="-1"><a class="header-anchor" href="#sql-schema"><span>SQL Schema</span></a></h2><h3 id="administrations" tabindex="-1"><a class="header-anchor" href="#administrations"><span><code>administrations</code></span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> administrations <span class="token punctuation">(</span></span>
<span class="line">  id UUID <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">DEFAULT</span> gen_random_uuid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  name <span class="token keyword">TEXT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">  public_name <span class="token keyword">TEXT</span><span class="token punctuation">,</span></span>
<span class="line">  description <span class="token keyword">TEXT</span><span class="token punctuation">,</span></span>
<span class="line">  series_id UUID <span class="token keyword">REFERENCES</span> administration_series<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">CASCADE</span><span class="token punctuation">,</span></span>
<span class="line">  series_index <span class="token keyword">INTEGER</span><span class="token punctuation">,</span></span>
<span class="line">  start_date <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">  end_date <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">  is_ordered <span class="token keyword">BOOLEAN</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  created_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  updated_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  deleted_at <span class="token keyword">TIMESTAMP</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Both <code>series_id</code> and <code>series_index</code> are optional. An administration may exist independently outside of any series.</p><h3 id="administration-series" tabindex="-1"><a class="header-anchor" href="#administration-series"><span><code>administration_series</code></span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> administration_series <span class="token punctuation">(</span></span>
<span class="line">  id UUID <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">DEFAULT</span> gen_random_uuid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  name <span class="token keyword">TEXT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">  public_name <span class="token keyword">TEXT</span><span class="token punctuation">,</span></span>
<span class="line">  description <span class="token keyword">TEXT</span><span class="token punctuation">,</span></span>
<span class="line">  schedule_type <span class="token keyword">TEXT</span> <span class="token keyword">CHECK</span> <span class="token punctuation">(</span>schedule_type <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;fixed&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rolling&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  recurrence_interval_unit <span class="token keyword">TEXT</span><span class="token punctuation">,</span>  <span class="token comment">-- e.g., &#39;WEEKLY&#39;, &#39;DAILY&#39;</span></span>
<span class="line">  recurrence_interval_value <span class="token keyword">INTEGER</span><span class="token punctuation">,</span>  <span class="token comment">-- e.g., every 1 week</span></span>
<span class="line">  total_occurrences <span class="token keyword">INTEGER</span><span class="token punctuation">,</span>  <span class="token comment">-- number of administrations to generate</span></span>
<span class="line">  start_date <span class="token keyword">DATE</span><span class="token punctuation">,</span></span>
<span class="line">  duration_days <span class="token keyword">INTEGER</span><span class="token punctuation">,</span></span>
<span class="line">  created_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  updated_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  deleted_at <span class="token keyword">TIMESTAMP</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>There are two scheduling types:</p><ul><li><p>Fixed series (<code>schedule_type = &#39;fixed&#39;</code>): Each administration has an explicit <code>start_date</code> and <code>end_date</code>, defined at creation time. All participants share the same calendar window. The <code>start_date</code> and <code>end_date</code> for the administration with series index <code>series_index</code> are calculated using the following pseudo-code:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> interval <span class="token operator">=</span> <span class="token function">getRecurrenceIntervalDateTimeDelta</span><span class="token punctuation">(</span>recurrence_interval_unit<span class="token punctuation">,</span> recurrence_interval_value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> start_date <span class="token operator">=</span> start_date <span class="token operator">+</span> series_index <span class="token operator">*</span> interval<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> end_date <span class="token operator">=</span> start_date <span class="token operator">+</span> duration_days<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Use case: Assign a task every Monday for 4 weeks</p></li><li><p>Rolling series (<code>schedule_type = &#39;rolling&#39;</code>): Participants are assigned an <code>enrollment_date</code>, and each administration&#39;s effective window is computed relative to that date. The <code>start_date</code> and <code>end_date</code> for the administration with series index <code>series_index</code> are calculated using the following pseudo-code:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> interval <span class="token operator">=</span> <span class="token function">getRecurrenceIntervalDateTimeDelta</span><span class="token punctuation">(</span>recurrence_interval_unit<span class="token punctuation">,</span> recurrence_interval_value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> start_date <span class="token operator">=</span> enrollment_date <span class="token operator">+</span> series_index <span class="token operator">*</span> interval<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> end_date <span class="token operator">=</span> start_date <span class="token operator">+</span> duration_days<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Use case: Each participant takes 10 sessions weekly starting from their enrollmentment date.</p></li></ul><h3 id="administration-series-variants-and-administration-variants" tabindex="-1"><a class="header-anchor" href="#administration-series-variants-and-administration-variants"><span><code>administration_series_variants</code> and <code>administration_variants</code></span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> administration_series_variants <span class="token punctuation">(</span></span>
<span class="line">  id UUID <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">DEFAULT</span> gen_random_uuid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  administration_series_id UUID <span class="token keyword">REFERENCES</span> administration_series<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">CASCADE</span><span class="token punctuation">,</span></span>
<span class="line">  variant_id UUID <span class="token keyword">REFERENCES</span> variants<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">CASCADE</span><span class="token punctuation">,</span></span>
<span class="line">  order_index <span class="token keyword">INTEGER</span><span class="token punctuation">,</span></span>
<span class="line">  assignment_conditions JSONB<span class="token punctuation">,</span></span>
<span class="line">  requirement_conditions JSONB<span class="token punctuation">,</span></span>
<span class="line">  created_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  updated_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  deleted_at <span class="token keyword">TIMESTAMP</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> administration_variants <span class="token punctuation">(</span></span>
<span class="line">  id UUID <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">DEFAULT</span> gen_random_uuid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  administration_id UUID <span class="token keyword">REFERENCES</span> administrations<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">CASCADE</span><span class="token punctuation">,</span></span>
<span class="line">  variant_id UUID <span class="token keyword">REFERENCES</span> variants<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">CASCADE</span><span class="token punctuation">,</span></span>
<span class="line">  order_index <span class="token keyword">INTEGER</span><span class="token punctuation">,</span></span>
<span class="line">  assignment_conditions JSONB<span class="token punctuation">,</span></span>
<span class="line">  requirement_conditions JSONB<span class="token punctuation">,</span></span>
<span class="line">  created_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  updated_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  deleted_at <span class="token keyword">TIMESTAMP</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To distinguish when to assign a variant from when it is required to be completed, we use two separate condition trees:</p><ul><li><p>assignment_condition_json: logic for whether the variant is assigned to a user.</p></li><li><p>requirement_condition_json: logic for whether the assigned variant is required (as opposed to optional).</p></li></ul><p>This allows us to</p><ul><li><p>Assign a variant to many users but require only a subset to complete it.</p></li><li><p>Mark some assigned variants as optional (if requirement conditions are not met).</p></li></ul><p>Both of these fields store a JSONB object that encodes the full conditional logic as a tree, with <code>AND</code> and <code>OR</code> operators as internal nodes and leaf nodes representing field-based conditions. For example,</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;AND&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span> <span class="token property">&quot;field&quot;</span><span class="token operator">:</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;operator&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;=&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;12&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;OR&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">{</span> <span class="token property">&quot;field&quot;</span><span class="token operator">:</span> <span class="token string">&quot;school_level&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;operator&quot;</span><span class="token operator">:</span> <span class="token string">&quot;=&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;elementary&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span> <span class="token property">&quot;field&quot;</span><span class="token operator">:</span> <span class="token string">&quot;school_level&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;operator&quot;</span><span class="token operator">:</span> <span class="token string">&quot;=&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;middle&quot;</span> <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can nest <code>AND</code> and <code>OR</code> operators to arbitrary depth. The leaf nodes are always of the form <code>{ field, operator, value }</code>.</p><p>When the condition JSON is <code>NULL</code>, it means that the condition is always true. And when we want the condition always to evaluate to false, we can use <code>{ &quot;type&quot;: &quot;const&quot;, &quot;value&quot;: false }</code>. The following table shows different scenarios for the assignment and required conditions:</p><table><thead><tr><th>Scenario</th><th><code>assignment_condition_json</code></th><th><code>requirement_condition_json</code></th></tr></thead><tbody><tr><td>Assigned and required for all</td><td><code>NULL</code></td><td><code>NULL</code></td></tr><tr><td>Assigned to all, optional</td><td><code>NULL</code></td><td><code>{ &quot;type&quot;: &quot;const&quot;, &quot;value&quot;: false }</code></td></tr><tr><td>Assigned to all, conditionally required</td><td><code>NULL</code></td><td>JSON condition</td></tr><tr><td>Conditionally assigned, required</td><td>JSON condition</td><td><code>NULL</code></td></tr><tr><td>Conditionally assigned, optional</td><td>JSON condition</td><td><code>{ &quot;type&quot;: &quot;const&quot;, &quot;value&quot;: false }</code></td></tr><tr><td>Conditionally assigned, conditionally required</td><td>JSON condition</td><td>JSON condition</td></tr></tbody></table><h3 id="administration-series-targets-and-administration-targets" tabindex="-1"><a class="header-anchor" href="#administration-series-targets-and-administration-targets"><span><code>administration_series_targets</code> and <code>administration_targets</code></span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> administration_series_targets <span class="token punctuation">(</span></span>
<span class="line">  id UUID <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">DEFAULT</span> gen_random_uuid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  administration_series_id UUID <span class="token keyword">REFERENCES</span> administration_series<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">CASCADE</span><span class="token punctuation">,</span></span>
<span class="line">  target_id UUID<span class="token punctuation">,</span></span>
<span class="line">  target_type <span class="token keyword">TEXT</span> <span class="token keyword">CHECK</span> <span class="token punctuation">(</span>target_type <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;org&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;class&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  created_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  updated_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  deleted_at <span class="token keyword">TIMESTAMP</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> administration_targets <span class="token punctuation">(</span></span>
<span class="line">  id UUID <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">DEFAULT</span> gen_random_uuid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  administration_id UUID <span class="token keyword">REFERENCES</span> administrations<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">CASCADE</span><span class="token punctuation">,</span></span>
<span class="line">  target_id UUID<span class="token punctuation">,</span></span>
<span class="line">  target_type <span class="token keyword">TEXT</span> <span class="token keyword">CHECK</span> <span class="token punctuation">(</span>target_type <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;org&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;class&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  created_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  updated_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  deleted_at <span class="token keyword">TIMESTAMP</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="assignments" tabindex="-1"><a class="header-anchor" href="#assignments"><span><code>assignments</code></span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> assignments <span class="token punctuation">(</span></span>
<span class="line">  id UUID <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">DEFAULT</span> gen_random_uuid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  administration_id UUID <span class="token keyword">REFERENCES</span> administrations<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">CASCADE</span><span class="token punctuation">,</span></span>
<span class="line">  user_id UUID <span class="token keyword">REFERENCES</span> users<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">CASCADE</span><span class="token punctuation">,</span></span>
<span class="line">  started_at <span class="token keyword">TIMESTAMP</span><span class="token punctuation">,</span></span>
<span class="line">  completed_at <span class="token keyword">TIMESTAMP</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token keyword">status</span> <span class="token keyword">TEXT</span> <span class="token keyword">CHECK</span> <span class="token punctuation">(</span><span class="token keyword">status</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;not_started&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;in_progress&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;completed&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;skipped&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;not_started&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  created_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  updated_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  deleted_at <span class="token keyword">TIMESTAMP</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="assignment-variants" tabindex="-1"><a class="header-anchor" href="#assignment-variants"><span><code>assignment_variants</code></span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> assignment_variants <span class="token punctuation">(</span></span>
<span class="line">  id UUID <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">DEFAULT</span> gen_random_uuid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  administration_id UUID <span class="token keyword">REFERENCES</span> administrations<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">CASCADE</span><span class="token punctuation">,</span></span>
<span class="line">  assignment_id UUID <span class="token keyword">REFERENCES</span> assignments<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">CASCADE</span><span class="token punctuation">,</span></span>
<span class="line">  variant_id UUID <span class="token keyword">REFERENCES</span> variants<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">CASCADE</span><span class="token punctuation">,</span></span>
<span class="line">  order_index <span class="token keyword">INTEGER</span><span class="token punctuation">,</span></span>
<span class="line">  is_required <span class="token keyword">BOOLEAN</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token keyword">status</span> <span class="token keyword">TEXT</span> <span class="token keyword">CHECK</span> <span class="token punctuation">(</span><span class="token keyword">status</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;not_started&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;in_progress&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;completed&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;skipped&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;not_started&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  started_at <span class="token keyword">TIMESTAMP</span><span class="token punctuation">,</span></span>
<span class="line">  completed_at <span class="token keyword">TIMESTAMP</span><span class="token punctuation">,</span></span>
<span class="line">  created_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  updated_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  deleted_at <span class="token keyword">TIMESTAMP</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="runs" tabindex="-1"><a class="header-anchor" href="#runs"><span><code>runs</code></span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> runs <span class="token punctuation">(</span></span>
<span class="line">  id UUID <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">DEFAULT</span> gen_random_uuid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  administration_id UUID <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">REFERENCES</span> administrations<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  assignment_id UUID <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">REFERENCES</span> assignments<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  assignment_variant_id UUID <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">REFERENCES</span> assignment_variants<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  user_id UUID <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">REFERENCES</span> users<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">-- User demographics snapshot at run creation</span></span>
<span class="line">  user_age_in_months_at_run <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">  gender_at_run <span class="token keyword">TEXT</span><span class="token punctuation">,</span></span>
<span class="line">  grade_at_run <span class="token keyword">TEXT</span> <span class="token keyword">REFERENCES</span> grade_levels<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  race_at_run <span class="token keyword">TEXT</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  hispanic_ethnicity_at_run <span class="token keyword">BOOLEAN</span><span class="token punctuation">,</span></span>
<span class="line">  frl_status_at_run frl_status_enum<span class="token punctuation">,</span></span>
<span class="line">  iep_status_at_run <span class="token keyword">BOOLEAN</span><span class="token punctuation">,</span></span>
<span class="line">  ell_status_at_run <span class="token keyword">BOOLEAN</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  variant_id UUID <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">REFERENCES</span> variants<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  task_version_id UUID <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">REFERENCES</span> task_versions<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  task_id UUID <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">REFERENCES</span> tasks<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  started_at <span class="token keyword">TIMESTAMP</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">  completed_at <span class="token keyword">TIMESTAMP</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token keyword">status</span> <span class="token keyword">TEXT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">CHECK</span> <span class="token punctuation">(</span><span class="token keyword">status</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;not_started&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;in_progress&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;completed&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;skipped&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;not_started&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  use_for_reporting <span class="token keyword">BOOLEAN</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  created_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  updated_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  deleted_at <span class="token keyword">TIMESTAMP</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="run-targets" tabindex="-1"><a class="header-anchor" href="#run-targets"><span><code>run_targets</code></span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> run_targets <span class="token punctuation">(</span></span>
<span class="line">  id UUID <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">DEFAULT</span> gen_random_uuid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  run_id UUID <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">REFERENCES</span> runs<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  target_id UUID<span class="token punctuation">,</span></span>
<span class="line">  target_type <span class="token keyword">TEXT</span> <span class="token keyword">CHECK</span> <span class="token punctuation">(</span>target_type <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;org&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;class&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  created_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  updated_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  deleted_at <span class="token keyword">TIMESTAMP</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We must also ensure that there is at most one &quot;used for reporting&quot; run per <code>(assignment_id, variant_id, user_id)</code>.</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">UNIQUE</span> <span class="token keyword">INDEX</span> one_reporting_run_per_assignment_variant_user</span>
<span class="line"><span class="token keyword">ON</span> runs<span class="token punctuation">(</span>assignment_id<span class="token punctuation">,</span> variant_id<span class="token punctuation">,</span> user_id<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">WHERE</span> use_for_reporting <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="administration-stats" tabindex="-1"><a class="header-anchor" href="#administration-stats"><span>Administration stats</span></a></h2><p>It is important to report administration progress statistics. For example, for a given administration:</p><ul><li>How many assignments have been created?</li><li>How many assignments have been started?</li><li>How many assignments have been completed?</li><li>There are versions of all of the above questions but grouped by variant or task.</li></ul><p>We can use this query to get the total number of assignees for a given administration:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> assignments <span class="token keyword">WHERE</span> administration_id <span class="token operator">=</span> :admin_id<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>We can use the following SQL query to get the number of assignments with different statuses for a given administration:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span></span>
<span class="line">  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total_reporting_runs<span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> FILTER <span class="token punctuation">(</span><span class="token keyword">WHERE</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&#39;started&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> started<span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> FILTER <span class="token punctuation">(</span><span class="token keyword">WHERE</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&#39;completed&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> completed</span>
<span class="line"><span class="token keyword">FROM</span> runs</span>
<span class="line"><span class="token keyword">WHERE</span> administration_id <span class="token operator">=</span> :admin_id</span>
<span class="line">  <span class="token operator">AND</span> use_for_reporting <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We can group those results by <code>task_id</code> using the following query:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span></span>
<span class="line">  task_id<span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total<span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> FILTER <span class="token punctuation">(</span><span class="token keyword">WHERE</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&#39;started&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> started<span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> FILTER <span class="token punctuation">(</span><span class="token keyword">WHERE</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&#39;completed&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> completed</span>
<span class="line"><span class="token keyword">FROM</span> runs</span>
<span class="line"><span class="token keyword">WHERE</span> administration_id <span class="token operator">=</span> :admin_id</span>
<span class="line">  <span class="token operator">AND</span> use_for_reporting <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> task_id<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Similarly, we can group those results by <code>variant_id</code>:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span></span>
<span class="line">  variant_id<span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total_reporting_runs<span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> FILTER <span class="token punctuation">(</span><span class="token keyword">WHERE</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&#39;started&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> started<span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> FILTER <span class="token punctuation">(</span><span class="token keyword">WHERE</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&#39;completed&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> completed</span>
<span class="line"><span class="token keyword">FROM</span> runs</span>
<span class="line"><span class="token keyword">WHERE</span> administration_id <span class="token operator">=</span> :admin_id</span>
<span class="line">  <span class="token operator">AND</span> use_for_reporting <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> variant_id<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And we can group by <code>org_id</code> using</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span></span>
<span class="line">  rt<span class="token punctuation">.</span>target_id <span class="token keyword">AS</span> org_id<span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total<span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> FILTER <span class="token punctuation">(</span><span class="token keyword">WHERE</span> r<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&#39;started&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> started<span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> FILTER <span class="token punctuation">(</span><span class="token keyword">WHERE</span> r<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&#39;completed&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> completed</span>
<span class="line"><span class="token keyword">FROM</span> runs r</span>
<span class="line"><span class="token keyword">JOIN</span> run_targets rt <span class="token keyword">ON</span> r<span class="token punctuation">.</span>id <span class="token operator">=</span> rt<span class="token punctuation">.</span>run_id</span>
<span class="line"><span class="token keyword">WHERE</span> r<span class="token punctuation">.</span>administration_id <span class="token operator">=</span> :admin_id</span>
<span class="line">  <span class="token operator">AND</span> r<span class="token punctuation">.</span>use_for_reporting <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">  <span class="token operator">AND</span> rt<span class="token punctuation">.</span>target_type <span class="token operator">=</span> <span class="token string">&#39;org&#39;</span></span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> rt<span class="token punctuation">.</span>target_id<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>or by <code>class_id</code> if we change the <code>rt.target_type</code> filter to <code>class</code>. We can even further group these results by <code>variant_id</code> using</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span></span>
<span class="line">  rt<span class="token punctuation">.</span>target_id <span class="token keyword">AS</span> org_id<span class="token punctuation">,</span></span>
<span class="line">  r<span class="token punctuation">.</span>variant_id<span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total<span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> FILTER <span class="token punctuation">(</span><span class="token keyword">WHERE</span> r<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&#39;started&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> started<span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> FILTER <span class="token punctuation">(</span><span class="token keyword">WHERE</span> r<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&#39;completed&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> completed</span>
<span class="line"><span class="token keyword">FROM</span> runs r</span>
<span class="line"><span class="token keyword">JOIN</span> run_targets rt <span class="token keyword">ON</span> r<span class="token punctuation">.</span>id <span class="token operator">=</span> rt<span class="token punctuation">.</span>run_id</span>
<span class="line"><span class="token keyword">WHERE</span> r<span class="token punctuation">.</span>administration_id <span class="token operator">=</span> :admin_id</span>
<span class="line">  <span class="token operator">AND</span> r<span class="token punctuation">.</span>use_for_reporting <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">  <span class="token operator">AND</span> rt<span class="token punctuation">.</span>target_type <span class="token operator">=</span> <span class="token string">&#39;org&#39;</span></span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> rt<span class="token punctuation">.</span>target_id<span class="token punctuation">,</span> r<span class="token punctuation">.</span>variant_id<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api-contract" tabindex="-1"><a class="header-anchor" href="#api-contract"><span>API Contract</span></a></h2><div class="hint-container warning"><p class="hint-container-title">This section is under construction</p><p>The ROAR administration API is currently in development and is not yet available.</p></div><h2 id="migration-plan" tabindex="-1"><a class="header-anchor" href="#migration-plan"><span>Migration Plan</span></a></h2><ul><li>Backfill existing administrations from Firestore.</li><li>Backfill existing administration_variants from Firestore. They are currently stored in the administration documents themselves.</li><li>Backfill existing assignment and requirement conditions from Firestore. They are currently stored in the administraiton documents themselves.</li><li>Backfill existing assignments from Firestore.</li><li>Backfill existing assignment_variants from Firestore. They are currently stored in the assignment documents themselves.</li></ul><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h2><p>This design allows flexible, condition-aware scheduling of task variants across users. It supports both required and optional content, ordered delivery, and individualized assignment resolution based on user attributes.</p>`,58))])}const u=e(l,[["render",c],["__file","administrations-assignments.html.vue"]]),k=JSON.parse('{"path":"/developer/tech-specs/backend/administrations-assignments.html","title":"ROAR Administrations & Assignments: Technical Specification","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Purpose and Scope","slug":"purpose-and-scope","link":"#purpose-and-scope","children":[]},{"level":2,"title":"System Overview","slug":"system-overview","link":"#system-overview","children":[{"level":3,"title":"Definitions","slug":"definitions","link":"#definitions","children":[]},{"level":3,"title":"Component Flow Diagram","slug":"component-flow-diagram","link":"#component-flow-diagram","children":[]}]},{"level":2,"title":"Runtime Behavior","slug":"runtime-behavior","link":"#runtime-behavior","children":[]},{"level":2,"title":"Edge Cases and Error Handling","slug":"edge-cases-and-error-handling","link":"#edge-cases-and-error-handling","children":[]},{"level":2,"title":"Design Rationale","slug":"design-rationale","link":"#design-rationale","children":[]},{"level":2,"title":"SQL Schema","slug":"sql-schema","link":"#sql-schema","children":[{"level":3,"title":"administrations","slug":"administrations","link":"#administrations","children":[]},{"level":3,"title":"administration_series","slug":"administration-series","link":"#administration-series","children":[]},{"level":3,"title":"administration_series_variants and administration_variants","slug":"administration-series-variants-and-administration-variants","link":"#administration-series-variants-and-administration-variants","children":[]},{"level":3,"title":"administration_series_targets and administration_targets","slug":"administration-series-targets-and-administration-targets","link":"#administration-series-targets-and-administration-targets","children":[]},{"level":3,"title":"assignments","slug":"assignments","link":"#assignments","children":[]},{"level":3,"title":"assignment_variants","slug":"assignment-variants","link":"#assignment-variants","children":[]},{"level":3,"title":"runs","slug":"runs","link":"#runs","children":[]},{"level":3,"title":"run_targets","slug":"run-targets","link":"#run-targets","children":[]}]},{"level":2,"title":"Administration stats","slug":"administration-stats","link":"#administration-stats","children":[]},{"level":2,"title":"API Contract","slug":"api-contract","link":"#api-contract","children":[]},{"level":2,"title":"Migration Plan","slug":"migration-plan","link":"#migration-plan","children":[]},{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]}],"git":{"updatedTime":1751819643000,"contributors":[{"name":"Adam Richie-Halford","username":"Adam Richie-Halford","email":"richiehalford@gmail.com","commits":6,"url":"https://github.com/Adam Richie-Halford"}]},"filePathRelative":"developer/tech-specs/backend/administrations-assignments.md"}');export{u as comp,k as data};

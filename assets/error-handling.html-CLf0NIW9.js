import{_ as p,c,d as t,e as n,a as e,f as a,b as i,r as o,o as d}from"./app-BalnT9IK.js";const u={};function v(k,s){const l=o("Mermaid"),r=o("RouteLink");return d(),c("div",null,[s[16]||(s[16]=t('<h1 id="error-handling-architecture-in-roar" tabindex="-1"><a class="header-anchor" href="#error-handling-architecture-in-roar"><span>Error Handling Architecture in ROAR</span></a></h1><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>ROAR implements a comprehensive error handling strategy with specialized error classes organized in a hierarchical structure. This architecture ensures errors are properly captured, categorized, and reported throughout the system.</p><h2 id="error-class-hierarchy" tabindex="-1"><a class="header-anchor" href="#error-class-hierarchy"><span>Error Class Hierarchy</span></a></h2><p>The error handling system follows a hierarchical design that mirrors the application&#39;s architecture:</p>',5)),n(l,{id:"mermaid-15",code:"eJyljksKwzAMRPc9hS+QG3RT0hayamnpAdRYBIE/QTKBQA9fx7sYGwLWSqCneTMaELkSTAz2pOLcmD2r86/r1J0YvyDYG0IX0qGGDHY2aCMFgbyrohI84wtnLxS3tchdtCVHEjhFvZEXGrFIDjoKKaxP9gtp5B2b4Joza7RXlvodDMobNUQ9eGr4/kiTfHvvDZDNM/59nsq8"}),s[17]||(s[17]=e("h2",{id:"key-components",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#key-components"},[e("span",null,"Key Components")])],-1)),s[18]||(s[18]=e("h3",{id:"client-level-errors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#client-level-errors"},[e("span",null,"Client-Level Errors")])],-1)),e("ul",null,[e("li",null,[n(r,{to:"/developer/backend-architecture/api/classes/FirebaseClientError.html"},{default:a(()=>s[0]||(s[0]=[e("code",null,"FirebaseClientError",-1)])),_:1}),s[1]||(s[1]=i(": Base error for Firebase client operations"))]),e("li",null,[n(r,{to:"/developer/backend-architecture/api/classes/FirebaseImplementationError.html"},{default:a(()=>s[2]||(s[2]=[e("code",null,"FirebaseImplementationError",-1)])),_:1}),s[3]||(s[3]=i(": Errors during Firebase implementation setup"))])]),s[19]||(s[19]=e("h3",{id:"repository-level-errors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#repository-level-errors"},[e("span",null,"Repository-Level Errors")])],-1)),e("ul",null,[e("li",null,[n(r,{to:"/developer/backend-architecture/api/classes/FirestoreRepositoryError.html"},{default:a(()=>s[4]||(s[4]=[e("code",null,"FirestoreRepositoryError",-1)])),_:1}),s[5]||(s[5]=i(": Base class for all repository errors"))]),e("li",null,[s[11]||(s[11]=i("Entity-specific repository errors: ")),e("ul",null,[e("li",null,[n(r,{to:"/developer/backend-architecture/api/classes/FirestoreAdministrationRepositoryError.html"},{default:a(()=>s[6]||(s[6]=[e("code",null,"FirestoreAdministrationRepositoryError",-1)])),_:1})]),e("li",null,[n(r,{to:"/developer/backend-architecture/api/classes/FirestoreIdentityProviderRepositoryError.html"},{default:a(()=>s[7]||(s[7]=[e("code",null,"FirestoreIdentityProviderRepositoryError",-1)])),_:1})]),e("li",null,[n(r,{to:"/developer/backend-architecture/api/classes/FirestoreOrgRepositoryError.html"},{default:a(()=>s[8]||(s[8]=[e("code",null,"FirestoreOrgRepositoryError",-1)])),_:1})]),e("li",null,[n(r,{to:"/developer/backend-architecture/api/classes/FirestoreUserRepositoryError.html"},{default:a(()=>s[9]||(s[9]=[e("code",null,"FirestoreUserRepositoryError",-1)])),_:1})]),e("li",null,[n(r,{to:"/developer/backend-architecture/api/classes/FirestoreUserClaimRepositoryError.html"},{default:a(()=>s[10]||(s[10]=[e("code",null,"FirestoreUserClaimRepositoryError",-1)])),_:1})])])])]),s[20]||(s[20]=e("h3",{id:"service-level-errors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#service-level-errors"},[e("span",null,"Service-Level Errors")])],-1)),e("ul",null,[e("li",null,[n(r,{to:"/developer/backend-architecture/api/classes/AdministrationServiceError.html"},{default:a(()=>s[12]||(s[12]=[e("code",null,"AdministrationServiceError",-1)])),_:1}),s[13]||(s[13]=i(": Errors in administration service operations"))]),e("li",null,[n(r,{to:"/developer/backend-architecture/api/classes/IdentityProviderServiceError.html"},{default:a(()=>s[14]||(s[14]=[e("code",null,"IdentityProviderServiceError",-1)])),_:1}),s[15]||(s[15]=i(": Errors in identity provider service operations"))])]),s[21]||(s[21]=t(`<h2 id="error-handling-principles" tabindex="-1"><a class="header-anchor" href="#error-handling-principles"><span>Error Handling Principles</span></a></h2><h3 id="_1-error-encapsulation" tabindex="-1"><a class="header-anchor" href="#_1-error-encapsulation"><span>1. Error Encapsulation</span></a></h3><p>Each error class encapsulates both an error message and the original error object, allowing for complete context preservation while providing a clean public API.</p><p>Example:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">FirestoreRepositoryError</span> <span class="token keyword">extends</span> <span class="token class-name">Error</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">protected</span> error<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> error<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;FirestoreRepositoryError&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>error <span class="token operator">=</span> error<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-specialized-error-types" tabindex="-1"><a class="header-anchor" href="#_2-specialized-error-types"><span>2. Specialized Error Types</span></a></h3><p>Repository-specific error classes provide factory methods for creating standardized error instances for common error scenarios:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">FirestoreIdentityProviderRepositoryError</span> <span class="token keyword">extends</span> <span class="token class-name">FirestoreRepositoryError</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">getByProviderIdError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> FirestoreIdentityProviderRepositoryError <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FirestoreIdentityProviderRepositoryError</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token string">&#39;Error retrieving identity provider by provider ID&#39;</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">noProviderDataError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> FirestoreIdentityProviderRepositoryError <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FirestoreIdentityProviderRepositoryError</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token string">&#39;No provider data available&#39;</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-error-propagation" tabindex="-1"><a class="header-anchor" href="#_3-error-propagation"><span>3. Error Propagation</span></a></h3><p>Errors are propagated up the call stack, with each layer adding relevant context:</p><ol><li><strong>Repository Layer</strong>: Catches database errors and wraps them in repository-specific errors</li><li><strong>Service Layer</strong>: Catches repository errors and wraps them in service-specific errors</li><li><strong>Controller/Function Layer</strong>: Catches service errors and formats appropriate responses</li></ol><h2 id="best-practices" tabindex="-1"><a class="header-anchor" href="#best-practices"><span>Best Practices</span></a></h2><ol><li><strong>Specific Error Messages</strong>: Include actionable details in error messages</li><li><strong>Error Categorization</strong>: Use specialized error classes for different error types</li><li><strong>Error Context</strong>: Preserve original errors for debugging</li><li><strong>Consistent Error Handling</strong>: Follow the same pattern across the codebase</li><li><strong>Error Logging</strong>: Log errors at appropriate levels with context</li></ol><h2 id="example-usage" tabindex="-1"><a class="header-anchor" href="#example-usage"><span>Example Usage</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> identityProviderRepository<span class="token punctuation">.</span><span class="token function">getByProviderId</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> result<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>error <span class="token keyword">instanceof</span> <span class="token class-name">FirestoreRepositoryError</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">throw</span> error<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">FirestoreIdentityProviderRepositoryError</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&#39;Failed to get identity provider by ID&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    error</span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15))])}const h=p(u,[["render",v],["__file","error-handling.html.vue"]]),y=JSON.parse('{"path":"/developer/backend-architecture/architecture/error-handling.html","title":"Error Handling Architecture in ROAR","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Overview","slug":"overview","link":"#overview","children":[]},{"level":2,"title":"Error Class Hierarchy","slug":"error-class-hierarchy","link":"#error-class-hierarchy","children":[]},{"level":2,"title":"Key Components","slug":"key-components","link":"#key-components","children":[{"level":3,"title":"Client-Level Errors","slug":"client-level-errors","link":"#client-level-errors","children":[]},{"level":3,"title":"Repository-Level Errors","slug":"repository-level-errors","link":"#repository-level-errors","children":[]},{"level":3,"title":"Service-Level Errors","slug":"service-level-errors","link":"#service-level-errors","children":[]}]},{"level":2,"title":"Error Handling Principles","slug":"error-handling-principles","link":"#error-handling-principles","children":[{"level":3,"title":"1. Error Encapsulation","slug":"_1-error-encapsulation","link":"#_1-error-encapsulation","children":[]},{"level":3,"title":"2. Specialized Error Types","slug":"_2-specialized-error-types","link":"#_2-specialized-error-types","children":[]},{"level":3,"title":"3. Error Propagation","slug":"_3-error-propagation","link":"#_3-error-propagation","children":[]}]},{"level":2,"title":"Best Practices","slug":"best-practices","link":"#best-practices","children":[]},{"level":2,"title":"Example Usage","slug":"example-usage","link":"#example-usage","children":[]}],"git":{"updatedTime":1744670523000,"contributors":[{"name":"Kyle","username":"Kyle","email":"ksmontville@gmail.com","commits":2,"url":"https://github.com/Kyle"}]},"filePathRelative":"developer/backend-architecture/architecture/error-handling.md"}');export{h as comp,y as data};

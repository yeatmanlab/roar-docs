import{_ as i,c as d,a as o,e as t,f as n,b as r,d as l,r as s,o as c}from"./app-CsKPWeU3.js";const p={};function f(u,e){const a=s("RouteLink");return c(),d("div",null,[o("p",null,[t(a,{to:"/developer/backend-architecture/api/"},{default:n(()=>e[0]||(e[0]=[o("strong",null,"@roar-firebase-functions/core",-1)])),_:1})]),e[11]||(e[11]=o("hr",null,null,-1)),o("p",null,[t(a,{to:"/developer/backend-architecture/api/"},{default:n(()=>e[1]||(e[1]=[r("@roar-firebase-functions/core")])),_:1}),e[2]||(e[2]=r(" / FieldCondition"))]),e[12]||(e[12]=l('<h1 id="interface-fieldcondition" tabindex="-1"><a class="header-anchor" href="#interface-fieldcondition"><span>Interface: FieldCondition</span></a></h1><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/models/condition.model.ts#L25" target="_blank" rel="noopener noreferrer">packages/core/src/models/condition.model.ts:25</a></p><p>Interface representing a condition based on a document field, an operator, and a reference value.</p><h2 id="see" tabindex="-1"><a class="header-anchor" href="#see"><span>See</span></a></h2>',4)),o("ul",null,[o("li",null,[t(a,{to:"/developer/backend-architecture/api/enumerations/Operator.html"},{default:n(()=>e[3]||(e[3]=[r("Operator")])),_:1})]),o("li",null,[t(a,{to:"/developer/backend-architecture/api/type-aliases/Condition.html"},{default:n(()=>e[4]||(e[4]=[r("Condition")])),_:1})]),o("li",null,[t(a,{to:"/developer/backend-architecture/api/interfaces/CompositeCondition.html"},{default:n(()=>e[5]||(e[5]=[r("CompositeCondition")])),_:1})]),o("li",null,[t(a,{to:"/developer/backend-architecture/api/type-aliases/SelectAllCondition.html"},{default:n(()=>e[6]||(e[6]=[r("SelectAllCondition")])),_:1})]),o("li",null,[t(a,{to:"/developer/backend-architecture/api/type-aliases/ParameterValue.html"},{default:n(()=>e[7]||(e[7]=[r("ParameterValue")])),_:1})])]),e[13]||(e[13]=l('<h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="field" tabindex="-1"><a class="header-anchor" href="#field"><span>field</span></a></h3><blockquote><p><strong>field</strong>: <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/models/condition.model.ts#L27" target="_blank" rel="noopener noreferrer">packages/core/src/models/condition.model.ts:27</a></p><hr><h3 id="id" tabindex="-1"><a class="header-anchor" href="#id"><span>id</span></a></h3><blockquote><p><strong>id</strong>: <code>number</code></p></blockquote><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/models/condition.model.ts#L26" target="_blank" rel="noopener noreferrer">packages/core/src/models/condition.model.ts:26</a></p><hr><h3 id="op" tabindex="-1"><a class="header-anchor" href="#op"><span>op</span></a></h3>',10)),o("blockquote",null,[o("p",null,[e[9]||(e[9]=o("strong",null,"op",-1)),e[10]||(e[10]=r(": ")),t(a,{to:"/developer/backend-architecture/api/enumerations/Operator.html"},{default:n(()=>e[8]||(e[8]=[o("code",null,"Operator",-1)])),_:1})])]),e[14]||(e[14]=l('<p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/models/condition.model.ts#L28" target="_blank" rel="noopener noreferrer">packages/core/src/models/condition.model.ts:28</a></p><hr><h3 id="value" tabindex="-1"><a class="header-anchor" href="#value"><span>value</span></a></h3><blockquote><p><strong>value</strong>: <code>string</code> | <code>number</code> | <code>boolean</code> | <code>Date</code></p></blockquote><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/models/condition.model.ts#L29" target="_blank" rel="noopener noreferrer">packages/core/src/models/condition.model.ts:29</a></p>',5))])}const m=i(p,[["render",f],["__file","FieldCondition.html.vue"]]),h=JSON.parse('{"path":"/developer/backend-architecture/api/interfaces/FieldCondition.html","title":"Interface: FieldCondition","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"See","slug":"see","link":"#see","children":[]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[{"level":3,"title":"field","slug":"field","link":"#field","children":[]},{"level":3,"title":"id","slug":"id","link":"#id","children":[]},{"level":3,"title":"op","slug":"op","link":"#op","children":[]},{"level":3,"title":"value","slug":"value","link":"#value","children":[]}]}],"git":{"updatedTime":1744657380000,"contributors":[{"name":"Kyle","username":"Kyle","email":"ksmontville@gmail.com","commits":1,"url":"https://github.com/Kyle"}]},"filePathRelative":"developer/backend-architecture/api/interfaces/FieldCondition.md"}');export{m as comp,h as data};

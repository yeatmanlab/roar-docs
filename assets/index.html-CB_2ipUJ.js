import{_ as l,c as o,a as n,d as a,e as t,f as i,r as p,o as r}from"./app-FrdTVLMr.js";const c={},u={id:"createadministrationservice",tabindex:"-1"},d={class:"header-anchor",href:"#createadministrationservice"},v={id:"createidentityproviderservice",tabindex:"-1"},m={class:"header-anchor",href:"#createidentityproviderservice"},k={id:"createfirestoreimplementation",tabindex:"-1"},h={class:"header-anchor",href:"#createfirestoreimplementation"},g={id:"chunkorgs",tabindex:"-1"},y={class:"header-anchor",href:"#chunkorgs"},f={id:"isemptyorgs",tabindex:"-1"},b={class:"header-anchor",href:"#isemptyorgs"};function S(x,s){const e=p("RouteLink");return r(),o("div",null,[s[5]||(s[5]=n("h1",{id:"functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#functions"},[n("span",null,"Functions")])],-1)),s[6]||(s[6]=n("p",null,"This documentation covers the utility and factory functions used in the ROAR Firebase Functions backend architecture. These functions provide key functionality for service creation, data manipulation, and system initialization.",-1)),s[7]||(s[7]=n("h2",{id:"service-creation-functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#service-creation-functions"},[n("span",null,"Service Creation Functions")])],-1)),n("h3",u,[n("a",d,[n("span",null,[a(e,{to:"/developer/backend-architecture/api/functions/createAdministrationService.html"},{default:t(()=>s[0]||(s[0]=[n("code",null,"createAdministrationService",-1)])),_:1})])])]),s[8]||(s[8]=i(`<p>Creates an administration service instance with repositories for managing administrative operations.</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> adminService <span class="token operator">=</span> <span class="token function">createAdministrationService</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  administrationRepository<span class="token punctuation">,</span></span>
<span class="line">  orgRepository<span class="token punctuation">,</span></span>
<span class="line">  userClaimRepository</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),n("h3",v,[n("a",m,[n("span",null,[a(e,{to:"/developer/backend-architecture/api/functions/createIdentityProviderService.html"},{default:t(()=>s[1]||(s[1]=[n("code",null,"createIdentityProviderService",-1)])),_:1})])])]),s[9]||(s[9]=i(`<p>Creates an identity provider service for handling SSO and user identity management.</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> idpService <span class="token operator">=</span> <span class="token function">createIdentityProviderService</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  identityProviderRepository<span class="token punctuation">,</span></span>
<span class="line">  userClaimRepository<span class="token punctuation">,</span></span>
<span class="line">  userRepository</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),n("h3",k,[n("a",h,[n("span",null,[a(e,{to:"/developer/backend-architecture/api/functions/createFirestoreImplementation.html"},{default:t(()=>s[2]||(s[2]=[n("code",null,"createFirestoreImplementation",-1)])),_:1})])])]),s[10]||(s[10]=i(`<p>Factory function that initializes all Firestore repositories and services.</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span></span>
<span class="line">  administrationRepository<span class="token punctuation">,</span></span>
<span class="line">  identityProviderRepository<span class="token punctuation">,</span></span>
<span class="line">  userRepository<span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// ... other repositories and services</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">createFirestoreImplementation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="utility-functions" tabindex="-1"><a class="header-anchor" href="#utility-functions"><span>Utility Functions</span></a></h2>`,3)),n("h3",g,[n("a",y,[n("span",null,[a(e,{to:"/developer/backend-architecture/api/functions/chunkOrgs.html"},{default:t(()=>s[3]||(s[3]=[n("code",null,"chunkOrgs",-1)])),_:1})])])]),s[11]||(s[11]=i(`<p>Splits organization lists into smaller chunks for processing.</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> orgsList <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  readOrgs<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;org1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;org2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;org3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;org4&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  assignedOrgs<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;org5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;org6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;org7&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;org8&#39;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> chunkedOrgs <span class="token operator">=</span> <span class="token function">chunkOrgs</span><span class="token punctuation">(</span>orgsList<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// Results in smaller chunks of size 2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),n("h3",f,[n("a",b,[n("span",null,[a(e,{to:"/developer/backend-architecture/api/functions/isEmptyOrgs.html"},{default:t(()=>s[4]||(s[4]=[n("code",null,"isEmptyOrgs",-1)])),_:1})])])]),s[12]||(s[12]=i(`<p>Checks if an organization list is empty.</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> orgsList <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  readOrgs<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  assignedOrgs<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> isEmpty <span class="token operator">=</span> <span class="token function">isEmptyOrgs</span><span class="token punctuation">(</span>orgsList<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// returns true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="usage-patterns" tabindex="-1"><a class="header-anchor" href="#usage-patterns"><span>Usage Patterns</span></a></h2><p>These functions are typically used in the following ways:</p><ol><li><p>Service Creation</p><ul><li>Used during application initialization</li><li>Creates service instances with required dependencies</li><li>Provides type-safe service implementations</li></ul></li><li><p>Data Processing</p><ul><li>Utility functions for handling organization data</li><li>Manages data chunks for batch processing</li><li>Validates data structures</li></ul></li><li><p>System Setup</p><ul><li>Initializes Firestore implementation</li><li>Sets up repositories and services</li><li>Configures system dependencies</li></ul></li></ol><p>For more details on each function, click the links above to view the individual documentation pages.</p>`,6))])}const O=l(c,[["render",S],["__file","index.html.vue"]]),R=JSON.parse('{"path":"/developer/backend-architecture/api/functions/","title":"Functions","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Service Creation Functions","slug":"service-creation-functions","link":"#service-creation-functions","children":[{"level":3,"title":"createAdministrationService","slug":"createadministrationservice","link":"#createadministrationservice","children":[]},{"level":3,"title":"createIdentityProviderService","slug":"createidentityproviderservice","link":"#createidentityproviderservice","children":[]},{"level":3,"title":"createFirestoreImplementation","slug":"createfirestoreimplementation","link":"#createfirestoreimplementation","children":[]}]},{"level":2,"title":"Utility Functions","slug":"utility-functions","link":"#utility-functions","children":[{"level":3,"title":"chunkOrgs","slug":"chunkorgs","link":"#chunkorgs","children":[]},{"level":3,"title":"isEmptyOrgs","slug":"isemptyorgs","link":"#isemptyorgs","children":[]}]},{"level":2,"title":"Usage Patterns","slug":"usage-patterns","link":"#usage-patterns","children":[]}],"git":{"updatedTime":1744660884000,"contributors":[{"name":"Kyle","username":"Kyle","email":"ksmontville@gmail.com","commits":2,"url":"https://github.com/Kyle"}]},"filePathRelative":"developer/backend-architecture/api/functions/README.md"}');export{O as comp,R as data};

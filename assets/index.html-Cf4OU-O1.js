import{_ as s,c as o,a as e,e as l,f as i,r,o as d,b as a}from"./app-Bp2p-J6b.js";const p={},u={id:"basefilter",tabindex:"-1"},c={class:"header-anchor",href:"#basefilter"},m={id:"comparisonoperator",tabindex:"-1"},v={class:"header-anchor",href:"#comparisonoperator"},h={id:"condition",tabindex:"-1"},y={class:"header-anchor",href:"#condition"},f={id:"documentcreatedevent",tabindex:"-1"},b={class:"header-anchor",href:"#documentcreatedevent"},k={id:"documentdeletedevent",tabindex:"-1"},g={class:"header-anchor",href:"#documentdeletedevent"},x={id:"documentupdatedevent",tabindex:"-1"},C={class:"header-anchor",href:"#documentupdatedevent"},D={id:"documentwrittenevent",tabindex:"-1"},E={class:"header-anchor",href:"#documentwrittenevent"},T={id:"parametervalue",tabindex:"-1"},F={class:"header-anchor",href:"#parametervalue"},B={id:"selectallcondition",tabindex:"-1"},A={class:"header-anchor",href:"#selectallcondition"};function V(S,t){const n=r("RouteLink");return d(),o("div",null,[t[9]||(t[9]=e("h1",{id:"type-aliases",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases"},[e("span",null,"Type Aliases")])],-1)),t[10]||(t[10]=e("p",null,"Type aliases provide reusable type definitions used throughout the ROAR Firebase Functions backend architecture. These custom types ensure type safety and clear interfaces across the system.",-1)),t[11]||(t[11]=e("h2",{id:"filter-types",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#filter-types"},[e("span",null,"Filter Types")])],-1)),e("h3",u,[e("a",c,[e("span",null,[l(n,{to:"/developer/backend-architecture/api/type-aliases/type-aliases/BaseFilter.html"},{default:i(()=>t[0]||(t[0]=[a("BaseFilter")])),_:1})])])]),t[12]||(t[12]=e("p",null,"Union type combining SingleFilter and CompositeFilter for representing filter structures.",-1)),e("h3",m,[e("a",v,[e("span",null,[l(n,{to:"/developer/backend-architecture/api/type-aliases/type-aliases/ComparisonOperator.html"},{default:i(()=>t[1]||(t[1]=[a("ComparisonOperator")])),_:1})])])]),t[13]||(t[13]=e("p",null,"Defines available comparison operators for filtering operations.",-1)),e("h3",h,[e("a",y,[e("span",null,[l(n,{to:"/developer/backend-architecture/api/type-aliases/type-aliases/Condition.html"},{default:i(()=>t[2]||(t[2]=[a("Condition")])),_:1})])])]),t[14]||(t[14]=e("p",null,"Union type for different condition types (Field, Composite, SelectAll).",-1)),t[15]||(t[15]=e("h2",{id:"firestore-event-types",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#firestore-event-types"},[e("span",null,"Firestore Event Types")])],-1)),e("h3",f,[e("a",b,[e("span",null,[l(n,{to:"/developer/backend-architecture/api/type-aliases/type-aliases/DocumentCreatedEvent.html"},{default:i(()=>t[3]||(t[3]=[a("DocumentCreatedEvent")])),_:1})])])]),t[16]||(t[16]=e("p",null,"Type for Firestore document creation events.",-1)),e("h3",k,[e("a",g,[e("span",null,[l(n,{to:"/developer/backend-architecture/api/type-aliases/type-aliases/DocumentDeletedEvent.html"},{default:i(()=>t[4]||(t[4]=[a("DocumentDeletedEvent")])),_:1})])])]),t[17]||(t[17]=e("p",null,"Type for Firestore document deletion events.",-1)),e("h3",x,[e("a",C,[e("span",null,[l(n,{to:"/developer/backend-architecture/api/type-aliases/type-aliases/DocumentUpdatedEvent.html"},{default:i(()=>t[5]||(t[5]=[a("DocumentUpdatedEvent")])),_:1})])])]),t[18]||(t[18]=e("p",null,"Type for Firestore document update events.",-1)),e("h3",D,[e("a",E,[e("span",null,[l(n,{to:"/developer/backend-architecture/api/type-aliases/type-aliases/DocumentWrittenEvent.html"},{default:i(()=>t[6]||(t[6]=[a("DocumentWrittenEvent")])),_:1})])])]),t[19]||(t[19]=e("p",null,"Type for Firestore document write events.",-1)),t[20]||(t[20]=e("h2",{id:"value-types",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#value-types"},[e("span",null,"Value Types")])],-1)),e("h3",T,[e("a",F,[e("span",null,[l(n,{to:"/developer/backend-architecture/api/type-aliases/type-aliases/ParameterValue.html"},{default:i(()=>t[7]||(t[7]=[a("ParameterValue")])),_:1})])])]),t[21]||(t[21]=e("p",null,"Union type for valid parameter values (boolean, number, string, Date).",-1)),e("h3",B,[e("a",A,[e("span",null,[l(n,{to:"/developer/backend-architecture/api/type-aliases/type-aliases/SelectAllCondition.html"},{default:i(()=>t[8]||(t[8]=[a("SelectAllCondition")])),_:1})])])]),t[22]||(t[22]=e("p",null,"Type representing a condition that selects all items.",-1)),t[23]||(t[23]=e("h2",{id:"key-benefits",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#key-benefits"},[e("span",null,"Key Benefits")])],-1)),t[24]||(t[24]=e("ul",null,[e("li",null,"Type safety across the application"),e("li",null,"Clear abstractions for complex types"),e("li",null,"Consistent type usage patterns"),e("li",null,"Better code organization"),e("li",null,"Enhanced maintainability")],-1)),t[25]||(t[25]=e("p",null,"For more details on each type alias, see the individual documentation pages linked above.",-1))])}const _=s(p,[["render",V],["__file","index.html.vue"]]),w=JSON.parse('{"path":"/developer/backend-architecture/api/type-aliases/","title":"Type Aliases","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Filter Types","slug":"filter-types","link":"#filter-types","children":[{"level":3,"title":"BaseFilter","slug":"basefilter","link":"#basefilter","children":[]},{"level":3,"title":"ComparisonOperator","slug":"comparisonoperator","link":"#comparisonoperator","children":[]},{"level":3,"title":"Condition","slug":"condition","link":"#condition","children":[]}]},{"level":2,"title":"Firestore Event Types","slug":"firestore-event-types","link":"#firestore-event-types","children":[{"level":3,"title":"DocumentCreatedEvent","slug":"documentcreatedevent","link":"#documentcreatedevent","children":[]},{"level":3,"title":"DocumentDeletedEvent","slug":"documentdeletedevent","link":"#documentdeletedevent","children":[]},{"level":3,"title":"DocumentUpdatedEvent","slug":"documentupdatedevent","link":"#documentupdatedevent","children":[]},{"level":3,"title":"DocumentWrittenEvent","slug":"documentwrittenevent","link":"#documentwrittenevent","children":[]}]},{"level":2,"title":"Value Types","slug":"value-types","link":"#value-types","children":[{"level":3,"title":"ParameterValue","slug":"parametervalue","link":"#parametervalue","children":[]},{"level":3,"title":"SelectAllCondition","slug":"selectallcondition","link":"#selectallcondition","children":[]}]},{"level":2,"title":"Key Benefits","slug":"key-benefits","link":"#key-benefits","children":[]}],"git":{"updatedTime":1744660884000,"contributors":[{"name":"Kyle","username":"Kyle","email":"ksmontville@gmail.com","commits":2,"url":"https://github.com/Kyle"}]},"filePathRelative":"developer/backend-architecture/api/type-aliases/README.md"}');export{_ as comp,w as data};

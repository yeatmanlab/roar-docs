import{_ as s,c as a,d as n,o as i}from"./app-yhf_7c6-.js";const t={};function l(r,e){return i(),a("div",null,e[0]||(e[0]=[n(`<h1 id="audio-optimization-guide" tabindex="-1"><a class="header-anchor" href="#audio-optimization-guide"><span>Audio Optimization Guide</span></a></h1><h2 id="required-packages" tabindex="-1"><a class="header-anchor" href="#required-packages"><span>Required Packages</span></a></h2><h3 id="install-gsutil" tabindex="-1"><a class="header-anchor" href="#install-gsutil"><span>Install gsutil</span></a></h3><ol><li>Go to the <a href="https://cloud.google.com/storage/docs/gsutil_install" target="_blank" rel="noopener noreferrer">gsutil installation page</a>.</li><li>Select the operating system and platform that matches your computer and download the appropriate file.</li><li>Open your terminal and navigate to the directory where you downloaded the uncompressed file. For example:<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> Downloads</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>Run the installation script:<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">./google-cloud-sdk/install.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>Say <code>yes</code> to any prompts during installation.</li></ul></li></ol><h3 id="install-homebrew" tabindex="-1"><a class="header-anchor" href="#install-homebrew"><span>Install Homebrew</span></a></h3><ol><li>Open your terminal and run the following command:<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">/bin/bash <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh<span class="token variable">)</span></span>&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>After the installation completes, install <code>wget</code> by running:<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">brew <span class="token function">install</span> <span class="token function">wget</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h2 id="copying-files-from-the-bucket" tabindex="-1"><a class="header-anchor" href="#copying-files-from-the-bucket"><span>Copying Files from the Bucket</span></a></h2><ol><li><p>Create a folder on your computer where you want to store the assets. In your terminal, use:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mkdir</span> New-Assets</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Replace <code>New-Assets</code> with your desired folder name.</p></li><li><p>In your browser, navigate to the bucket containing the assets you want to download.</p></li><li><p>Select the assets you want to download and click the <code>DOWNLOAD</code> button. It should look something like this:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">gsutil <span class="token parameter variable">-m</span> <span class="token function">cp</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token string">&quot;gs://roar-swr/es/shared/ROAR-Palabra Instructional Video.mp4&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token string">&quot;gs://roar-swr/es/shared/arrow_left_p2.mp3&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token string">&quot;gs://roar-swr/es/shared/arrow_left_p2.mp3&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token string">&quot;gs://roar-swr/es/shared/arrow_p3.mp3&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token string">&quot;gs://roar-swr/es/shared/arrow_p3.mp3&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token string">&quot;gs://roar-swr/es/shared/arrow_right_p2.mp3&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token string">&quot;gs://roar-swr/es/shared/arrow_right_p2.mp3&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line"><span class="token builtin class-name">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Copy the provided command for downloading the assets.</p></li><li><p>In your terminal, navigate to the folder you just created:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> New-Assets</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Paste the copied command into your terminal and press Enter.</p></li></ol><h2 id="optimize-audios" tabindex="-1"><a class="header-anchor" href="#optimize-audios"><span>Optimize Audios</span></a></h2><ol><li>In the same folder where the assets were created, create a new folder for the desired output bitrate. For example, for 32 kbps:<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mkdir</span> output-32</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>Use the following command to convert the MP3 files to the specified bitrate and store them in the new folder:<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token keyword">for</span> <span class="token for-or-select variable">fn</span> <span class="token keyword">in</span> *.mp3<span class="token punctuation">;</span> <span class="token keyword">do</span> ffmpeg <span class="token parameter variable">-i</span> <span class="token variable">$fn</span> <span class="token parameter variable">-map</span> <span class="token number">0</span>:a:0 <span class="token parameter variable">-b:a</span> 32k ./output-32/<span class="token variable">$fn</span><span class="token punctuation">;</span> <span class="token keyword">done</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h3 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>Note</span></a></h3><p>Repeat the optimization steps for different bitrates (e.g., 64, 96, 128 kbps) by creating separate output folders and adjusting the bitrate in the <code>ffmpeg</code> command. For example, for 64 kbps:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mkdir</span> output-64</span>
<span class="line"><span class="token keyword">for</span> <span class="token for-or-select variable">fn</span> <span class="token keyword">in</span> *.mp3<span class="token punctuation">;</span> <span class="token keyword">do</span> ffmpeg <span class="token parameter variable">-i</span> <span class="token variable">$fn</span> <span class="token parameter variable">-map</span> <span class="token number">0</span>:a:0 <span class="token parameter variable">-b:a</span> 64k ./output-64/<span class="token variable">$fn</span><span class="token punctuation">;</span> <span class="token keyword">done</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="suggested-recommendations" tabindex="-1"><a class="header-anchor" href="#suggested-recommendations"><span>Suggested Recommendations</span></a></h3><p><strong>We recommend using 32k for audio instructions, and at least 96k for stimuli</strong></p>`,15)]))}const p=s(t,[["render",l],["__file","audio-optimization.html.vue"]]),d=JSON.parse('{"path":"/developer/assets-optimization/audio-optimization.html","title":"Audio Optimization Guide","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Required Packages","slug":"required-packages","link":"#required-packages","children":[{"level":3,"title":"Install gsutil","slug":"install-gsutil","link":"#install-gsutil","children":[]},{"level":3,"title":"Install Homebrew","slug":"install-homebrew","link":"#install-homebrew","children":[]}]},{"level":2,"title":"Copying Files from the Bucket","slug":"copying-files-from-the-bucket","link":"#copying-files-from-the-bucket","children":[]},{"level":2,"title":"Optimize Audios","slug":"optimize-audios","link":"#optimize-audios","children":[{"level":3,"title":"Note","slug":"note","link":"#note","children":[]},{"level":3,"title":"Suggested Recommendations","slug":"suggested-recommendations","link":"#suggested-recommendations","children":[]}]}],"git":{"updatedTime":1743546779000,"contributors":[{"name":"Elijah Kelly","username":"Elijah Kelly","email":"kellyel@stanford.edu","commits":1,"url":"https://github.com/Elijah Kelly"},{"name":"emily-ejag","username":"emily-ejag","email":"emily.artegar@gmail.com","commits":1,"url":"https://github.com/emily-ejag"}]},"filePathRelative":"developer/assets-optimization/audio-optimization.md"}');export{p as comp,d as data};

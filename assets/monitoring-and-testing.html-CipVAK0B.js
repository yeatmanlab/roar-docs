import{_ as p,r as o,o as i,c,a as n,b as s,d as e,e as t}from"./app-DOWqbjQg.js";const l={},r=n("h1",{id:"monitoring-and-testing",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#monitoring-and-testing"},[n("span",null,"Monitoring and Testing")])],-1),u=n("br",null,null,-1),d={href:"https://docs.sentry.io",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.cypress.io",target:"_blank",rel:"noopener noreferrer"},v=n("h2",{id:"sentry-integration",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sentry-integration"},[n("span",null,"Sentry Integration")])],-1),h={href:"https://docs.sentry.io/platforms/javascript/",target:"_blank",rel:"noopener noreferrer"},m=n("h3",{id:"creating-a-new-project-in-sentry",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#creating-a-new-project-in-sentry"},[n("span",null,"Creating a New Project in Sentry")])],-1),g={href:"https://roar-89588e380.sentry.io/projects/",target:"_blank",rel:"noopener noreferrer"},y=n("li",null,'On the navigation sidebar, select "Projects" and then select "Create Project" in the top right corner',-1),b=n("li",null,'Select "Browser Javascript" as the SDK platform',-1),f=n("li",null,`For alert frequency select "I'll create my own alerts later"`,-1),w=n("li",null,'Add the project name and the team "#roar"',-1),j=n("li",null,'Navigate back to the "Projects" page; find the new project and click the gear icon to access the project settings',-1),_=n("li",null,[s('Under "SDK Setup", copy the "Client Keys (DSN) which will be used later in the '),n("code",null,"sentry.js"),s(" file in the app repository")],-1),S=t(`<h3 id="sentry-packages" tabindex="-1"><a class="header-anchor" href="#sentry-packages"><span>Sentry Packages</span></a></h3><ul><li>Install the following Sentry packages in the app repository:</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>npm install @sentry<span class="token operator">/</span>browser@latest
npm install @sentry<span class="token operator">/</span>integrations@latest
npm install @sentry<span class="token operator">/</span>wasm@latest
npm install @sentry<span class="token operator">/</span>rollup<span class="token operator">-</span>plugin@latest
npm install @sentry<span class="token operator">/</span>webpack<span class="token operator">-</span>plugin@latest

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="generating-source-maps" tabindex="-1"><a class="header-anchor" href="#generating-source-maps"><span>Generating Source Maps</span></a></h3><p>The Sentry Wizard can be used to generate readable source maps for both Webpack and Rollup configurations. <br> These source maps are essential for debugging and monitoring the app in production. <br><br> Run the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>npx @sentry/wizard@latest <span class="token parameter variable">-i</span> sourcemaps
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The Wizard will guide you through the process of generating source maps for your project. You must complete this step for both Webpack and Rollup configurations. <br> Be sure to copy the SENTRY_AUTH_TOKEN, SENTRY_ORG, and SENTRY_PROJECT keys for use in the app GitHub repository.</p><h3 id="sentry-js" tabindex="-1"><a class="header-anchor" href="#sentry-js"><span>sentry.js</span></a></h3><p>Create a new file called <code>sentry.js</code> in the <code>src</code> directory of the app. This file will define the configuration for Sentry. Copy the file below, making the following changes:</p><ul><li>Update the <code>game</code> and <code>gameShortened</code> variables with the appropriate values for the app</li><li>Change the <code>dsn</code> to the Client Keys (DSN) from the Sentry project</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> Sentry <span class="token keyword">from</span> <span class="token string">&#39;@sentry/browser&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> captureConsoleIntegration<span class="token punctuation">,</span> contextLinesIntegration<span class="token punctuation">,</span> extraErrorDataIntegration <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@sentry/integrations&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> game <span class="token operator">=</span> <span class="token string">&#39;game-name&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> gameShortened <span class="token operator">=</span> <span class="token string">&#39;game-name-shortened&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> regexRoarApp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">^https:\\\\/\\\\/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>game<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">--pr\\\\d+-\\\\w+\\\\.web\\\\.app\\\\/</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> regexRoarStaging <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">^https:\\\\/\\\\/roar-staging\\\\.web\\\\.app\\\\/game\\\\/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>gameShortened<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">|https:\\\\/\\\\/roar-staging--pr\\\\d+-\\\\w+\\\\.web\\\\.app\\\\/</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initSentry</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Sentry<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// Change dsn to the one for the app</span>
    <span class="token literal-property property">dsn</span><span class="token operator">:</span> <span class="token string">&#39;sentry-project-client-key&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">integrations</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      Sentry<span class="token punctuation">.</span><span class="token function">replayIntegration</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">maskAllText</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">maskAllInputs</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      Sentry<span class="token punctuation">.</span><span class="token function">browserTracingIntegration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">captureConsoleIntegration</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">levels</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">contextLinesIntegration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">extraErrorDataIntegration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">attachStacktrace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">// Performance Monitoring</span>
    <span class="token literal-property property">tracesSampleRate</span><span class="token operator">:</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token comment">// Capture 20% of the transactions</span>
    <span class="token literal-property property">tracePropagationTargets</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      regexRoarApp<span class="token punctuation">,</span>
      regexRoarStaging<span class="token punctuation">,</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://roar.education/game/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>gameShortened<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// Session Replay</span>
    <span class="token literal-property property">replaysSessionSampleRate</span><span class="token operator">:</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token comment">// This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.</span>
    <span class="token literal-property property">replaysOnErrorSampleRate</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token comment">// If you&#39;re not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.</span>

    <span class="token function">beforeSend</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> event<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="index-js" tabindex="-1"><a class="header-anchor" href="#index-js"><span>index.js</span></a></h3><p>Now that we have defined the Sentry configuration, we import it into the app&#39;s <code>index.js</code> file. Add the following import statement to the top of the file:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> initSentry <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./sentry&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Then call the <code>initSentry</code> function at the beginning of the <code>init</code> function in the app constructor:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">RoarApp</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">firekit<span class="token punctuation">,</span> gameParams<span class="token punctuation">,</span> userParams<span class="token punctuation">,</span> displayElement</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>gameParams <span class="token operator">=</span> gameParams<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>userParams <span class="token operator">=</span> userParams<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>firekit <span class="token operator">=</span> firekit<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>displayElement <span class="token operator">=</span> displayElement<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>jsPsych <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">initSentry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firekit<span class="token punctuation">.</span><span class="token function">startRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">initConfig</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>firekit<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>gameParams<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userParams<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>displayElement<span class="token punctuation">)</span><span class="token punctuation">;</span>

    store<span class="token punctuation">.</span>session<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;config&#39;</span><span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">buildExperiment</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>firekit<span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> jsPsych<span class="token punctuation">,</span> timeline <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>jsPsych <span class="token operator">=</span> jsPsych<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>jsPsych<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>timeline<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">await</span> <span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firekit<span class="token punctuation">.</span>run<span class="token punctuation">.</span>completed <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>firekit<span class="token punctuation">.</span><span class="token function">abortRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;audio&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>jsPsych<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>jsPsych<span class="token punctuation">.</span><span class="token function">endExperiment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> RoarApp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This will initialize Sentry at the beginning of the app&#39;s execution and enable error tracking and monitoring.</p><h3 id="github-environment-variables" tabindex="-1"><a class="header-anchor" href="#github-environment-variables"><span>GitHub Environment Variables</span></a></h3><p>Add the following environment variables to the action secrets in the GitHub repository for the app:</p><ul><li><code>SENTRY_AUTH_TOKEN</code> = [token returned from the Sentry Wizard]</li><li><code>SENTRY_PROJECT</code> = [project name]</li><li><code>SENTRY_ORG</code> = roar-89588e380</li></ul><h3 id="sentry-alerts" tabindex="-1"><a class="header-anchor" href="#sentry-alerts"><span>Sentry Alerts</span></a></h3><p><strong>Disable localhost Events</strong> <br> We want to disable events that originate from <code>localhost</code>, as they are not relevant for production monitoring.</p><ol><li>Go to the &quot;Settings&quot; page of the project by clicking the gear icon in the top right corner of the project card on the projects page</li><li>Under &quot;Processing&quot;, select &quot;Inbound Filters&quot;</li><li>Enable &quot;Filter out events from localhost&quot;</li></ol><p><strong>Custom Slack Alerts</strong> <br> We want important alerts, such as bugs, user feedback, and performance issues to be sent to the appropriate Slack channel. We can simply duplicate the alerts that have already been set up on the other apps.</p><ol><li>Click &quot;Alerts&quot; on the navigation sidebar</li><li>Select the &quot;swr&quot; project (although any project will work)</li><li>Click &quot;Slack Integration Issue Report&quot;</li><li>Click &quot;Duplicate&quot; in the top right corner</li><li>Under &quot;Select an environment and project&quot;, select the new Sentry project from the dropdown</li><li>Scroll to the bottom of the page and under &quot;Add a name and owner&quot;, remove the &quot;copy&quot; part of the alert name and select &quot;#roar&quot; as the team</li><li>Click &quot;Save Rule&quot;</li><li>Repeat for the &quot;Slack Integration Performance Report&quot; and any other alerts that are relevant</li></ol><h2 id="cypress-integration" tabindex="-1"><a class="header-anchor" href="#cypress-integration"><span>Cypress Integration</span></a></h2>`,26),x={href:"https://docs.cypress.io/guides/getting-started/installing-cypress",target:"_blank",rel:"noopener noreferrer"},q=t(`<h3 id="cypress-packages" tabindex="-1"><a class="header-anchor" href="#cypress-packages"><span>Cypress Packages</span></a></h3><ul><li>Install the following Cypress packages in the app repository:</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>npm install cypress@latest <span class="token operator">--</span>save<span class="token operator">-</span>dev
npm install eslint<span class="token operator">-</span>plugin<span class="token operator">-</span>cypress@latest <span class="token operator">--</span>save<span class="token operator">-</span>dev
npm install fkill<span class="token operator">-</span>cli@latest <span class="token operator">--</span>save<span class="token operator">-</span>dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cypress-configuration" tabindex="-1"><a class="header-anchor" href="#cypress-configuration"><span>Cypress Configuration</span></a></h3><p>Run the following command to create the Cypress configuration file:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>npx cypress <span class="token function">open</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This will open a configuration wizard and create a Cypress config file <code>cypress.config.js</code> in the app repository.</p><h3 id="creating-a-new-project-in-cypress" tabindex="-1"><a class="header-anchor" href="#creating-a-new-project-in-cypress"><span>Creating a New Project in Cypress</span></a></h3>`,8),C={href:"https://cloud.cypress.io/organizations/ed07b9f9-d1f7-4784-953a-eecbb7303e36/projects",target:"_blank",rel:"noopener noreferrer"},R=n("li",null,'Go to "Projects" and select "New Project"',-1),P=n("li",null,'Add the project name and select "Private"',-1),E=n("li",null,[s("Copy the "),n("code",null,"projectId"),s(" into the "),n("code",null,"cypress.config.js"),s(" file in the app repository")],-1),T=n("li",null,[s('Select "GitHub Actions" as the CI provider and copy the '),n("code",null,"CYPRESS_RECORD_KEY"),s(" for use in the GitHub repository secrets")],-1),A=t(`<p>Copy the <code>cypress.config.js</code> file below, substituting the appropriate \`projectId:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;cypress&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">projectId</span><span class="token operator">:</span> <span class="token string">&#39;app-project-id&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">e2e</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">experimentalRunAllSpecs</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">retries</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token comment">// eslint-disable-next-line no-unused-vars</span>
    <span class="token function">setupNodeEvents</span><span class="token punctuation">(</span><span class="token parameter">on<span class="token punctuation">,</span> config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// implement node event listeners here</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">baseUrl</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">CYPRESS_BASE_URL</span> <span class="token operator">??</span> <span class="token string">&#39;http://localhost:8000&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="package-json" tabindex="-1"><a class="header-anchor" href="#package-json"><span>package.json</span></a></h3><p>Add the following scripts to the <code>package.json</code> <code>scripts</code> key in the app repository:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span> 
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;predev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;fkill :8000 -f || true&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;preprod&quot;</span><span class="token operator">:</span> <span class="token string">&quot;fkill :8000 -f || true&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;cypress:open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cypress open&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="eslintrc-json" tabindex="-1"><a class="header-anchor" href="#eslintrc-json"><span>eslintrc.json</span></a></h3><p>Add the following configuration to the <code>eslintrc.json</code> <code>extends</code> key in the app repository:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;airbnb-base&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;prettier&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;plugin:cypress/recommended&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="first-test-spec" tabindex="-1"><a class="header-anchor" href="#first-test-spec"><span>First Test Spec</span></a></h3><p>The Cypress configuration should have created a <code>cypress/</code> directory in the app repository. Within the <code>cypress/e2e/</code> directory, create the following test spec: <code>template.spec.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;template spec&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&quot;passes&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    cy<span class="token punctuation">.</span><span class="token function">visit</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.cypress.io&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If the test initializes and passes when a new pull request is pushed to the app repo, Cypress is correctly configured and monitoring the app. We can delete this test spec once the app is ready for a proper test suite.</p>`,12);function I(N,O){const a=o("ExternalLinkIcon");return i(),c("div",null,[r,n("p",null,[s("All ROAR apps and the ROAR Dashboard must be monitored and tested. This document provides a guide for setting up monitoring and testing for new ROAR apps. "),u,n("a",d,[s("Sentry"),e(a)]),s(" and "),n("a",k,[s("Cypress"),e(a)]),s(" are used for monitoring and testing, respectively.")]),v,n("p",null,[s("Additional information can be found in the official "),n("a",h,[s("Sentry documentation."),e(a)])]),m,n("ol",null,[n("li",null,[s("Enter the Sentry dashboard with your "),n("a",g,[s("account"),e(a)])]),y,b,f,w,j,_]),S,n("p",null,[s("Additional information can be found in the official "),n("a",x,[s("Cypress documentation."),e(a)])]),q,n("ol",null,[n("li",null,[s("Enter the Cypress dashboard with your "),n("a",C,[s("account"),e(a)])]),R,P,E,T]),A])}const Y=p(l,[["render",I],["__file","monitoring-and-testing.html.vue"]]),D=JSON.parse('{"path":"/integrating-new-apps/monitoring-and-testing.html","title":"Monitoring and Testing","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Sentry Integration","slug":"sentry-integration","link":"#sentry-integration","children":[{"level":3,"title":"Creating a New Project in Sentry","slug":"creating-a-new-project-in-sentry","link":"#creating-a-new-project-in-sentry","children":[]},{"level":3,"title":"Sentry Packages","slug":"sentry-packages","link":"#sentry-packages","children":[]},{"level":3,"title":"Generating Source Maps","slug":"generating-source-maps","link":"#generating-source-maps","children":[]},{"level":3,"title":"sentry.js","slug":"sentry-js","link":"#sentry-js","children":[]},{"level":3,"title":"index.js","slug":"index-js","link":"#index-js","children":[]},{"level":3,"title":"GitHub Environment Variables","slug":"github-environment-variables","link":"#github-environment-variables","children":[]},{"level":3,"title":"Sentry Alerts","slug":"sentry-alerts","link":"#sentry-alerts","children":[]}]},{"level":2,"title":"Cypress Integration","slug":"cypress-integration","link":"#cypress-integration","children":[{"level":3,"title":"Cypress Packages","slug":"cypress-packages","link":"#cypress-packages","children":[]},{"level":3,"title":"Cypress Configuration","slug":"cypress-configuration","link":"#cypress-configuration","children":[]},{"level":3,"title":"Creating a New Project in Cypress","slug":"creating-a-new-project-in-cypress","link":"#creating-a-new-project-in-cypress","children":[]},{"level":3,"title":"package.json","slug":"package-json","link":"#package-json","children":[]},{"level":3,"title":"eslintrc.json","slug":"eslintrc-json","link":"#eslintrc-json","children":[]},{"level":3,"title":"First Test Spec","slug":"first-test-spec","link":"#first-test-spec","children":[]}]}],"git":{"updatedTime":1718320513000,"contributors":[{"name":"Kyle","email":"ksmontville@gmail.com","commits":2}]},"filePathRelative":"integrating-new-apps/monitoring-and-testing.md"}');export{Y as comp,D as data};

import{_ as s,c as l,a as t,e as a,f as n,b as r,r as o,o as d}from"./app-DuNi5qR2.js";const u={};function p(m,e){const i=o("RouteLink");return d(),l("div",null,[e[62]||(e[62]=t("h1",{id:"interfaces",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#interfaces"},[t("span",null,"Interfaces")])],-1)),e[63]||(e[63]=t("p",null,"This documentation covers the interfaces that define the core data structures and contracts in the ROAR Firebase Functions library.",-1)),e[64]||(e[64]=t("h2",{id:"administration-assessment",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#administration-assessment"},[t("span",null,"Administration & Assessment")])],-1)),t("ul",null,[t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/Administration.html"},{default:n(()=>e[0]||(e[0]=[r("Administration")])),_:1}),e[1]||(e[1]=r(" - Core data structure for administrations including assessments and org settings"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/AdministrationBaseRepository.html"},{default:n(()=>e[2]||(e[2]=[r("AdministrationBaseRepository")])),_:1}),e[3]||(e[3]=r(" - Base repository for Administration CRUD operations"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/AdministrationService.html"},{default:n(()=>e[4]||(e[4]=[r("AdministrationService")])),_:1}),e[5]||(e[5]=r(" - Service layer for administration operations"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/Assessment.html"},{default:n(()=>e[6]||(e[6]=[r("Assessment")])),_:1}),e[7]||(e[7]=r(" - Data structure for individual assessments and parameters"))])]),e[65]||(e[65]=t("h2",{id:"identity-authorization",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#identity-authorization"},[t("span",null,"Identity & Authorization")])],-1)),t("ul",null,[t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/IdentityProvider.html"},{default:n(()=>e[8]||(e[8]=[r("IdentityProvider")])),_:1}),e[9]||(e[9]=r(" - Provider identity and sync state"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/IdentityProviderService.html"},{default:n(()=>e[10]||(e[10]=[r("IdentityProviderService")])),_:1}),e[11]||(e[11]=r(" - Identity provider operations"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/User.html"},{default:n(()=>e[12]||(e[12]=[r("User")])),_:1}),e[13]||(e[13]=r(" - Basic user properties"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/UserClaim.html"},{default:n(()=>e[14]||(e[14]=[r("UserClaim")])),_:1}),e[15]||(e[15]=r(" - User permissions and roles"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/UserClaimBaseRepository.html"},{default:n(()=>e[16]||(e[16]=[r("UserClaimBaseRepository")])),_:1}),e[17]||(e[17]=r(" - Repository for user claims"))])]),e[66]||(e[66]=t("h2",{id:"organizations",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#organizations"},[t("span",null,"Organizations")])],-1)),t("ul",null,[t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/OrgBase.html"},{default:n(()=>e[18]||(e[18]=[r("OrgBase")])),_:1}),e[19]||(e[19]=r(" - Core organization data model"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/OrgBaseRepository.html"},{default:n(()=>e[20]||(e[20]=[r("OrgBaseRepository")])),_:1}),e[21]||(e[21]=r(" - Organization repository operations"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/OrgsList.html"},{default:n(()=>e[22]||(e[22]=[r("OrgsList")])),_:1}),e[23]||(e[23]=r(" - Organization ID collection structure"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/EducationalOrgsList.html"},{default:n(()=>e[24]||(e[24]=[r("EducationalOrgsList")])),_:1}),e[25]||(e[25]=r(" - Educational institution organization list"))])]),e[67]||(e[67]=t("h2",{id:"repository-base-classes",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#repository-base-classes"},[t("span",null,"Repository Base Classes")])],-1)),t("ul",null,[t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/BaseRepository.html"},{default:n(()=>e[26]||(e[26]=[r("BaseRepository")])),_:1}),e[27]||(e[27]=r(" - Generic repository with CRUD operations"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/Result.html"},{default:n(()=>e[28]||(e[28]=[r("Result")])),_:1}),e[29]||(e[29]=r(" - Operation result wrapper"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/FilterAdapter.html"},{default:n(()=>e[30]||(e[30]=[r("FilterAdapter")])),_:1}),e[31]||(e[31]=r(" - Filter format conversion"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/SingleFilter.html"},{default:n(()=>e[32]||(e[32]=[r("SingleFilter")])),_:1}),e[33]||(e[33]=r(" - Field comparison filter"))])]),e[68]||(e[68]=t("h2",{id:"repository-parameters",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#repository-parameters"},[t("span",null,"Repository Parameters")])],-1)),t("ul",null,[t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/CreateParams.html"},{default:n(()=>e[34]||(e[34]=[r("CreateParams")])),_:1}),e[35]||(e[35]=r(" - Create operation parameters"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/DeleteParams.html"},{default:n(()=>e[36]||(e[36]=[r("DeleteParams")])),_:1}),e[37]||(e[37]=r(" - Delete operation parameters"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/GetParams.html"},{default:n(()=>e[38]||(e[38]=[r("GetParams")])),_:1}),e[39]||(e[39]=r(" - Get operation parameters"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/UpdateParams.html"},{default:n(()=>e[40]||(e[40]=[r("UpdateParams")])),_:1}),e[41]||(e[41]=r(" - Update operation parameters"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/GetByNameParams.html"},{default:n(()=>e[42]||(e[42]=[r("GetByNameParams")])),_:1}),e[43]||(e[43]=r(" - Name lookup parameters"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/GetByRoarUidParams.html"},{default:n(()=>e[44]||(e[44]=[r("GetByRoarUidParams")])),_:1}),e[45]||(e[45]=r(" - ROAR UID lookup parameters"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/RunTransactionParams.html"},{default:n(()=>e[46]||(e[46]=[r("RunTransactionParams")])),_:1}),e[47]||(e[47]=r(" - Transaction parameters"))])]),e[69]||(e[69]=t("h2",{id:"firestore-implementation",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#firestore-implementation"},[t("span",null,"Firestore Implementation")])],-1)),t("ul",null,[t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/FirestoreImplementation.html"},{default:n(()=>e[48]||(e[48]=[r("FirestoreImplementation")])),_:1}),e[49]||(e[49]=r(" - Firestore-specific repository and service implementation"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/FirestoreCreateParams.html"},{default:n(()=>e[50]||(e[50]=[r("FirestoreCreateParams")])),_:1}),e[51]||(e[51]=r(" - Firestore create parameters"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/FirestoreDeleteParams.html"},{default:n(()=>e[52]||(e[52]=[r("FirestoreDeleteParams")])),_:1}),e[53]||(e[53]=r(" - Firestore delete parameters"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/FirestoreGetParams.html"},{default:n(()=>e[54]||(e[54]=[r("FirestoreGetParams")])),_:1}),e[55]||(e[55]=r(" - Firestore get parameters"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/FirestoreUpdateParams.html"},{default:n(()=>e[56]||(e[56]=[r("FirestoreUpdateParams")])),_:1}),e[57]||(e[57]=r(" - Firestore update parameters"))])]),e[70]||(e[70]=t("h2",{id:"legal-consent",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#legal-consent"},[t("span",null,"Legal & Consent")])],-1)),t("ul",null,[t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/Legal.html"},{default:n(()=>e[58]||(e[58]=[r("Legal")])),_:1}),e[59]||(e[59]=r(" - Legal information structure"))]),t("li",null,[a(i,{to:"/developer/backend-architecture/api/interfaces/interfaces/AssentConsent.html"},{default:n(()=>e[60]||(e[60]=[r("AssentConsent")])),_:1}),e[61]||(e[61]=r(" - Assent/consent document structure"))])])])}const v=s(u,[["render",p],["__file","index.html.vue"]]),b=JSON.parse('{"path":"/developer/backend-architecture/api/interfaces/","title":"Interfaces","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Administration & Assessment","slug":"administration-assessment","link":"#administration-assessment","children":[]},{"level":2,"title":"Identity & Authorization","slug":"identity-authorization","link":"#identity-authorization","children":[]},{"level":2,"title":"Organizations","slug":"organizations","link":"#organizations","children":[]},{"level":2,"title":"Repository Base Classes","slug":"repository-base-classes","link":"#repository-base-classes","children":[]},{"level":2,"title":"Repository Parameters","slug":"repository-parameters","link":"#repository-parameters","children":[]},{"level":2,"title":"Firestore Implementation","slug":"firestore-implementation","link":"#firestore-implementation","children":[]},{"level":2,"title":"Legal & Consent","slug":"legal-consent","link":"#legal-consent","children":[]}],"git":{"updatedTime":1744660884000,"contributors":[{"name":"Kyle","username":"Kyle","email":"ksmontville@gmail.com","commits":2,"url":"https://github.com/Kyle"}]},"filePathRelative":"developer/backend-architecture/api/interfaces/README.md"}');export{v as comp,b as data};

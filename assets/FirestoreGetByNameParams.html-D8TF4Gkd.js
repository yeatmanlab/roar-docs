import{_ as o,c as l,a,e as t,f as s,b as i,d as n,r as p,o as d}from"./app-D5uAIr3F.js";const m={};function c(f,e){const r=p("RouteLink");return d(),l("div",null,[a("p",null,[t(r,{to:"/developer/backend-architecture/api/"},{default:s(()=>e[0]||(e[0]=[a("strong",null,"@roar-firebase-functions/core",-1)])),_:1})]),e[13]||(e[13]=a("hr",null,null,-1)),a("p",null,[t(r,{to:"/developer/backend-architecture/api/"},{default:s(()=>e[1]||(e[1]=[i("@roar-firebase-functions/core")])),_:1}),e[2]||(e[2]=i(" / FirestoreGetByNameParams"))]),e[14]||(e[14]=n('<h1 id="interface-firestoregetbynameparams" tabindex="-1"><a class="header-anchor" href="#interface-firestoregetbynameparams"><span>Interface: FirestoreGetByNameParams</span></a></h1><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/types/firestore/params/administration.params.ts#L9" target="_blank" rel="noopener noreferrer">packages/core/src/types/firestore/params/administration.params.ts:9</a></p><p>Interface extending GetByNameParams for Firestore specific operations. Adds optional select parameter to specify which fields to retrieve.</p><h2 id="extends" tabindex="-1"><a class="header-anchor" href="#extends"><span>Extends</span></a></h2>',4)),a("ul",null,[a("li",null,[t(r,{to:"/developer/backend-architecture/api/interfaces/GetByNameParams.html"},{default:s(()=>e[3]||(e[3]=[a("code",null,"GetByNameParams",-1)])),_:1})])]),e[15]||(e[15]=n('<h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="limit" tabindex="-1"><a class="header-anchor" href="#limit"><span>limit?</span></a></h3><blockquote><p><code>optional</code> <strong>limit</strong>: <code>number</code></p></blockquote><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/repositories/base/administration.base.repository.interface.ts#L13" target="_blank" rel="noopener noreferrer">packages/core/src/repositories/base/administration.base.repository.interface.ts:13</a></p><p>Optional limit for the number of results</p><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from"><span>Inherited from</span></a></h4>',6)),a("p",null,[t(r,{to:"/developer/backend-architecture/api/interfaces/GetByNameParams.html"},{default:s(()=>e[4]||(e[4]=[a("code",null,"GetByNameParams",-1)])),_:1}),e[6]||(e[6]=i(".")),t(r,{to:"/developer/backend-architecture/api/interfaces/GetByNameParams.html#limit"},{default:s(()=>e[5]||(e[5]=[a("code",null,"limit",-1)])),_:1})]),e[16]||(e[16]=n('<hr><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h3><blockquote><p><strong>name</strong>: <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/repositories/base/administration.base.repository.interface.ts#L12" target="_blank" rel="noopener noreferrer">packages/core/src/repositories/base/administration.base.repository.interface.ts:12</a></p><p>The name to search for</p><h4 id="inherited-from-1" tabindex="-1"><a class="header-anchor" href="#inherited-from-1"><span>Inherited from</span></a></h4>',6)),a("p",null,[t(r,{to:"/developer/backend-architecture/api/interfaces/GetByNameParams.html"},{default:s(()=>e[7]||(e[7]=[a("code",null,"GetByNameParams",-1)])),_:1}),e[9]||(e[9]=i(".")),t(r,{to:"/developer/backend-architecture/api/interfaces/GetByNameParams.html#name"},{default:s(()=>e[8]||(e[8]=[a("code",null,"name",-1)])),_:1})]),e[17]||(e[17]=n('<hr><h3 id="select" tabindex="-1"><a class="header-anchor" href="#select"><span>select?</span></a></h3><blockquote><p><code>optional</code> <strong>select</strong>: <code>string</code> | <code>FieldPath</code></p></blockquote><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/types/firestore/params/administration.params.ts#L10" target="_blank" rel="noopener noreferrer">packages/core/src/types/firestore/params/administration.params.ts:10</a></p><p>Optional field path or string to specify which fields to retrieve.</p><h4 id="overrides" tabindex="-1"><a class="header-anchor" href="#overrides"><span>Overrides</span></a></h4>',6)),a("p",null,[t(r,{to:"/developer/backend-architecture/api/interfaces/GetByNameParams.html"},{default:s(()=>e[10]||(e[10]=[a("code",null,"GetByNameParams",-1)])),_:1}),e[12]||(e[12]=i(".")),t(r,{to:"/developer/backend-architecture/api/interfaces/GetByNameParams.html#select"},{default:s(()=>e[11]||(e[11]=[a("code",null,"select",-1)])),_:1})])])}const u=o(m,[["render",c],["__file","FirestoreGetByNameParams.html.vue"]]),h=JSON.parse('{"path":"/developer/backend-architecture/api/interfaces/FirestoreGetByNameParams.html","title":"Interface: FirestoreGetByNameParams","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Extends","slug":"extends","link":"#extends","children":[]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[{"level":3,"title":"limit?","slug":"limit","link":"#limit","children":[]},{"level":3,"title":"name","slug":"name","link":"#name","children":[]},{"level":3,"title":"select?","slug":"select","link":"#select","children":[]}]}],"git":{"updatedTime":1744657380000,"contributors":[{"name":"Kyle","username":"Kyle","email":"ksmontville@gmail.com","commits":1,"url":"https://github.com/Kyle"}]},"filePathRelative":"developer/backend-architecture/api/interfaces/FirestoreGetByNameParams.md"}');export{u as comp,h as data};

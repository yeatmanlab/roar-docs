import{_ as o,c as d,a as r,e as a,f as i,b as s,d as n,r as c,o as m}from"./app-DJ04AWGL.js";const l={};function p(f,e){const t=c("RouteLink");return m(),d("div",null,[r("p",null,[a(t,{to:"/developer/backend-architecture/api/"},{default:i(()=>e[0]||(e[0]=[r("strong",null,"@roar-firebase-functions/core",-1)])),_:1})]),e[5]||(e[5]=r("hr",null,null,-1)),r("p",null,[a(t,{to:"/developer/backend-architecture/api/"},{default:i(()=>e[1]||(e[1]=[s("@roar-firebase-functions/core")])),_:1}),e[2]||(e[2]=s(" / AdministrationService"))]),e[6]||(e[6]=n('<h1 id="interface-administrationservice" tabindex="-1"><a class="header-anchor" href="#interface-administrationservice"><span>Interface: AdministrationService</span></a></h1><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/services/administration.service.interface.ts#L59" target="_blank" rel="noopener noreferrer">packages/core/src/services/administration.service.interface.ts:59</a></p><p>An interface representing the administration service. This interface is used to define the higher order operations that can be performed on administrations.</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="getadministrationidsforadministrator" tabindex="-1"><a class="header-anchor" href="#getadministrationidsforadministrator"><span>getAdministrationIdsForAdministrator()</span></a></h3><blockquote><p><strong>getAdministrationIdsForAdministrator</strong>(<code>params</code>): <code>Promise</code>&lt;<code>string</code>[]&gt;</p></blockquote><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/services/administration.service.interface.ts#L83" target="_blank" rel="noopener noreferrer">packages/core/src/services/administration.service.interface.ts:83</a></p><p>Retrieves the administration IDs for the specified administrator.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="params" tabindex="-1"><a class="header-anchor" href="#params"><span>params</span></a></h5>',10)),r("p",null,[a(t,{to:"/developer/backend-architecture/api/interfaces/GetAdministrationIdsForAdministratorParams.html"},{default:i(()=>e[3]||(e[3]=[r("code",null,"GetAdministrationIdsForAdministratorParams",-1)])),_:1})]),e[7]||(e[7]=n('<p>The parameters to retrieve the administration IDs for the specified administrator.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>string</code>[]&gt;</p><p>The administration IDs for the specified administrator.</p><hr><h3 id="getadministrationidsfromorgs" tabindex="-1"><a class="header-anchor" href="#getadministrationidsfromorgs"><span>getAdministrationIdsFromOrgs()</span></a></h3><blockquote><p><strong>getAdministrationIdsFromOrgs</strong>(<code>params</code>): <code>Promise</code>&lt;<code>string</code>[]&gt;</p></blockquote><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/services/administration.service.interface.ts#L70" target="_blank" rel="noopener noreferrer">packages/core/src/services/administration.service.interface.ts:70</a></p><p>Retrieves the administration IDs for the specified orgs.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="params-1" tabindex="-1"><a class="header-anchor" href="#params-1"><span>params</span></a></h5>',11)),r("p",null,[a(t,{to:"/developer/backend-architecture/api/interfaces/GetAdministrationIdsFromOrgsParams-1.html"},{default:i(()=>e[4]||(e[4]=[r("code",null,"GetAdministrationIdsFromOrgsParams",-1)])),_:1})]),e[8]||(e[8]=r("p",null,"The parameters to retrieve the administration IDs for the specified orgs.",-1)),e[9]||(e[9]=r("h4",{id:"returns-1",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#returns-1"},[r("span",null,"Returns")])],-1)),e[10]||(e[10]=r("p",null,[r("code",null,"Promise"),s("<"),r("code",null,"string"),s("[]>")],-1)),e[11]||(e[11]=r("p",null,"The administration IDs for the specified orgs.",-1))])}const g=o(l,[["render",p],["__file","AdministrationService.html.vue"]]),u=JSON.parse('{"path":"/developer/backend-architecture/api/interfaces/AdministrationService.html","title":"Interface: AdministrationService","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[{"level":3,"title":"getAdministrationIdsForAdministrator()","slug":"getadministrationidsforadministrator","link":"#getadministrationidsforadministrator","children":[]},{"level":3,"title":"getAdministrationIdsFromOrgs()","slug":"getadministrationidsfromorgs","link":"#getadministrationidsfromorgs","children":[]}]}],"git":{"updatedTime":1744657380000,"contributors":[{"name":"Kyle","username":"Kyle","email":"ksmontville@gmail.com","commits":1,"url":"https://github.com/Kyle"}]},"filePathRelative":"developer/backend-architecture/api/interfaces/AdministrationService.md"}');export{g as comp,u as data};

import{_ as l,c as o,a as n,e as a,f as t,d as i,r,o as p}from"./app-Ddwicbh1.js";const c={},d={id:"firebaseappclient",tabindex:"-1"},u={class:"header-anchor",href:"#firebaseappclient"},b={id:"firebaseauthclient",tabindex:"-1"},h={class:"header-anchor",href:"#firebaseauthclient"},m={id:"firestoreclient",tabindex:"-1"},k={class:"header-anchor",href:"#firestoreclient"},v={id:"org-names",tabindex:"-1"},f={class:"header-anchor",href:"#org-names"};function g(y,s){const e=r("RouteLink");return p(),o("div",null,[s[4]||(s[4]=n("h1",{id:"variables-api-documentation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#variables-api-documentation"},[n("span",null,"Variables API Documentation")])],-1)),s[5]||(s[5]=n("p",null,"This documentation covers the constant variables and client instances used in the ROAR Firebase Functions backend architecture. These variables provide essential Firebase client instances and system constants.",-1)),s[6]||(s[6]=n("h2",{id:"firebase-client-instances",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#firebase-client-instances"},[n("span",null,"Firebase Client Instances")])],-1)),n("h3",d,[n("a",u,[n("span",null,[a(e,{to:"/developer/backend-architecture/api/variables/FirebaseAppClient.html"},{default:t(()=>s[0]||(s[0]=[n("code",null,"FirebaseAppClient",-1)])),_:1})])])]),s[7]||(s[7]=i(`<p>The main Firebase App instance used throughout the application.</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> FirebaseAppClient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@roar-firebase-functions/core&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Access Firebase app configuration</span></span>
<span class="line"><span class="token keyword">const</span> appConfig <span class="token operator">=</span> FirebaseAppClient<span class="token punctuation">.</span>options<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),n("h3",b,[n("a",h,[n("span",null,[a(e,{to:"/developer/backend-architecture/api/variables/FirebaseAuthClient.html"},{default:t(()=>s[1]||(s[1]=[n("code",null,"FirebaseAuthClient",-1)])),_:1})])])]),s[8]||(s[8]=i(`<p>Firebase Authentication client instance for handling user authentication.</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> FirebaseAuthClient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@roar-firebase-functions/core&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Example usage in authentication operations</span></span>
<span class="line"><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> FirebaseAuthClient<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),n("h3",m,[n("a",k,[n("span",null,[a(e,{to:"/developer/backend-architecture/api/variables/FirestoreClient.html"},{default:t(()=>s[2]||(s[2]=[n("code",null,"FirestoreClient",-1)])),_:1})])])]),s[9]||(s[9]=i(`<p>Firestore database client instance for database operations.</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> FirestoreClient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@roar-firebase-functions/core&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Example of accessing Firestore collections</span></span>
<span class="line"><span class="token keyword">const</span> usersCollection <span class="token operator">=</span> FirestoreClient<span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="system-constants" tabindex="-1"><a class="header-anchor" href="#system-constants"><span>System Constants</span></a></h2>`,3)),n("h3",v,[n("a",f,[n("span",null,[a(e,{to:"/developer/backend-architecture/api/variables/ORG_NAMES.html"},{default:t(()=>s[3]||(s[3]=[n("code",null,"ORG_NAMES",-1)])),_:1})])])]),s[10]||(s[10]=i(`<p>Array of valid organization names used throughout ROAR.</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">ORG_NAMES</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@roar-firebase-functions/core&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Validate organization name</span></span>
<span class="line"><span class="token keyword">const</span> isValidOrg <span class="token operator">=</span> <span class="token constant">ORG_NAMES</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>orgName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="usage-patterns" tabindex="-1"><a class="header-anchor" href="#usage-patterns"><span>Usage Patterns</span></a></h2><p>These variables are typically used in the following ways:</p><ol><li><p>Client Initialization</p><ul><li>Firebase clients are initialized once and reused</li><li>Provides consistent access to Firebase services</li><li>Ensures proper configuration across the application</li></ul></li><li><p>Authentication and Database Operations</p><ul><li>Used for user management</li><li>Database CRUD operations</li><li>Security and access control</li></ul></li><li><p>Organization Validation</p><ul><li>Validating organization names</li><li>Type checking</li><li>Maintaining consistency in organization references</li></ul></li></ol><p>For more details on each variable, click the links above to view the individual documentation pages.</p><h2 id="best-practices" tabindex="-1"><a class="header-anchor" href="#best-practices"><span>Best Practices</span></a></h2><ul><li>Always use the provided client instances rather than creating new ones</li><li>Reference <code>ORG_NAMES</code> for organization validation</li><li>Handle potential initialization errors appropriately</li><li>Use type annotations with client instances for better type safety</li></ul>`,8))])}const A=l(c,[["render",g],["__file","index.html.vue"]]),C=JSON.parse('{"path":"/developer/backend-architecture/api/variables/","title":"Variables API Documentation","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Firebase Client Instances","slug":"firebase-client-instances","link":"#firebase-client-instances","children":[{"level":3,"title":"FirebaseAppClient","slug":"firebaseappclient","link":"#firebaseappclient","children":[]},{"level":3,"title":"FirebaseAuthClient","slug":"firebaseauthclient","link":"#firebaseauthclient","children":[]},{"level":3,"title":"FirestoreClient","slug":"firestoreclient","link":"#firestoreclient","children":[]}]},{"level":2,"title":"System Constants","slug":"system-constants","link":"#system-constants","children":[{"level":3,"title":"ORG_NAMES","slug":"org-names","link":"#org-names","children":[]}]},{"level":2,"title":"Usage Patterns","slug":"usage-patterns","link":"#usage-patterns","children":[]},{"level":2,"title":"Best Practices","slug":"best-practices","link":"#best-practices","children":[]}],"git":{"updatedTime":1744660884000,"contributors":[{"name":"Kyle","username":"Kyle","email":"ksmontville@gmail.com","commits":2,"url":"https://github.com/Kyle"}]},"filePathRelative":"developer/backend-architecture/api/variables/README.md"}');export{A as comp,C as data};

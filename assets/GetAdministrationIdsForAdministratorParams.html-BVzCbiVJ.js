import{_ as n,c as o,a,e as t,f as i,b as s,d as c,r as d,o as l}from"./app-BKP6CJ_6.js";const p={};function m(h,e){const r=d("RouteLink");return l(),o("div",null,[a("p",null,[t(r,{to:"/developer/backend-architecture/api/"},{default:i(()=>e[0]||(e[0]=[a("strong",null,"@roar-firebase-functions/core",-1)])),_:1})]),e[3]||(e[3]=a("hr",null,null,-1)),a("p",null,[t(r,{to:"/developer/backend-architecture/api/"},{default:i(()=>e[1]||(e[1]=[s("@roar-firebase-functions/core")])),_:1}),e[2]||(e[2]=s(" / GetAdministrationIdsForAdministratorParams"))]),e[4]||(e[4]=c('<h1 id="interface-getadministrationidsforadministratorparams" tabindex="-1"><a class="header-anchor" href="#interface-getadministrationidsforadministratorparams"><span>Interface: GetAdministrationIdsForAdministratorParams</span></a></h1><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/services/administration.service.interface.ts#L31" target="_blank" rel="noopener noreferrer">packages/core/src/services/administration.service.interface.ts:31</a></p><p>The parameters for the getAdministrationsForAdministrator method.</p><h2 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h2><p>The administrator&#39;s Roar UID.</p><h2 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h2><p>Whether to restrict the administrations to open administrations.</p><h2 id="param-2" tabindex="-1"><a class="header-anchor" href="#param-2"><span>Param</span></a></h2><p>Whether to use test data.</p><h2 id="param-3" tabindex="-1"><a class="header-anchor" href="#param-3"><span>Param</span></a></h2><p>Whether to log verbose output.</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="administratorroaruid" tabindex="-1"><a class="header-anchor" href="#administratorroaruid"><span>administratorRoarUid</span></a></h3><blockquote><p><strong>administratorRoarUid</strong>: <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/services/administration.service.interface.ts#L32" target="_blank" rel="noopener noreferrer">packages/core/src/services/administration.service.interface.ts:32</a></p><hr><h3 id="restricttoopenadministrations" tabindex="-1"><a class="header-anchor" href="#restricttoopenadministrations"><span>restrictToOpenAdministrations?</span></a></h3><blockquote><p><code>optional</code> <strong>restrictToOpenAdministrations</strong>: <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/services/administration.service.interface.ts#L33" target="_blank" rel="noopener noreferrer">packages/core/src/services/administration.service.interface.ts:33</a></p><hr><h3 id="testdata" tabindex="-1"><a class="header-anchor" href="#testdata"><span>testData?</span></a></h3><blockquote><p><code>optional</code> <strong>testData</strong>: <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/services/administration.service.interface.ts#L34" target="_blank" rel="noopener noreferrer">packages/core/src/services/administration.service.interface.ts:34</a></p><hr><h3 id="verbose" tabindex="-1"><a class="header-anchor" href="#verbose"><span>verbose?</span></a></h3><blockquote><p><code>optional</code> <strong>verbose</strong>: <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/yeatmanlab/roar-firebase-functions/blob/24ea7b8e0f05ba2fca7d62901c43f15726f15a89/packages/core/src/services/administration.service.interface.ts#L35" target="_blank" rel="noopener noreferrer">packages/core/src/services/administration.service.interface.ts:35</a></p>',27))])}const b=n(p,[["render",m],["__file","GetAdministrationIdsForAdministratorParams.html.vue"]]),u=JSON.parse('{"path":"/developer/backend-architecture/api/interfaces/GetAdministrationIdsForAdministratorParams.html","title":"Interface: GetAdministrationIdsForAdministratorParams","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Param","slug":"param","link":"#param","children":[]},{"level":2,"title":"Param","slug":"param-1","link":"#param-1","children":[]},{"level":2,"title":"Param","slug":"param-2","link":"#param-2","children":[]},{"level":2,"title":"Param","slug":"param-3","link":"#param-3","children":[]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[{"level":3,"title":"administratorRoarUid","slug":"administratorroaruid","link":"#administratorroaruid","children":[]},{"level":3,"title":"restrictToOpenAdministrations?","slug":"restricttoopenadministrations","link":"#restricttoopenadministrations","children":[]},{"level":3,"title":"testData?","slug":"testdata","link":"#testdata","children":[]},{"level":3,"title":"verbose?","slug":"verbose","link":"#verbose","children":[]}]}],"git":{"updatedTime":1744657380000,"contributors":[{"name":"Kyle","username":"Kyle","email":"ksmontville@gmail.com","commits":1,"url":"https://github.com/Kyle"}]},"filePathRelative":"developer/backend-architecture/api/interfaces/GetAdministrationIdsForAdministratorParams.md"}');export{b as comp,u as data};

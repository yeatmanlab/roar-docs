import{_ as s,c as a,d as e,o as t}from"./app-BLIgrNMv.js";const p={};function l(i,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="roar-word" tabindex="-1"><a class="header-anchor" href="#roar-word"><span>ROAR Word</span></a></h1><h2 id="translation-guide-for-roar-word" tabindex="-1"><a class="header-anchor" href="#translation-guide-for-roar-word"><span>Translation Guide for ROAR Word</span></a></h2><h4 id="_1-introduction" tabindex="-1"><a class="header-anchor" href="#_1-introduction"><span>1. Introduction</span></a></h4><p>Welcome to the ROAR-Word Translation Guide — your comprehensive companion for making ROAR-Word accessible to a global audience. As we strive to break language barriers and reach learners worldwide, this guide outlines the steps to seamlessly integrate translations into the app.</p><p><strong>What This Guide Covers:</strong></p><ul><li><p><strong>Folder Structure:</strong> Learn how to organize word corpora and translation files within the app&#39;s directory.</p></li><li><p><strong>Internationalization Setup:</strong> Dive into the setup of internationalization using i18next. Discover the process of adding new translations as the app evolves, fostering continuous improvement and expansion into diverse linguistic landscapes.</p></li><li><p><strong>Asset Management:</strong> Collaborate with partners to ensure all required assets from <code>assets.json</code> are provided. Add the provided assets to Google Buckets. This section also details the importance of proper asset naming and organization.</p></li><li><p><strong>Collaboration:</strong> Clearly state the expectations from partners regarding the provision of wordlist corpus files, translation files, and assets.</p></li><li><p><strong>Testing and Deployment:</strong> Ensure the effectiveness of your translations by following testing procedures and deploying language updates seamlessly.</p></li></ul><h4 id="_2-folder-structure" tabindex="-1"><a class="header-anchor" href="#_2-folder-structure"><span>2. Folder Structure</span></a></h4><h5 id="_2-1-wordlist-corpus" tabindex="-1"><a class="header-anchor" href="#_2-1-wordlist-corpus"><span>2.1. Wordlist Corpus</span></a></h5><p>Create a new folder under <code>src/wordlist</code> for each language, using the initials of the language. Inside each language folder, include at least two files: <code>practice.csv</code> and <code>itembank.csv</code>. Collaborate with partners to obtain the necessary content for these files.</p><p>Example:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">src/</span>
<span class="line">├─ wordlist/</span>
<span class="line">|   ├─ en/          // English</span>
<span class="line">|       ├─ practice.csv</span>
<span class="line">|       ├─ itembank.csv</span>
<span class="line">|   ├─ es/          // Spanish (Add more languages as needed)</span>
<span class="line">|       ├─ practice.csv</span>
<span class="line">|       ├─ itembank.csv</span>
<span class="line">├─ ...</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-2-translation-items" tabindex="-1"><a class="header-anchor" href="#_2-2-translation-items"><span>2.2. Translation Items</span></a></h5><p>Create a new folder under <code>src/locales</code> for each language, using the initials of the language. Inside each language folder, include a file named <code>translation.json</code>. Ensure that all languages follow the same structure in their translation files. Collaborate with partners to obtain and maintain translation content.</p><p>Example:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">src/</span>
<span class="line">├─ locales/</span>
<span class="line">|   ├─ en/          // English</span>
<span class="line">|       ├─ translation.json</span>
<span class="line">|   ├─ es/          // Spanish (Add more languages as needed)</span>
<span class="line">|       ├─ translation.json</span>
<span class="line">├─ ...</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-internationalization-setup" tabindex="-1"><a class="header-anchor" href="#_3-internationalization-setup"><span>3. Internationalization Setup</span></a></h4><h5 id="_3-1-file-src-experiment-i18n-js" tabindex="-1"><a class="header-anchor" href="#_3-1-file-src-experiment-i18n-js"><span>3.1. File <code>src/experiment/i18n.js</code></span></a></h5><p>On <code>i18n.js</code>, import all the files from the <strong>wordlist corpus</strong> and <strong>translation items</strong>. For example <code>import enTranslations from &#39;../locales/en/translation.json&#39;;</code> Inside the file you will find the initialization of i18next and language detection. You must include all <code>wordlist</code> items to manage different language corpora.</p><p>The following code represents the <code>i18n.js</code> file with comments on where to add files and define other languages:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// Import the necessary modules and functions</span></span>
<span class="line"><span class="token keyword">import</span> i18next <span class="token keyword">from</span> <span class="token string">&#39;i18next&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> LanguageDetector <span class="token keyword">from</span> <span class="token string">&#39;i18next-browser-languagedetector&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Import all your wordlist files</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Define the wordlist object for managing corpus</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> wordlist <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">en</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">dataPracticeURL</span><span class="token operator">:</span> enDataPracticeURL<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">dataValidatedURL</span><span class="token operator">:</span> enDataValidatedURL<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">dataNewURL</span><span class="token operator">:</span> enDataNewURL<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">es</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">dataPracticeURL</span><span class="token operator">:</span> esDataPracticeURL<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">dataValidatedURL</span><span class="token operator">:</span> esDataValidatedURL<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">dataNewURL</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">it</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">dataPracticeURL</span><span class="token operator">:</span> itDataPracticeURL<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">dataValidatedURL</span><span class="token operator">:</span> itDataValidatedURL<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">dataNewURL</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// add additional language</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Set up i18next</span></span>
<span class="line">i18next</span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>LanguageDetector<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;languageChanged&#39;</span><span class="token punctuation">,</span> processCSV<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">debug</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">load</span><span class="token operator">:</span> <span class="token string">&#39;languageOnly&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">fallbackLng</span><span class="token operator">:</span> <span class="token string">&#39;en&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">detection</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">order</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;defaultToEnglish&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;querystring&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">resources</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">en</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">translation</span><span class="token operator">:</span> enTranslations<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">es</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">translation</span><span class="token operator">:</span> esTranslations<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">it</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">translation</span><span class="token operator">:</span> itTranslations<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token comment">// add additional language</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-file-src-experiment-trials-languageselect-js" tabindex="-1"><a class="header-anchor" href="#_3-2-file-src-experiment-trials-languageselect-js"><span>3.2. File <code>src/experiment/trials/languageSelect.js</code></span></a></h4><p>The following code represents a trial for language selection within your app:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// Define the language selection trial</span></span>
<span class="line"><span class="token keyword">const</span> languageSelectTrial <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">type</span><span class="token operator">:</span> jsPsychSurveyHtmlForm<span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">preamble</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">    &lt;div&gt;</span>
<span class="line">      &lt;h1&gt;Looks like we couldn&#39;t detect what your default browser language is.&lt;/h1&gt;</span>
<span class="line">      &lt;h1&gt;Please select the language you are most fluent in.&lt;/h1&gt;</span>
<span class="line">    &lt;/div&gt;</span>
<span class="line">  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">    &lt;select id=&quot;languageSelect&quot; name=&quot;language&quot;&gt;</span>
<span class="line">      &lt;option value=&quot;en&quot;&gt;English&lt;/option&gt;</span>
<span class="line">      &lt;option value=&quot;es&quot;&gt;Spanish&lt;/option&gt;</span>
<span class="line">      &lt;option value=&quot;it&quot;&gt;Italian&lt;/option&gt;</span>
<span class="line">      // add additional language</span>
<span class="line">    &lt;/select&gt;</span>
<span class="line">  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">button_label</span><span class="token operator">:</span> <span class="token string">&#39;Continue&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token function-variable function">on_load</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> formContainer <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;jspsych-survey-html-form&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    formContainer<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;languageForm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;languageSelect&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> <span class="token string">&#39;2vh&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token function-variable function">on_finish</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Change the language based on user selection</span></span>
<span class="line">    <span class="token keyword">await</span> i18next<span class="token punctuation">.</span><span class="token function">changeLanguage</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>response<span class="token punctuation">.</span>language<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    store<span class="token punctuation">.</span>session<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;language&#39;</span><span class="token punctuation">,</span> i18next<span class="token punctuation">.</span>language<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This trial presents a form allowing users to select their preferred language. The selected language is then used to change the app&#39;s language through i18next.</p><p>Make sure to integrate these code snippets into your app&#39;s structure, adapting them as needed for any additional languages or specific requirements.</p><h4 id="_3-asset-management" tabindex="-1"><a class="header-anchor" href="#_3-asset-management"><span>3. Asset Management</span></a></h4><h5 id="_3-1-assets-json" tabindex="-1"><a class="header-anchor" href="#_3-1-assets-json"><span>3.1. <code>assets.json</code></span></a></h5><ul><li>Collaborate with partners to ensure all required assets from <code>assets.json</code> are provided.</li><li>Add the provided assets to google buckets.</li></ul><h5 id="_3-2-google-buckets" tabindex="-1"><a class="header-anchor" href="#_3-2-google-buckets"><span>3.2. Google Buckets</span></a></h5><ul><li>Follow the English folder setup in the Google bucket to load the provided assets for each language. The bucket name is <code>roar-swr</code></li></ul><h4 id="_4-collaboration" tabindex="-1"><a class="header-anchor" href="#_4-collaboration"><span>4. Collaboration</span></a></h4><p>Clearly state the expectations from partners regarding the provision of wordlist corpus files, translation files, and assets.</p><h4 id="_5-testing" tabindex="-1"><a class="header-anchor" href="#_5-testing"><span>5. Testing</span></a></h4><p>For testing an specific language we will have to include <code>/?lng=language</code>. For example for English, we will use <code>/?lng=en</code>.</p><p>Roar-word has two principal modes of testing: <code>fullRandom&amp;storyoption=false</code> and <code>fullRandom&amp;storyoption=true</code>.</p><ul><li><p><code>fullRandom&amp;storyoption=false</code> tests the game picking the words from the wordlist randomly without showing a story. This mode is tipycally recommended for grades 1-6.</p></li><li><p><code>fullRandom&amp;storyoption=true</code> tests the game picking the words from the wordlist randomly showing a story. This mode is tipycally recommended for grades 6 and above.</p></li></ul><p>To access this modes, we will have to include the parameters to the link, For example for English no story should be <code>https://link-testing-or-localhost/?lng=en&amp;mode=fullRandom&amp;storyoption=false</code>.</p><p>Additionally, Roar-word is adapted to three different devices with have to be tested: <strong>Desktop, Tablet and Mobile</strong>.</p>`,38)]))}const r=s(p,[["render",l],["__file","SWR.html.vue"]]),c=JSON.parse('{"path":"/developer/internationalization/SWR.html","title":"ROAR Word","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Translation Guide for ROAR Word","slug":"translation-guide-for-roar-word","link":"#translation-guide-for-roar-word","children":[]}],"git":{"updatedTime":1743546779000,"contributors":[{"name":"Elijah Kelly","username":"Elijah Kelly","email":"kellyel@stanford.edu","commits":2,"url":"https://github.com/Elijah Kelly"},{"name":"Emily Arteaga","username":"Emily Arteaga","email":"62304493+Emily-ejag@users.noreply.github.com","commits":3,"url":"https://github.com/Emily Arteaga"}]},"filePathRelative":"developer/internationalization/SWR.md"}');export{r as comp,c as data};
